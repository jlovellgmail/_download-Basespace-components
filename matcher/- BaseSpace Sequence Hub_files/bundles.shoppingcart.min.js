var bs;!function(bs){var Models;!function(Models){var Validation;!function(Validation){Validation.ERROR="error",Validation.WARNING="warning",Validation.VALID="valid",Validation.ALL_INVALID_CLASSES=Validation.ERROR+" "+Validation.WARNING,Validation.PROJECT_NAME_MAX_LENGTH=100,Validation.PROJECT_DESCRIPTION_MAX_LENGTH=500,Validation.PROJECT_ID_REQUIRED="An ID is required for this project.",Validation.PROJECT_NAME_REQUIRED="A name is required for this project.",Validation.PROJECT_NAME_TOO_LONG="Project names must not exceed 100 characters.",Validation.PROJECT_DESCRIPTION_TOO_LONG="Project descriptions must not exceed 500 characters.",Validation.ANALYSIS_NAME_MAX_LENGTH=100,Validation.ANALYSIS_IDTOKEN_REQUIRED="An ID Token is required for this analysis.",Validation.ANALYSIS_NAME_REQUIRED="A name is required for this analysis.",Validation.ANALYSIS_NAME_TOO_LONG="Analysis names must not exceed 100 characters."}(Validation=Models.Validation||(Models.Validation={}))}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Errors;!function(Errors){var Store=function(){function Store(){}return Store.errorCodes={InvalidApplicationId:"STORE.APPLICATIONS.INVALID_APPLICATION_ID"},Store}();Errors.Store=Store}(Errors=bs.Errors||(bs.Errors={}))}(bs||(bs={}));var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},bs;!function(bs){var Views;!function(Views){var ModalDialogs;!function(ModalDialogs){var ModalDialog=function(_super){function ModalDialog(){_super.call(this);var regionManager=new Marionette.RegionManager;this.regions=regionManager.addRegions({modalBody:".modal-body"})}return __extends(ModalDialog,_super),Object.defineProperty(ModalDialog.prototype,"$dialogConfirm",{get:function(){return $(".modal-confirm")},enumerable:!0,configurable:!0}),Object.defineProperty(ModalDialog.prototype,"$dialogCancel",{get:function(){return $(".modal-cancel")},enumerable:!0,configurable:!0}),ModalDialog.prototype.onShow=function(){var _this=this;$("#bs-modal-dialog").on("hidden.bs.modal",function(){_this.close()}),$("#bs-modal-dialog").modal({backdrop:"static"})},ModalDialog.prototype.onClose=function(){this.trigger(bs.Events.DIALOG_CANCEL)},ModalDialog.prototype.hide=function(){$("#bs-modal-dialog").modal("hide"),this.trigger(bs.Events.DIALOG_CANCEL)},ModalDialog.prototype.markInputInvalid=function($input,$errorContainer,errorType,message){setTimeout(function(){$input.removeClass(bs.Models.Validation.ALL_INVALID_CLASSES),$input.addClass(errorType),$errorContainer.show().text(message)},125)},ModalDialog.prototype.markInputValid=function($input,$errorContainer){$input.removeClass(bs.Models.Validation.ALL_INVALID_CLASSES),$errorContainer.text("").hide()},ModalDialog}(Marionette.Layout);ModalDialogs.ModalDialog=ModalDialog}(ModalDialogs=Views.ModalDialogs||(Views.ModalDialogs={}))}(Views=bs.Views||(bs.Views={}))}(bs||(bs={}));var bs;!function(bs){bs.FETCH_PROJECTS="users/current/projects",bs.FETCH_PROJECT="projects/",bs.FETCH_SAMPLE="samples/",bs.FETCH_PROJECT_SAMPLES="samples",bs.OS_WIN="windows",bs.OS_MAC="mac",bs.OS_LINUX="linux",bs.OS_OTHER="other",bs.MESSAGE_PROJECT_NOT_OWNER="You aren't the owner of this project.",bs.MESSAGE_ANALYSIS_NOT_OWNER="You aren't the owner of this analysis.",bs.MESSAGE_PROJECT_PENDING_TRANSFER="This project is pending transfer of ownership.",bs.BACKBONE_METHOD_MAP={create:"POST",update:"POST",patch:"POST","delete":"DELETE",read:"GET"},bs.XHR_OPTIONS={xhrFields:{withCredentials:$.support.cors},crossDomain:$.support.cors,error:function(){}},bs.context={project:null,analysis:null,appResult:null},bs.API_FIELD_MAP_RESTAPI_TO_PRIVATE={DateCreated:"createdAt",DateCreatedFormatted:"createdAt"},bs.initSiteConfiguration=function(){bs.config=$("#site-config");bs.config[0];bs.BASE_URI=bs.config.data("bsApiBaseUri"),bs.V2_BASE_URI=bs.config.data("bsV2ApiBaseUri"),bs.BASE_URI_PROXY_FALLBACK=bs.config.data("bsApiBaseUriProxyFallback"),bs.STORE_BASE_API_URI=bs.config.data("bsStoreApiBaseUri"),bs.STORE_BASE_API_URI_PROXY_FALLBACK=bs.config.data("bsStoreApiBaseUriProxyFallback"),bs.hasDownloader=bs.config.data("bsHasSupportedDownloader"),bs.hasWebUploaderSample=bs.config.data("bsHasWebUploadSample"),bs.hasNeoPrep=bs.config.data("bsHasNeoPrep"),bs.hasMiniSeq=bs.config.data("bsHasMiniSeq"),bs.CDN_URL=bs.config.data("bsCdnUrl"),bs.hasWebUploaderManifestTrex=bs.config.data("bsHasWebUploadManifestTrex"),bs.hasWebUploaderManifestNrc=bs.config.data("bsHasWebUploadManifestNrc"),bs.isEnhancedAnalysisDetailsEnabled=bs.config.data("bsIsEnhancedAnalysisDetailsEnabled"),toastr.options={closeButton:!1,debug:!1,positionClass:"toast-top-right",onclick:null,showDuration:300,hideDuration:1e3,timeOut:5e3,extendedTimeOut:1e3,showEasing:"swing",hideEasing:"linear",showMethod:"fadeIn",hideMethod:"fadeOut"},bs.currentUser=new bs.Models.User({Id:bs.config.data("bsCurrentUserId"),Email:bs.config.data("bsCurrentUsername")}),bs.api=new bs.Api({baseUri:bs.BASE_URI,baseUriProxyFallback:bs.BASE_URI_PROXY_FALLBACK})};var BsApiHelper=function(){function BsApiHelper(){}return BsApiHelper.getBaseApiUrl=function(){return $.support.cors?bs.BASE_URI:bs.BASE_URI_PROXY_FALLBACK},BsApiHelper.getV2BaseApiUrl=function(){return bs.V2_BASE_URI},BsApiHelper.getStoreApiUrl=function(){return $.support.cors?bs.STORE_BASE_API_URI:bs.STORE_BASE_API_URI_PROXY_FALLBACK},BsApiHelper}();bs.BsApiHelper=BsApiHelper;var BsDetectionHelper=function(){function BsDetectionHelper(){}return BsDetectionHelper.getOperatingSystem=function(){var name=bs.OS_OTHER;return-1!=navigator.appVersion.indexOf("Win")&&(name=bs.OS_WIN),-1!=navigator.appVersion.indexOf("Mac")&&(name=bs.OS_MAC),-1!=navigator.appVersion.indexOf("Linux")&&(name=bs.OS_LINUX),name},BsDetectionHelper}();bs.BsDetectionHelper=BsDetectionHelper,bs.UPLOADER_APPLICATION_ID="10"}(bs||(bs={}));var bs;!function(bs){var Views;!function(Views){var ModalDialogs;!function(ModalDialogs){var ServerError=function(_super){function ServerError(){_super.call(this),this.compileTemplateHTML=function(){return _.template(bs.Templates.dialogServerError)}}return __extends(ServerError,_super),Object.defineProperty(ServerError.prototype,"events",{get:function(){return{"click .bs-event-uservoice":this.userVoiceDialog}},enumerable:!0,configurable:!0}),Object.defineProperty(ServerError.prototype,"template",{get:function(){return this.compileTemplateHTML},enumerable:!0,configurable:!0}),ServerError.prototype.userVoiceDialog=function(){$("#uvTabLabel img").click(),this.hide()},ServerError}(ModalDialogs.ModalDialog);ModalDialogs.ServerError=ServerError}(ModalDialogs=Views.ModalDialogs||(Views.ModalDialogs={}))}(Views=bs.Views||(bs.Views={}))}(bs||(bs={}));var bs;!function(bs){var Controllers;!function(Controllers){var ModalDialogController=function(){function ModalDialogController(){}return ModalDialogController.showModalDialog=function(dialog){$(".modal-backdrop").remove(),$(".bootstrap-modal").length<1&&$("body").append('<div class="bootstrap-modal"></div>');var regionManager=new Marionette.RegionManager,regions=regionManager.addRegions({modalContainer:".bootstrap-modal"});regions.modalContainer.show(dialog)},ModalDialogController}();Controllers.ModalDialogController=ModalDialogController}(Controllers=bs.Controllers||(bs.Controllers={}))}(bs||(bs={}));var bs;!function(bs){var Routers;!function(Routers){var Router=function(_super){function Router(options){var _this=this;_super.call(this,options),this.NAV_DIRECTION_FORWARD="forward",this.NAV_DIRECTION_BACKWARD="backward",this.NAV_DIRECTION_NONE="none",this.eventAggregator=options.eventAggregator,options.originalUrlQueryParams&&(this.originalUrlQueryParams=options.originalUrlQueryParams),this.navDirection=this.NAV_DIRECTION_NONE,this.eventAggregator.off(bs.Events.REQUEST_ROUTE_NAVIGATE),this.eventAggregator.on(bs.Events.REQUEST_ROUTE_NAVIGATE,function(route,appendToCurrentRoute){void 0===appendToCurrentRoute&&(appendToCurrentRoute=!1),_this._onRequestRouteNavigate(route,appendToCurrentRoute)}),$(window).on("popstate",function(){_this._onpopstate()})}return __extends(Router,_super),Router.prototype.navigateToSection=function(fragment,onbeforeunload){$(window).off("beforeunload"),$(window).off("unload");var previousFragment=Backbone.history.getFragment(),trimmedPrevious=previousFragment.replace(/(^\/|\/$)/g,""),trimmedNew=fragment.replace(/(^\/|\/$)/g,""),countSlashesPrevious=trimmedPrevious.split("/").length,countSlashesNew=trimmedNew.split("/").length;this.navDirection=countSlashesNew>countSlashesPrevious?this.NAV_DIRECTION_FORWARD:countSlashesPrevious>countSlashesNew?this.NAV_DIRECTION_BACKWARD:this.NAV_DIRECTION_NONE,this.navigate(fragment,{trigger:!0})},Router.prototype._onRequestRouteNavigate=function(fragment,appendToCurrentFragment){if(void 0===appendToCurrentFragment&&(appendToCurrentFragment=!1),appendToCurrentFragment)this.navigateToSection(Backbone.history.getFragment()+"/"+fragment);else{var routeToRequest,isRootRelative=fragment.search(/^\//)>-1;routeToRequest=isRootRelative?fragment.substring(fragment.indexOf(Backbone.history.options.root)+Backbone.history.options.root.length,fragment.length):fragment,this.navigateToSection(routeToRequest)}},Router.prototype._onpopstate=function(){$(window).off("beforeunload")},Router}(Marionette.AppRouter);Routers.Router=Router}(Routers=bs.Routers||(bs.Routers={}))}(bs||(bs={}));var bs;!function(bs){var Events;!function(Events){Events.JQUERY_LOADING_OVERLAY_START="jquery-loading-overlay:start",Events.JQUERY_LOADING_OVERLAY_DONE="jquery-loading-overlay:done"}(Events=bs.Events||(bs.Events={}))}(bs||(bs={})),function($){var loadingMessageClass="jquery-loading-message",methods={start:function(settings){return this.each(function(){$(this).trigger(bs.Events.JQUERY_LOADING_OVERLAY_START,settings)})},done:function(){return this.each(function(){$(this).trigger(bs.Events.JQUERY_LOADING_OVERLAY_DONE)})}};$(document).on(bs.Events.JQUERY_LOADING_OVERLAY_START,"*",function(e,customSettings){if($(this).find("."+loadingMessageClass).length<1&&e.target==e.currentTarget){var settings={html:"Loading...",css:{position:"absolute",left:"0",top:"0",width:"100%",height:"100%","text-align":"center",margin:"0",padding:"0"}};$.extend(!0,settings,customSettings);var parentPositionCss=$(this).css("position");"absolute"!=parentPositionCss&&"relative"!=parentPositionCss&&"fixed"!=parentPositionCss&&$(this).css("position","relative");var $wrappedHtml=($(this).width(),$(this).height(),$("<div class='"+loadingMessageClass+"'>"+settings.html+"</div>").css(settings.css));$(this).append($wrappedHtml),$(this).on(bs.Events.JQUERY_LOADING_OVERLAY_DONE,function(e){e.target==e.currentTarget&&$wrappedHtml.remove(),$(this).css("position","static")})}}),$.fn.loadingOverlay=function(methodToCall){return methods[methodToCall]?methods[methodToCall].apply(this,Array.prototype.slice.call(arguments,1)):($.error("jQuery.loading: method "+methodToCall+" doesn't exist."),!1)}}(jQuery);var bs;!function(bs){var Events;!function(Events){!function(UploadingStates){UploadingStates[UploadingStates.INITIAL=0]="INITIAL",UploadingStates[UploadingStates.PENDING_FOLDER_SELECTION=1]="PENDING_FOLDER_SELECTION",UploadingStates[UploadingStates.UPLOADING=2]="UPLOADING",UploadingStates[UploadingStates.ERROR=3]="ERROR",UploadingStates[UploadingStates.COMPLETE=4]="COMPLETE",UploadingStates[UploadingStates.VALIDATING=5]="VALIDATING"}(Events.UploadingStates||(Events.UploadingStates={}));Events.UploadingStates;Events.REAL_WINDOW_RESIZE="realWindowResize",Events.BACKBONE_SYNC="sync",Events.BACKBONE_REQUEST="request",Events.BACKBONE_ERROR="error",Events.BACKBONE_RESET="reset",Events.BACKBONE_CHANGE="change",Events.KENDO_DATABOUND="bs-kendo-data-bound",Events.NEW_DATA_SOURCE="bs-new-data-source",Events.REQUEST_ROUTE_NAVIGATE="bs-request-route-navigate",Events.REQUEST_TOOLBAR="bs-request-toolbar",Events.FETCHING_START="bs-fetching-start",Events.FETCHING_DONE="bs-fetching-done",Events.SERVER_ERROR="bs-server-error",Events.VALIDATION_ERROR="bs-validation-error",Events.NO_ITEM_SELECTED="bs-no-item-selected",Events.ONE_ITEM_SELECTED="bs-one-item-selected",Events.MULTIPLE_ITEMS_SELECTED="bs-multiple-items-selected",Events.REQUEST_SEARCH_QUERY="bs-request-search-query",Events.CLEAR_SEARCH=" bs-clear-search",Events.REQUEST_STATE="bs-request-state",Events.REQUEST_SAVE_MODEL="bs-request-save-model",Events.REQUEST_EDIT_PROJECT="bs-request-edit-project",Events.REQUEST_SHARE_PROJECT="bs-request-share-project",Events.REQUEST_SHARE_PROJECT_BY_LINK="bs-request-share-project-by-link",Events.REQUEST_DELETE_PROJECT="bs-request-delete-project",Events.REQUEST_COMBINE_SAMPLES="bs-request-combine-samples",Events.REQUEST_COPY_SAMPLES="bs-request-copy-samples",Events.REQUEST_TRANSFER_PROJECT_OWNERSHIP="bs-request-transfer-project-ownership",Events.CREATE_PROJECT_SUCCESS="bs-create-project-success",Events.COMBINE_SAMPLES_SUCCESS="bs-combine-samples-success",Events.COPY_SAMPLES_SUCCESS="bs-copy-samples-success",Events.SAVE_SHARING_SETTINGS_SUCCESS="bs-save-sharing-settings-success",Events.CREATE_PROJECT_SUCCESS="bs-create-project-success",Events.DIALOG_CANCEL="bs-dialog-cancel",Events.DIALOG_CONFIRM="bs-dialog-confirm",Events.TRANSITION_END="transition-end",Events.TRANSITION_BEGIN="transition-begin",Events.ADD_OVERLAY="add-overlay",Events.REMOVE_OVERLAY="remove-overlay",Events.LAB_CACHE_BIOSAMPLES="lab-cache-biosamples",Events.LAB_CACHE_LIBRARIES="lab-cache-libraries",Events.LAB_CACHE_LIBRARY_CONTAINERS="lab-cache-library-containers",Events.LAB_CACHE_LIBRARY_POOLS="lab-cache-library-pools",Events.LAB_CACHE_PLANNEDRUNS="lab-cache-planned-runs",Events.LAB_LIBRARY_WELL_CHANGE="lab-library-well-change",Events.LAB_LIBRARY_WELL_CHANGE_MANY="lab-library-well-change-many",Events.LAB_LIBRARY_WELL_CLEAR_ALL="lab-library-well-clear-all",Events.LAB_POOL_OPTION_CHANGED="lab-pool-option-changed",Events.LAB_POOL_NEW_ADDED="lab-pool-new-added",Events.LAB_POOL_CLEAR_MAPPINGS="lab-pool-clear-mappings",Events.LAB_POOL_CLEAR_MAPPINGS_ALL="lab-pool-clear-mappings-all",Events.LAB_POOL_HOVER="lab_pool_hover",Events.LAB_POOL_HOVER_CLEAR="lab_pool_hover_clear",Events.LAB_POOL_WELL_ASSIGNED="lab_pool_well_assigned",Events.LAB_PREP_LIBRARY_PREP_CHANGED="lab-prep-library-prep-changed",Events.LAB_PREP_LIBRARIES_DRAG="lab-prep-libraries-drag",Events.LAB_PREP_LIBRARIES_DRAGEND="lab-prep-libraries-dragend",Events.LAB_PREP_LIBRARIES_TABLE_DESELECT_ALL="lab-prep-libraries-table-deselect-all",Events.LAB_PREP_CUSTOM_LIBRARY_KIT_ADDED="lab-prep-custom-library-kit-added",Events.LAB_PREP_CUSTOM_LIBRARY_KIT_DELETED="lab-prep-custom-library-kit-deleted",Events.LAB_PREP_INDEX_BY_WELL_ENABLED="lab-prep-index-by-well-enabled",Events.LAB_BIO_SAMPLES_ADDED="bio-samples-added",Events.LAB_PLATE_TO_PREVIEW="lab-plate-to-import",Events.LAB_EDIT_COMPLETE="lab-edit-complete",Events.LAB_EDIT_START="lab-edit_state",Events.LAB_FOOTER_SET_MODEL="lab-footer-set-model",Events.DOWNLOAD_SELECTED_FILES="download-selected-files",Events.BILLING_SPEC_ERROR="billing-spec-error"}(Events=bs.Events||(bs.Events={}))}(bs||(bs={})),function($){$(document).data("lastWindowHeight",$(window).height()),$(document).data("lastWindowWidth",$(window).width()),$(window).resize(function(){($(window).height()!=$(document).data("lastWindowHeight")||$(window).width()!=$(document).data("lastWindowWidth"))&&($(document).data("lastWindowHeight",$(window).height()),$(document).data("lastWindowWidth",$(window).width()),$(window).trigger(bs.Events.REAL_WINDOW_RESIZE))})}(jQuery);var bs;!function(bs){var Models;!function(Models){var Model=function(_super){function Model(input){var _this=this;this._pendingFetchMethod=null,this.attributeFetchMethods={},this.attributesAttemptedToFetch=[],this.attributesBeingFetched=[],this.activeFetchMethods=[],this.isFetching=!1,this.hasFetched=!1,this.idAttribute="Id",this.fetchable=!0,_super.call(this,input);for(var key in input)key&&(this[key]=input[key]);this.on(bs.Events.BACKBONE_REQUEST,function(){_this.isFetching=!0}),this.on(bs.Events.BACKBONE_SYNC,function(){_this.isFetching=!1,_this.hasFetched=!0}),this.on(bs.Events.BACKBONE_ERROR,function(){_this.isFetching=!1})}return __extends(Model,_super),Object.defineProperty(Model.prototype,"defaults",{get:function(){return{}},set:function(json){this.defaults=json},enumerable:!0,configurable:!0}),Model.prototype.itemsToModelArray=function(items,ctor){var modelArray=[];return _.each(items,function(item){modelArray.push(new ctor(item))}),modelArray},Model.prototype.hasOwnFetchMethod=function(attrName){return attrName in this.attributeFetchMethods?!0:!1},Model.prototype.setFetchMethodInactive=function(fetchMethod){this.activeFetchMethods=_.without(this.activeFetchMethods,fetchMethod)},Model.prototype.parse=function(response,options){return response.Response},Model.prototype.sync=function(method,model,options){var methodMap=bs.BACKBONE_METHOD_MAP,type=methodMap[method];_.defaults(options||(options={}),{emulateHTTP:Backbone.emulateHTTP,emulateJSON:Backbone.emulateJSONBackbone});var params={type:type,dataType:"json"};if(options.url||(params.url=_.result(model,"url")||$.error("URL Must be provided.")),null!=options.data||!model||"create"!==method&&"update"!==method&&"patch"!==method||(params.contentType="application/json",params.data=JSON.stringify(options.attrs||model.toJSON(options))),options.emulateJSON&&(params.contentType="application/x-www-form-urlencoded",params.data=params.data?{model:params.data}:{}),options.emulateHTTP&&("PUT"===type||"DELETE"===type||"PATCH"===type)){params.type="POST",options.emulateJSON&&(params.data._method=type);var beforeSend=options.beforeSend;options.beforeSend=function(xhr){return xhr.setRequestHeader("X-HTTP-Method-Override",type),beforeSend?beforeSend.apply(this,arguments):void 0}}"GET"===params.type||options.emulateJSON||(params.processData=!1),"PATCH"!==params.type||!window.ActiveXObject||window.external&&window.external.msActiveXFilteringEnabled||(params.xhr=function(){return new ActiveXObject("Microsoft.XMLHTTP")});var xhr=options.xhr=Backbone.ajax(_.extend(params,options));return model.trigger("request",model,xhr,options),xhr},Model.ID_ATTRIBUTE_NAME="Id",Model}(Backbone.Model);Models.Model=Model}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){bs.Templates={dialogShareProjectCollaboratorItem:'<li class="bs-modal-project-collaborator-item bs-modal-project-collaborator-item-visible" style="display: none">            <span class="collaborator-user-name" id="collaborator-user-name"><%= collaborator.Email %></span>            <a class="bs-modal-project-collaborator-remove-btn close pull-right" name="remove-btn">×</a>            <div class="pull-right">                <select class="form-control input-sm pull-right bs-modal-project-collaborator-permission-select" name="permissions" id="permission-types">                    <option value="ROLE_READER">Read Only</option>                    <option value="ROLE_WRITER">Write</option>                </select>            </div>                        <div class="bs-modal-project-status">pending</div>        </li>          <li class="bs-modal-project-collaborator-item bs-modal-project-collaborator-remove-confirmation alert alert-danger" style="display: none">            <span class="bs-modal-project-collaborator-username" id="Span1"><%= collaborator.Email %></span>            <a class="bs-modal-project-collaborator-remove-btn close pull-right" name="remove-btn" id="remove-btn">×</a>            <div class="pull-right">                <a class="btn btn-mini btn-danger bs-modal-project-collaborator-btn-undo" name="undo-btn">Undo</a>            </div>        </li>',contextualSearch:'<div class="bs-search-contextual">        <input type="text" class="bs-search-input" placeholder="Search this project" />    </div>',searchPage:'<section class="toolbar-container">    </section>    <h1 class="bs-section-heading">Search results</h1>    <div class="search-results-container"></div>',kendoContainerDetailsLibrariesTable:'<tr role="row" data-resource-id="#: Id #" data-uid="#: Id #" data-bioSample-id="#: BiologicalSample.Id #" >        <td role="gridcell" class="bs-linenums">#: LineNum #</td>        <td role="gridcell" class="select">            <input type="checkbox" class="kendo-row-checkbox"/>            <label class="bs-input-checkbox-img"></label>        </td>        <td role="gridcell"><a class="lab-route-link" href="/lab/bio-samples/#: BiologicalSample.Id #">#: BiologicalSample.UserSampleId #</a></td>        <td role="gridcell">#: BiologicalSample.Name #</td>        <td role="gridcell">#: ContainerPosition #</td>        <td role="gridcell">#: Index1.Name # - #: Index1.Sequence #</td>        <td role="gridcell">#: Index2.Name # - #: Index2.Sequence #</td>    </tr>',kendoPoolDetailsLibrariesTable:'<tr role="row" data-resource-id="#: Id #" data-uid="#: Id #" data-bioSample-id="#: BiologicalSample.Id #" >        <td role="gridcell" class="bs-linenums">#: LineNum #</td>        <td role="gridcell"><a class="lab-route-link" href="/lab/bio-samples/#: BiologicalSample.Id #">#: BiologicalSample.UserSampleId #</a></td>        <td role="gridcell">#: BiologicalSample.Name #</td>        <td role="gridcell">#: Project.Name #</td>        <td role="gridcell">#: LibraryPrep.Name #</td>        <td role="gridcell">#: Index1.Name # - #: Index1.Sequence #</td>        <td role="gridcell">            # if(Index2.Name != null) { #                #: Index2.Name # - #: Index2.Sequence #            # } else { #                -            # } #        </td>        # if (Container.ContainerType == "Library Card") { #            <td role="gridcell"><a class="lab-route-link" href="/lab/neoprep-library-container/#: Container.Id #">#: Container.UserContainerId #</a></td>        # } else { #            <td role="gridcell"><a class="lab-route-link" href="/lab/library-plates/#: Container.Id #">#: Container.UserContainerId #</a></td>        # } #               </tr>',kendoPlannedRunDetailsPoolsTable:'<tr role="row" data-resource-id="#: LibraryPool.Id #" data-uid="#: LibraryPool.Id #">        <td role="gridcell" class="bs-linenums">#: LineNum #</td>        <td role="gridcell" class="select">            <input type="checkbox" class="kendo-row-checkbox"/>            <label class="bs-input-checkbox-img"></label>        </td>        <td role="gridcell"><a class="lab-route-link" href="/lab/library-pools/#: LibraryPool.Id #">#: LibraryPool.UserPoolId #</a></td>        <td role="gridcell">#: LibraryPool.LibraryCount #</td>            <td role="gridcell">#= bs.Util.getDateConciseHtml(LibraryPool.DateModified) #</td>        <td role="gridcell">#: LibraryPool.UserOwnedBy.Name #</td>        <td role="gridcell">#: Lane #</td>    </tr>',kendoGridHeaderTemplate:'<div class="toolbar">               <button class="bs-toolbar-btn lab-form-btn" id="set-project">            <span class="icomoon icon-project"></span>            <label>Set Project</label>        </button>               # if(!$(\'.ie9\').length > 0){ #            <button class="bs-toolbar-btn lab-form-btn" id="download-csv">                <span class="icomoon icon-spreadsheet"></span>                <label>Export</label>            </button>        # } else { #            <button class="bs-toolbar-btn lab-form-btn" id="ie9-download-csv">                <span class="icomoon icon-spreadsheet"></span>                <label>Export</label>            </button>        # } #           </div>',dialogGridNotification:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog">          <div class="modal-content">            <div class="modal-header">              <h4 class="modal-title"><%= title %></h4>            </div>            <div class="modal-body">                <div class="bs-grid-notifications">                    <% if(message) { %>                        <%= message %>                    <% } %>                    <% if(notifications.length > 0) { %>                        <table>                                        <tbody >                                <tr>                                    <th>Name</th>                                    <th>Reason</th>                                </tr>                                <% _.each(notifications, function(notification) { %>                                     <tr>                                                        <td><%= notification.itemName %></td>                                        <td><%= notification.itemNotification %></td>                                    </tr>                                <% }); %>                            </tbody>                        </table>                    <% } %>                </div>            </div>            <div class="modal-footer">                <img class="bs-icon-gif-loading" src="/Content/images/loading-icon-mini.gif" style="display:none" />                <!--<button class="btn modal-cancel btn-default bs-btn-default" type="button" data-dismiss="modal">Cancel</button>-->                <button class="btn btn-primary bs-btn-primary modal-confirm" type="button" >Ok</button>            </div>          </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',collectionTable:'<table class="bs-table table">            <thead>                <tr>                    <% if (selectable) { %>                    <th class="bs-table-checkbox-column"><input type="checkbox" class="select-all" /></th>                    <% } %>                    <% _.each(columnSettings, function (column) { %>                    <% if (sortable && column.sortAttributeName) { %>                    <th class="bs-csv-title <%= column.defaultSortingClasses %>" data-sort-attr-name="<%= column.sortAttributeName %>">                        <%= column.title %>                        <span class="icomoon"></span>                    </th>                    <% } else { %>                    <th class="bs-csv-title"><%= column.title %></th>                    <% } %>                    <% }); %>                </tr>            </thead>            <tbody></tbody>        </table>',collectionTableItem:'<tr data-item-id="<%= model.Id ? model.Id : \'\' %>">        <% if (selectable) { %>        <td class="bs-table-checkbox-column select"><input type="checkbox" class="checkbox" <% if(isChecked) { %>checked<% } %>/></td>        <% } %>        <% _.each(columnSettings, function (column) { %>        <td class="bs-csv-value"><%= column.attributeHTMLGetter(model) %></td>        <% }); %>    </tr>',labStdLayoutTemplate:'<section class="lab-topNav"></section>    <section class="lab-notificationsBar"></section>    <section class="lab-toolbar"></section>    <section class="lab-mainContent"></section>    <section class="lab-footer"></section>',labFooter:'<div>        <div id="lab-footer-bar" class="lab-footer-inner">            <div class="lab-footer-error" style="display:none"></div>            <button class="btn bs-toolbar-btn btn-large lab-footer-button next">                <span class="icomoon icon-arrow-right"></span>                <% _.each(data, function(item) { %>                <%= item.NextText %>                <% }); %>            </button>            <button class="btn bs-toolbar-btn btn-large lab-footer-button save">                <% _.each(data, function(item) { %>                <%= item.SaveText %>                <% }); %>            </button>            <button class="btn bs-toolbar-btn btn-large lab-footer-button cancel">                Cancel            </button>        </div>    </div>',labNav:'<nav class="bs-nav-lab">        <ul class="bs-nav-lab-inner">            <% _.each(data, function(navItem) { %>            <a id="<%= navItem.Class %>" class="<%= navItem.Class %> lab-chevron"><%= navItem.Text %></a>            <% }); %>        </ul>    </nav>    <div>        <h1>foo</h1>    </div>',labBioSamplesPage:'<section class="toolbar-container" id="toolbar-lab-bioSamples-container"></section>    <div>        <h1 class="bs-section-heading"></h1>    </div>    <div class="bs-bioSamples-container">        <div class="bs-kendo-table"></div>    </div>',labLibraryPlatesPage:'<section class="toolbar-container" id="toolbar-lab-plates-container"></section>    <div class="bs-plates-container">        <div class="bs-kendo-table"></div>    </div>',labLibraryPoolsPage:'<section class="toolbar-container" id="toolbar-lab-pools-container"></section>    <div class="bs-pools-container">        <div class="bs-kendo-table"></div>    </div>',labPlannedRunsPage:'<section class="toolbar-container" id="toolbar-lab-plannedRuns-container"></section>    <div class="bs-plannedRuns-container">        <div class="bs-kendo-table"></div>    </div>',kendoBioSamplesTable:'<tr role="row" data-resource-id="#: Id #" data-uid="#: Id #">        <td role="gridcell" class="bs-linenums">#: LineNum #</td>        <td role="gridcell" class="select">            <input type="checkbox" class="kendo-row-checkbox" />            <label class="bs-input-checkbox-img"></label>        </td>        <td role="gridcell"><a class="lab-route-link" href="/lab/bio-samples/#: Id #">#: UserSampleId ? UserSampleId : "--" #</a></td>        <td role="gridcell">#: Name ? Name : "--" #</td>        <td role="gridcell">#: Species.Name #</td>        <td role="gridcell">#: Project.Name #</td>        <td role="gridcell">#= bs.Util.getDateConciseHtml(DateModified) #</td>        <td role="gridcell">#: UserOwnedBy.Name #</td>        <td role="gridcell">#: LibraryCount #</td>    </tr>',kendoLibraryPlatesTable:'<tr role="row" data-resource-id="#: Id #" data-uid="#: Id #">        <td role="gridcell" class="bs-linenums">#: LineNum #</td>        <td role="gridcell" class="select">            <input type="checkbox" class="kendo-row-checkbox" />            <label class="bs-input-checkbox-img"></label>        </td>        <td role="gridcell">            # if(ContainerType == "Library Card") { #                <a class="lab-route-link" href="/lab/neoprep-library-container/#: Id #" target="_self">#: UserContainerId #</a>            # } else { #                <a class="lab-route-link" href="/lab/library-plates/#: Id #">#: UserContainerId #</a>            # } #        </td>        <td role="gridcell">#: LibraryPrep #        # if (LibraryPrepKit.State.toLowerCase() == "deleted") { #        (Deleted)        #}#        </td>        <td role="gridcell">#: LibraryCount #</td>        <td role="gridcell">#= bs.Util.getDateConciseHtml(DateModified) #</td>        <td role="gridcell">#: UserOwnedBy.Name #</td>    </tr>',kendoLibraryPoolsTable:'<tr role="row" data-resource-id="#: Id #" data-uid="#: Id #">        <td role="gridcell" class="bs-linenums">#: LineNum #</td>        <td role="gridcell" class="select">            <input type="checkbox" class="kendo-row-checkbox" />            <label class="bs-input-checkbox-img"></label>        </td>        <td role="gridcell"><a class="lab-route-link" href="/lab/library-pools/#: Id #">#: UserPoolId #</a></td>        <td role="gridcell">#: LibraryCount #</td>        <td role="gridcell">#= bs.Util.getDateConciseHtml(DateModified) #</td>        <td role="gridcell">#: UserOwnedBy.Name #</td>    </tr>',kendoPlannedRunsTable:'<tr role="row" data-resource-id="#: Id #" data-uid="#: Id #">        <td role="gridcell" class="bs-linenums">#: LineNum #</td>        <td role="gridcell" class="select">            <input type="checkbox" class="kendo-row-checkbox" />            <label class="bs-input-checkbox-img"></label>        </td>        <td role="gridcell"><a href="/lab/planned-runs/#: Id #" onclick="window.location.href = \'/lab/planned-runs/#: Id #\'">#: ExperimentName #</a></td>        <td role="gridcell">#: PlatformName #</td>        <td role="gridcell">#: NumCyclesRead1# | #:NumCyclesIndex1# | #:NumCyclesIndex2# | #:NumCyclesRead2  #</td>        <td role="gridcell">#= bs.Util.getDateConciseHtml(DateModified) #</td>        <td role="gridcell">#: Status #</td>        <td role="gridcell">#: UserOwnedBy.Name #</td>    </tr>',
labCreateEditBioSamplePage:'<div class="bs-create-samples-container">        <label>Sample ID</label>        <input type="text" />        <label>Name</label>        <input type="text" />        <label>Species</label>        <input type="text" />        <label>Project</label>        <input type="text" />        <label>Properties</label>        <input type="text" />    </div>',labCreateEditLibraryPlatePage:'<section class="toolbar-container" id="toolbar-lab-create-plates-container"></section>    <div class="bs-create-samples-container">        <label>Library Prep</label>        <select>            <option>Prep A</option>            <option>Prep B</option>        </select>        <label>Plate ID</label>        <input type="text" />        <label>Plate Name</label>        <input type="text" />        <label>Notes</label>        <textarea />        <input type="checkbox" />        <label>Archive biological samples after plating</label>        <label>Drag a sample onto a well to assign. Click on an index well to assign index.</label>        <button>Auto Assign</button>        <button>Clear All</button>        <div class="plate-samples-container">            <thead>                <th>Sample ID</th>                <th>Name</th>                <th>Well</th>                <th>Index 1</th>                <th>Index 2</th>            </thead>            <tbody>                <tr>                    <td>1234</td>                    <td>MySample</td>                    <td>A1</td>                    <td>A102 - GATACAT</td>                    <td>M105 - TTCGAAT</td>                </tr>                <tr>                    <td>4321</td>                    <td>Sample2</td>                    <td>A2</td>                    <td>A103 - TTCGAAT</td>                    <td>M104 - GATACAT</td>                </tr>                <tr>                    <td>777</td>                    <td>Joe Smith</td>                    <td>--</td>                    <td>--</td>                    <td>--</td>                </tr>            </tbody>        </div>        <div class="plate-container"></div>    </div>    <section class="footer-container" id="footer-lab-plates-container"></section>',createEditLibraryPlate:"<div>Create Edit Library Plate</div>",importBioSampleLayout:'<h1 class="bs-section-heading" style="margin-left: 10px">Import Biological Samples</h1>    <section class="bio-sample-import-top-panel"></section>    <div class="clearfix" />    <section class="bio-sample-import-middle-panel" style="display: none; padding-bottom:100px;"></section>',importBioSample:'<div style="margin: 10px">        You can import biological samples using this <a href="../../Resources/Import_BiologicalSamples_Template-v1.csv">template.</a>    </div>    <div>        <a href="../../Resources/Import_BiologicalSamples_Template-v1.csv"><img src="/Content/images/prep/bio-sample-template.png" class="bio-sample-template-img" alt="sample template" /></a>    </div>    <div style="margin: 10px">        <div class="fakefile">            <button type="button" class="btn btn-large btn-lab-importer">Choose .csv File</button>            <label class="bio-sample-filename-label">No file chosen</label>        </div>        <form id="bioSampleImportForm" target="postiframe" name="Import" enctype="multipart/form-data">                <input name="bio-sample-import-input" id="bioSampleImportInput" type="file" class="bio-sample-file-input" />        </form>        <!-- ie9 iframe upload -->        <iframe id="fileUploadIe9Frame" name="postiframe" style="display: none;"></iframe>    </div>    <div class="bioSampleImportMessage" id="bioSampleImportError">    </div>',kendoBioSamplesImportTable:'<tr role="row" draggable="true">        <td role="gridcell">#: BiologicalSample.UserSampleId #</td>        <td role="gridcell">#: BiologicalSample.Name #</td>        <td role="gridcell" data-species-id="# if (BiologicalSample.Species) {#             #: BiologicalSample.Species.speciesId #            # }else { }#"># if (BiologicalSample.Species) { #             #: BiologicalSample.Species.speciesName #             # } else { }#</td>        <td role="gridcell" data-project-id="# if (BiologicalSample.Project) { #            #:BiologicalSample.Project.id #            # } else { }#"># if (BiologicalSample.Project && BiologicalSample.Project.name) { #            #: BiologicalSample.Project.name #            # if (BiologicalSample.Project.name && BiologicalSample.Project.id == 0) { #            <div class="newIcon">NEW</div>            # } #            # } else { } #</td>        <td role="gridcell"># if (BiologicalSample.NucleicAcid == 1) { # DNA                             # } else if (BiologicalSample.NucleicAcid == 2) { # RNA                             # } else { # ""                            # } # </td>    </tr>',createEditBioSample:'<div>        <% if (!bioSample.isNew()) { %>        <button class="btn bs-toolbar-btn btn-large bs-toolbar-lab-btn-edit pull-right disabled" id="bio-sample-edit-button" disabled="disabled">            <span class="icomoon icon-edit"></span>            <label>Edit</label>        </button>        <% } %>        <h1 class="bs-section-heading" id="bio-sample-title"><%= bioSample.isNew() ? "Create" : "Edit" %> Biological Sample</h1>        <div class="create-bio-samples-container">            <div class="create-bio-samples-node">                <label class="bio-sample-edit-label">Sample ID<span style="color: #B94A48">*</span></label>                <span class="bio-sample-edit-input">                    <input class="form-control" type="text" id="bio-sample-id-input" />                </span>            </div>            <div class="create-bio-samples-node">                <label class="bio-sample-edit-label">Name<span style="color: #B94A48">*</span></label>                <span class="bio-sample-edit-input">                    <input class="form-control" type="text" id="bio-sample-name-input" />                </span>            </div>            <div class="create-bio-samples-node">                <label class="bio-sample-edit-label">Species</label>                <span class="bio-sample-edit-input">                    <select id="bio-sample-species-input" class="form-control bio-sample-select">                        <% species.each(function(s) { %>                        <option value="<%- JSON.stringify(s.toJSON()) %>" <%= bioSample.Species.Id == s.Id ? "selected" : ""%>><%= s.Name %></option>                        <% }); %>                    </select>                </span>            </div>            <div class="create-bio-samples-node">                <label class="bio-sample-edit-label">Project<span style="color: #B94A48">*</span></label>                <span class="bio-sample-edit-input">                    <bs-chooser-form-control id="bio-sample-project-input" class="bio-sample-chooser"                        multiselect="false"                        resource-type="project"                        message="Select an output project"                        required-permissions="owner"                    <% if (bioSample.Project) { %>                    initial-selections="<%= bioSample.Project.Id %>"                    <% } %>>                    </bs-chooser-form-control>                </span>            </div>            <div class="create-bio-samples-node">                <label class="bio-sample-edit-label">Nucleic Acid<span style="color: #B94A48">*</span></label>                <span class="bio-sample-edit-input">                    <select class="bio-sample-select form-control" id="bio-sample-nucleic-acid-input">                        <option>DNA</option>                        <option>RNA</option>                    </select>                </span>            </div>        </div>    </div>',bioSampleDetails:'<div>        <button class="btn bs-toolbar-btn btn-large bs-toolbar-lab-btn-edit pull-right" id="bio-sample-edit-button">            <span class="icomoon icon-edit"></span>            <label>Edit</label>        </button>        <h1 class="bs-section-heading" id="bio-sample-title">Biological Sample</h1>        <div class="create-bio-samples-container">            <div class="create-bio-samples-node">                <label class="bio-sample-edit-label">Sample ID</label>                <label class="bio-sample-edit-detail" id="bio-sample-id-detail"><%- model.UserSampleId %></label>            </div>            <div class="create-bio-samples-node">                <label class="bio-sample-edit-label">Name</label>                <label class="bio-sample-edit-detail" id="bio-sample-name-detail"><%- model.Name %></label>            </div>            <div class="create-bio-samples-node">                <label class="bio-sample-edit-label">Species</label>                <label class="bio-sample-edit-detail" id="bio-sample-organism-detail"><%= model.Species.Name %></label>            </div>            <div class="create-bio-samples-node">                <label class="bio-sample-edit-label">Project</label>                <label class="bio-sample-edit-detail" id="bio-sample-project-detail">                    <% if (model.Project && model.Project.Id) { %><a href="/projects/<%= model.Project.Id %>"><span class="icomoon icon-project"></span> <%- model.Project.Name %></a><% } %>                </label>            </div>            <div class="create-bio-samples-node">                <label class="bio-sample-edit-label">Nucleic Acid</label>                <label class="bio-sample-edit-detail" id="bio-sample-nucleic-acid-detail"><%= model.NucleicAcid %></label>            </div>        </div>    </div>',importLibrariesLayout:'<div style="padding-bottom:100px;">        <h1 class="bs-section-heading" style="margin-left: 10px">Import Sample Libraries</h1>        <section class="import-libraries-top-panel"></section>        <div class="clearfix" />        <section class="import-libraries-plate-panel bs-form-section" style="display: none;">            <div class=" bs-form-section-group">                <label class="bs-form-field-name">Plate Id:</label>                <span class="bs-form-field-value" id="plate-id-value" style="display: inline;"></span>            </div>            <div class="bs-form-section-group">                <label class="bs-form-field-name">Library Prep:</label>                <span class="bs-form-field-value" id="plate-prep-value" style="display: inline;"></span>            </div>            <div class="bs-form-section-group">                <label class="bs-form-field-name">Notes:</label>                <span class="bs-form-field-value" id="plate-notes-value" style="display: inline;"></span>            </div>        </section>        <section class="import-libraries-grid-panel" style="display: none;"></section>    </div>',importLibraries:'<div style="margin: 10px">        You can import sample libraries using this <a href="../../Resources/Import_Libraries_Template-v1.csv">template.</a>    </div>    <div>        <a href="../../Resources/Import_Libraries_Template-v1.csv"><img src="/Content/images/prep/bio-sample-template.png" class="bio-sample-template-img" alt="sample template" /></a>    </div>    <div style="margin: 10px">        <div class="fakefile">            <button type="button" class="btn btn-large btn-lab-importer">Choose .csv File</button>            <label class="import-libraries-filename-label" style="margin-left: 60px;">No file chosen</label>        </div>        <form id="importLibrariesForm" target="postiframe" name="Import" enctype="multipart/form-data">            <input name="import-libraries-input" id="importLibrariesInput" type="file" class="libraries-file-input" style="display:none;" />        </form>        <!-- ie9 iframe upload -->        <iframe id="fileUploadIe9Frame" name="postiframe" style="display: none;"></iframe>    </div>    <div class="importLibrariesMessage" id="importLibrariesError">    </div>',kendoImportLibrariesGrid:'<tr role="row" draggable="false">        <td role="gridcell">#: BiologicalSample.UserSampleId #</td>        <td role="gridcell">#: BiologicalSample.Name #</td>        <td role="gridcell"> #: BiologicalSample.Species.Name #</td>        <td role="gridcell">#: Project.Name #            # if (Project.Id == 0) { #            <div class="newIcon">NEW</div>            # } else { } #        </td>        <td role="gridcell">#: BiologicalSample.NucleicAcid #</td>        <td role="gridcell">#: ContainerPosition #</td><td role="gridcell"># if (Index1.Name && Index1.Sequence) { ##: Index1.Name # - #: Index1.Sequence ## } else { # --# } #</td><td role="gridcell"># if (Index2.Name && Index2.Sequence) { ##: Index2.Name # - #: Index2.Sequence ## } else { # --# } #</td>    </tr>',labDetailsLayoutTemplate:'<div style="margin-top:65px;" />    <section class="lab-detail-topNav"></section>    <section class="lab-detail-sideNav"></section>    <section class="lab-detail-mainContent"></section>',detailTopNav:'<div class="bs-nav-titlebar" id="lab-detail-side-nav">        <button class="btn ilmn-gray bs-nav-back" id="detail-back-btn">            <span class="illumicons caret-left medium"></span>            <span class="bs-nav-back-text" id="detail-back-btn-text"></span>        </button>        <label id="detail-id">Some Id</label>    </div>',detailSideNav:'<nav class="lab-detail bs-nav-side">        <ul></ul>    </nav>',detailBioSampleAbout:'<div>        <h3 class="bs-section-heading">Biological Sample</h3>    </div>    <table class="bs-table table">        <tbody>            <tr>                <th>Sample ID</th>                <td>                    <span style="display:block" id="detail-bio-sample-id"></span>                </td>            </tr>            <tr>                <th>Name</th>                <td>                    <span style="display:block" id="detail-bio-sample-name"></span>                </td>            </tr>            <tr>                <th>Species</th>                <td>                    <span style="display:block" id="detail-bio-sample-organism"></span>                </td>            </tr>            <tr>                <th>Project</th>                <td>                    <span style="display:block" id="detail-bio-sample-project"></span>                </td>            </tr>            <tr>                <th>Nucleic Acid</th>                <td>                    <span style="display:block" id="detail-bio-sample-nucleic-acid"></span>                </td>            </tr>        </tbody>    </table>',detailLibraryPlateAbout:'<div>        <h3 class="bs-section-heading">Plate</h3>    </div>    <table class="bs-table">        <tbody>            <tr>                <th>Plate ID</th>                <td>                    <span style="display:block" id="detail-library-plate-container-id"></span>                </td>            </tr>            <tr>                <th>Container Type</th>                <td>                    <span style="display:block" id="detail-library-plate-container-type"></span>                </td>            </tr>            <tr>                <th>Description</th>                <td>                    <span style="display:block" id="detail-library-plate-batch-name"></span>                </td>            </tr>            <tr>                <th>Library Prep</th>                <td>                    <span style="display:block" id="detail-library-plate-library-prep"></span>                </td>            </tr>            <tr>                <th>Library Count</th>                <td>                    <span style="display:block" id="detail-library-plate-library-count"></span>                </td>            </tr>            <tr>                <th>Notes</th>                <td>                    <span style="display:block" id="detail-library-plate-notes"></span>                </td>            </tr>        </tbody>    </table>',detailLibraryPlateSamples:'<div>        <h1 class="bs-section-heading">Sample Libraries</h1>    </div>    <div class="bs-plates-container">        <div class="bs-kendo-table"></div>    </div>',detailPoolsSamples:'<div class="row col-md-12">        <div>            <h1 class="bs-section-heading">Sample Libraries</h1>        </div>        <div class="bs-pools-container">            <div class="bs-kendo-table"></div>        </div>    </div>',labLandingPage:'<div id="lab-landing-page-container">                <div class="bs-lab-landing-page-container">            <% if(bs.hasNeoPrep) { %>                <div class="row sh">                    <div class="col-xs-12">                        <h2 class="main-title">NeoPrep</h2>                    </div>                </div>                <div class="bs-tile-group row">                    <div class="col-xs-12">                                        <div class="bs-tile-row">                            <a class="bs-tile-no-num" id="bs-tile-link-neoprep" href="/lab/neoprep/">                                <div class="bs-tile" data-powertip="<%- tooltips.neoPrep %>">                                    <div class="pull-left bs-tile-sprite">                                        <img class="pull-left" src="/Content/images/prep/planned-runs.png" />                                    </div>                                    <h3 class="bs-section-subheading ">NeoPrep</h3>                                </div>                            </a>                        </div>                    </div>                </div>                         <hr />                <div class="row sh">                    <div class="col-xs-12">                        <h2 class="main-title">Manual Prep</h2>                    </div>                </div>            <% } %>            <div class="bs-tile-group bs-tile-group-numbered">                <div class="bs-tile-row">                    <a class="bs-tile-link" id="bs-tile-link-bio-samples" href="/lab/bio-samples">                        <div class="bs-tile" data-powertip="<%- tooltips.bioSamples %>">                            <div class="pull-left bs-tile-sprite">                                <img class="pull-left" src="/Content/images/prep/bio-sample.png" />                            </div>                            <span title="Total Count" class="pull-right bs-section-heading-qty"><%= model.bioSamples ? model.bioSamples.totalCount : 0 %></span>                            <h3 class="bs-section-subheading ">Biological Samples</h3>                        </div>                    </a>                    <a class="bs-tile-link" id="bs-tile-link-library-plates" href="/lab/library-plates">                        <div class="bs-tile" data-powertip="<%- tooltips.libraries %>">                            <div class="pull-left bs-tile-sprite">                                <img class="pull-left" src="/Content/images/prep/plate.png" />                            </div>                            <span title="Total Count" class="pull-right bs-section-heading-qty"><%= model.libraryContainers ? model.libraryContainers.totalCount : 0 %></span>                            <h3 class="bs-section-subheading ">Libraries</h3>                        </div>                    </a>                </div>                <div class="bs-tile-row">                    <a class="bs-tile-link" id="bs-tile-link-library-pools" href="/lab/library-pools">                        <div class="bs-tile" data-powertip="<%- tooltips.pools %>">                            <div class="pull-left bs-tile-sprite">                                <img class="pull-left" src="/Content/images/prep/open-tube-dark.png" />                            </div>                            <span title="Total Count" class="pull-right bs-section-heading-qty"><%= model.pools ? model.pools.totalCount : 0 %></span>                            <h3 class="bs-section-subheading ">Pools</h3>                        </div>                    </a>                    <a class="bs-tile-link" id="bs-tile-link-planned-runs" href="/lab/planned-runs">                        <div class="bs-tile" data-powertip="<%- tooltips.plannedRuns %>">                            <div class="pull-left bs-tile-sprite">                                <img class="pull-left" src="/Content/images/prep/planned-runs.png" />                            </div>                            <span title="Total Count" class="pull-right bs-section-heading-qty"><%= model.runs ? model.runs.totalCount : 0 %></span>                            <h3 class="bs-section-subheading ">Planned Runs</h3>                        </div>                    </a>                </div>             </div>            <div style="clear: both">&nbsp;</div>        </div>    </div>',labLandingPageTooltips:'<div id="tooltip-templates">        <div data-tooltip-target="bioSamples">            <div class="bs-tooltip-content bs-tile-tooltip dark">                <p>                    In Biological Samples, you can:                    <ul>                        <li><strong>Create</strong> new samples</li>                        <li><strong>Import</strong> samples from a spreadsheet</li>                        <li><strong>Prep</strong> your libraries</li>                    </ul>                </p>            </div>        </div>        <div data-tooltip-target="libraries">            <div class="bs-tooltip-content bs-tile-tooltip dark">                <p>                    In Libraries, you can:                    <ul>                        <li><strong>Import</strong> libraries from a spreadsheet</li>                        <li><strong>Pool</strong> and <strong>Edit</strong> your libraries</li>                    </ul>                </p>            </div>        </div>        <div data-tooltip-target="pools">            <div class="bs-tooltip-content bs-tile-tooltip dark">                <p>                    In Pools, you can:                    <ul>                        <li><strong>Plan</strong> your runs</li>                        <li><strong>Edit</strong> your pools</li>                    </ul>                </p>            </div>        </div>        <div data-tooltip-target="plannedRuns">            <div class="bs-tooltip-content bs-tile-tooltip dark">                <p>                    In Planned Runs, you can:                    <ul>                        <li><strong>Edit</strong> and <strong>Sequence</strong> your runs</li>                    </ul>                </p>            </div>        </div>        <div data-tooltip-target="neoPrep">            <div class="bs-tooltip-content bs-tile-tooltip dark">                <p>                    In NeoPrep, you can:                    <ul>                        <li><strong>Create Library Cards</strong> and <strong>Manage NeoPrep</strong> runs</li>                    </ul>                </p>            </div>        </div>    </div>',detailPoolsAbout:'<button id="edit-pool-btn" class="btn bs-toolbar-btn btn-large bs-toolbar-lab-btn-edit pull-right" href="<%= Pool.Id %>/edit">        <span class="icomoon icon-edit"></span>        <label>Edit</label>    </button>    <h3 class="bs-section-heading">Pool Libraries</h3>            <div class="row">        <div class=" col-md-6">            <div class="bs-pool-info">                <div class="pool-has-samples" >                    <div class="pools-icon-conatiner">                        <img src="/Content/images/prep/closed-tube.png" class="bs-prep-pool-tube closed" alt="" />                    </div>                    <div class="pools-info-details">                        <div class="samplesCount pull-left">                            <h5 style="display:block" class="pool-library-count"><%= Pool.LibraryCount %></h5>                            <div>Libraries</div>                        </div>                        <div class="pull-left pools-lib-prep-detail">                            <div class="pools-lib-prep-detail-container">                                <div class="pools-lib-prep-detail-label">Pool ID:</div>                                <div class="pools-lib-prep-detail-value"><%= Pool.UserPoolId %></div>                            </div>                            <div class="pools-lib-prep-detail-container">                                <div class="pools-lib-prep-detail-label">Library Prep:</div>                                <div class="pools-lib-prep-detail-value"><%= LibraryPrepLabel %></div>                            </div>                        </div>                        <div class="clearfix"></div>                    </div>                    <div class="clearfix"></div>                </div>            </div>        </div>    </div>    <div class="row">        <div class="col-md-12 pool-notes">            <label>Notes</label>            <div id="pools-detail-notes" class=""><%= Pool.Notes %></div>        </div>    </div>',detailPoolsEdit:'<button id="edit-pool-btn" disabled="disabled" class="btn bs-toolbar-btn btn-large bs-toolbar-lab-btn-edit pull-right disabled" href="<%= Pool.Id %>/edit">        <span class="icomoon icon-edit"></span>        <label>Edit</label>    </button>    <h3 class="bs-section-heading">Pool Libraries</h3>            <div class="row">        <div class=" col-md-6">            <div class="bs-pool-info">                <div class="pool-has-samples">                    <div class="pools-icon-conatiner">                        <img src="/Content/images/prep/closed-tube.png" class="bs-prep-pool-tube closed" alt="" />                    </div>                    <div class="pools-info-details">                        <div class="samplesCount pull-left">                            <h5 style="display:block" class="pool-library-count"><%= LibraryCount %></h5>                            <div>Libraries</div>                        </div>                        <div class="pull-left pools-lib-prep-detail">                            <div class="pools-lib-prep-detail-container">                                <div class="pools-lib-prep-detail-label">Pool ID:</div>                                <div class="pools-lib-prep-detail-value"><input type="text" class="form-control lab-form-el user-pool-id" placeholder="Pool ID" id="pools-detail-id" droppable="false" value="<%= Pool.UserPoolId %>"></div>                            </div>                            <% if(LibraryPrepLabel) { %>                            <div class="pools-lib-prep-detail-container">                                <div class="pools-lib-prep-detail-label">Library Prep:</div>                                <div class="pools-lib-prep-detail-value"><%= LibraryPrepLabel %></div>                            </div>                            <% } %>                        </div>                        <div class="clearfix"></div>                    </div>                    <div class="clearfix"></div>                </div>            </div>        </div>    </div>    <div class="row">        <div class="col-md-12 pool-notes">            <label>Notes</label>            <textarea class="form-control lab-form-el" id="pools-detail-notes"><%= Pool.Notes %></textarea>        </div>    </div>',poolLibrariesLayoutView:'<div class="bs-page-content clearfix">        <div class="row">            <div class="col-md-12">                <section class="libraryPool-topPanel"></section>            </div>        </div>        <div class="row">            <div class="col-md-6 col-libraryPool-leftPanel clearfix">                <section class="libraryPool-leftPanel"></section>            </div>            <div class="col-md-6 col-libraryPool-rightPanel clearfix">                <section class="libraryPool-rightPanel"></section>            </div>        </div>        <div class="clearfix"></div>    </div>',poolLibrariesTopPanel:'<div>        <h1 class="bs-section-heading">Pool Libraries</h1>        <div>            <label style="display:block">Notes</label>            <textarea class="form-control lab-form-el" id="pools-detail-notes" />        </div>    </div>',poolLibrariesLeftPanel:'<div>        <div class="clearfix">            <h3 class="pull-left bs-section-heading">Plate</h3>            <div class="library-plate-options pull-right">            <% if (plates.models.length == 1) { %>            <p>Plate ID: <%= currentPlate.UserContainerId %></p>            <% } else { %>            <select id="pooling-current-plate" class="btn lab-form-btn bs-form-field-input">                <% plates.each(function(plate) { %>                <option value="<%= plate.Id %>"                    <%= (plate == currentPlate) ? "selected=selected" : "" %>>                    <%= plate.UserContainerId %>                </option>                <% }); %>            </select>            <% } %>            <span id="toggle-multi-select-direction-ctrl" class="toggle-btn-control small short" style="display:none">                <button id="set-multi-select-by-row-btn" data-toggle-prop="by-row" class="btn bs-toolbar-btn">R</button>                <button id="set-multi-select-by-column-btn" data-toggle-prop="by-column" class="btn bs-toolbar-btn">C</button>            </span>        </div>        </div>                <% plates.each(function(plate) { %>                       <% if(plate.ContainerType == "Library Card") { %>                        <div class="library-plate clearfix" draggable="true" id="library-plate-<%= plate.Id %>" data-resource-id="<%= plate.Id %>" <%= (plate != currentPlate) ? "style=\'display:none\'" : "" %>>                    <div class="lib-plate-row-indexes lib-card">                        <% _.each([1,2,3,4,5,6,7,8], function(row) { %>                            <div><%= row %>L</div>                        <% }); %>                    </div>                                        <div class="lib-plate-wells lib-card row">                        <div class="plate-lc-left col-xs-2">                            <% _.each(libraryCardRows, function(row) { %>                                  <% _.each(row.Wells, function(well) { %>                                    <% if(well.Column == "1") { %>                                        <div id="plate-<%=plate.Id%>-well-<%= well.DomId %>" class="plate-well <%= row.DomId%> <%= well.Column %>"  draggable="true">                                            <div class="plate-well-inner" data-well-id="<%= well.DomId%>"></div>                                        </div>                                    <% } %>                                <% }); %>                            <% }); %>                        </div>                        <div class="plate-lc-img col-xs-8">                            <img src="/public/images/librarycard-basic-sl.png" alt="library card" />                            </div>                        <div class="plate-lc-right col-xs-2">                            <% _.each(libraryCardRows, function(row) { %>                                  <% _.each(row.Wells, function(well) { %>                                    <% if(well.Column == "2") { %>                                        <div id="plate-<%=plate.Id%>-well-<%= well.DomId %>" class="plate-well <%= row.DomId%> <%= well.Column %>"  draggable="true">                                            <div class="plate-well-inner" data-well-id="<%= well.DomId%>"></div>                                        </div>                                    <% } %>                                <% }); %>                            <% }); %>                        </div>                    </div>                                            <div class="lib-plate-row-indexes row-indexes-rt">                        <% _.each([9,10,11,12,13,14,15,16], function(row) { %>                            <div><%= row %>L</div>                        <% }); %>                    </div>                </div>            <% } else { %>                <div class="library-plate clearfix" draggable="true" id="library-plate-<%= plate.Id %>" data-resource-id="<%= plate.Id %>"                     <%= (plate != currentPlate) ? "style=\'display:none\'" : "" %>>                    <div class="lib-plate-column-indexes">                        <% _.each(rows[0].Wells, function(well) { %>                            <div><%= well.Column %></div>                        <% }); %>                    </div>                    <div class="lib-plate-row-indexes">                        <% _.each(rows, function(row) { %>                            <div><%=row.DomId%></div>                        <% }); %>                    </div>                    <div class="lib-plate-wells">                        <% _.each(rows, function(row) { %>                            <% _.each(row.Wells, function(well) { %>                                <div id="plate-<%=plate.Id%>-well-<%= well.DomId %>" class="plate-well <%= row.DomId%> <%= well.Column %>" draggable="true">                                    <div class="plate-well-inner" data-well-id="<%= well.DomId%>"></div>                                </div>                            <% }); %>                        <% }); %>                    </div>                </div>            <% } %>        <% }); %>    </div>',
poolLibrariesRightPanel:'<div>        <div class="clearfix">            <h3 class="bs-section-heading pull-left">Pools</h3>            <div class="pools-table-options pull-right">                <button id="clearPoolMappingsBtn" class="btn bs-toolbar-btn btn-large lab-form-btn">                    <span class="icomoon icon-minus"></span>                    Clear All                </button>                <button class="btn bs-toolbar-btn btn-large lab-form-btn" id="btn-add-pool-row">                    <span class="icomoon icon-plus"></span>                    Add Pool                </button>            </div>        </div>                <ul class="pools-table pool-create-list">                    </ul>    </div>',poolLibrariesTableRow:'<li class="pool-row well-pool-<%= poolModel.TempId %>" droppable="true" id="pool-row-<%= poolModel.TempId %>" data-pool-id="<%= poolModel.TempId %>">        <div class="bs-pool-info">            <div class="pool-empty-samples">                <div class="pools-icon-conatiner">                    <div>                        <span class="row-count"></span>                        <img src="/Content/images/prep/open-tube.png" class="bs-prep-pool-tube closed" alt="" />                    </div>                </div>                <div class="pools-info-details">                    <p>Drag your samples here</p>                    <button class="btn lab-form-btn delete-pool-btn">X</button>                </div>                <div class="clearfix"></div>            </div>            <div class="pool-has-samples" style="display:none;">                <div class="pools-icon-conatiner">                    <span class="row-count"></span>                    <img src="/Content/images/prep/closed-tube.png" class="bs-prep-pool-tube closed" alt="" />                </div>                <div class="pools-info-details">                    <div class="samplesCount pull-left">                        <h5 style="display:block" class="pool-library-count">0</h5>                        <div>Samples</div>                    </div>                    <input type="text" class="form-control lab-form-el user-pool-id" placeholder="Pool ID" droppable="false">                    <button class="btn lab-form-btn delete-pool-btn">X</button>                    <div class="clearfix"></div>                </div>                <div class="clearfix"></div>            </div>        </div>    </li>',poolLibrariesTableRowEmpty:'<li class="pool-row well-pool-<%=rowCounter%>" droppable="true" id="pool-row-<%=rowCounter%>" data-pool-id="<%=rowCounter%>">        <div class="bs-pool-info">            <div class="row">                <div class="col-md-2 pools-icon-conatiner">                    <div class="row-count"></div>                    <img src="" alt="" />                </div>                <div class="col-md-10 pools-info-details">                    Drag your samples here                </div>            </div>        </div>    </li>',kendoPoolLibrariesTable:'<tr role="row" data-resource-id="#: Id #" data-uid="#: Id #" data-biosample-id="#: BiologicalSample.Id #" draggable="true">        <td role="gridcell"><a>#: BiologicalSample.UserSampleId #</a></td>        <td role="gridcell">#: BiologicalSample.Name #</td>        <td role="gridcell">#: Project.Name #</td>        <td role="gridcell">#: Well #</td>        <td role="gridcell">#: Index1.Name # - #: Index1.Sequence #</td>        <td role="gridcell">#: Index2.Name # - #: Index2.Sequence #</td>        <td role="gridcell"><a class="lab-route-link" href="/lab/library-plates/#: Container.Id #">#: Container.UserContainerId #</a></td>    </tr>',poolViewEdit:'<div class="bs-page-content clearfix">        <div class="pools-info-container">            <section class="pools-info"></section>        </div>        <div class="pools-samples-libraries-container">            <section class="pools-samples-libraries" style="padding-bottom:30px;"></section>        </div>    </div>',labWellTooltip:'<div class="bs-tooltip-content bs-tile-tooltip dark">        <%= title %>    </div>',customLibraryPrepModal:'<!-- Modal -->    <div class="modal fade abs-top" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog">            <div class="modal-content">                <div class="modal-header">                    <h4 class="modal-title">Custom Library Prep Kit</h4>                </div>                <div class="modal-body" style="max-height:600px;">  <!--Added inline to override bootstrap\'s max-height modal class in myaccounts page-->                    <form role="form" id="customLibraryPrepImportForm" target="postiframe" name="Import" enctype="multipart/form-data">                        <div class=" form-group">                            <label for="name">Name of your new kit</label>                            <input class="input-name form-control bs-form-control" id="kitName" name="kitName" maxlength="50" type="text" onkeypress="return event.keyCode != 13" />                        </div>                        <div class="bs-form-section">                            <h2 class="bs-form-section-header">Supported Read Types</h2>                            <div class="bs-form-section-item">                                <input id="singleRead" type="checkbox" checked="checked" /> <label for="singleRead">Single Read</label>                            </div>                            <div class="bs-form-section-item">                                <input id="pairedEnd" type="checkbox" checked="checked" /> <label for="pairedEnd">Paired End</label>                            </div>                        </div>                        <div class="bs-form-section">                            <h2 class="bs-form-section-header">Supported Indexing Strategy</h2>                            <div class="bs-form-section-item">                                <input id="noIndex" type="checkbox" checked="checked" /> <label for="noIndex">None</label>                            </div>                            <div class="bs-form-section-item">                                <input id="singleIndex" type="checkbox" checked="checked" /> <label for="singleIndex">Single Index</label>                            </div>                            <div class="bs-form-section-item">                                <input id="dualIndex" type="checkbox" checked="checked" /> <label for="dualIndex">Dual Index</label>                            </div>                        </div>                                                <div class="bs-form-section" style="margin-bottom:30px;">                            <h2 class="bs-form-section-header">Default Read Cycles</h2>                            <div class="bs-form-section-item row">                                <!-- Override bootstrap label display style for myaccounts page -->                                <div class="col-xs-3">                                    <label for="readCycles1" style="display:inline-block;">Read 1 Cycles</label>                                </div>                                <div class="col-xs-9">                                    <input id="read1Cycles" type="text" class="sequential-item form-control short-inline input-sm" />                                </div>                            </div>                            <div class="bs-form-section-item row">                                <div class="col-xs-3">                                    <label for="readCycles2" style="display:inline-block;">Read 2 Cycles</label>                                </div>                                <div class="col-xs-9">                                    <input id="read2Cycles" type="text" class="sequential-item form-control short-inline input-sm" />                                </div>                            </div>                        </div>                        <div class="bs-form-section" >                            Import the indexes following this                            <a download href="../../Resources/Import_LibraryPrep_Template-v1.csv">template</a>                            .                        </div>                        <div style="margin: 20px 0px 10px 0px">                            <div class="fakefile">                                <button type="button" class="btn btn-large btn-lab-importer">Choose .csv File</button>                                <label class="custom-library-filename-label">No file chosen</label>                            </div>                            <input name="custom-library-import-input" id="customLibraryPrepImportInput" type="file" class="bio-sample-file-input" />                        </div>                    </form>                    <!-- ie9 iframe upload -->                    <iframe id="fileUploadIe9Frame" name="postiframe" style="display: none;"></iframe>                                        <p class="alert alert-danger" style="display:none"></p>                </div>                <div class="modal-footer" style="background-color:#F2F2F2;border-top:1px solid #CFCFCF;">                    <img class="bs-icon-gif-loading" src="/Content/images/loading-icon-mini.gif" style="display:none" />                    <button class="btn modal-cancel btn-default bs-btn-default" type="button" data-dismiss="modal">Cancel</button>                    <button class="btn btn-primary bs-btn-primary modal-confirm" type="button" disabled>Create New Kit</button>                </div>            </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',prepLibrariesGeneralInfo_CreateView:'<section>        <h1 class="bs-section-heading">            Prep Libraries        </h1>        <div class="row">            <div class="col-md-4">                <label style="display:block">Library Prep Kit <span style="color:#B94A48">*</span></label>                <select class="form-control lab-form-el" id="library-prep">                    <% libraryPrepKits.each(function(libraryPrepKit){ %>                        <option value="<%= libraryPrepKit.Id %>" <%= plate.LibraryPrepId == libraryPrepKit.Id ? "selected" : "" %> <% if (!(libraryPrepKit.Id && libraryPrepKit.Id > 0)) { %> class="bs-new-item" <% } %> >                            <%= libraryPrepKit.Name %>                        </option>                    <% }); %>                </select>            </div>            <div class="col-md-4">                <label style="display:block">Plate ID <span style="color:#B94A48">*</span></label>                <input class="form-control lab-form-el" type="text" id="plate-id" value="" />            </div>        </div>        <div class="row">            <div class="col-md-12">                <label style="display:block">Notes</label>                <textarea class="form-control lab-form-el" id="plate-notes" style="resize: none;" rows="1"></textarea>            </div>        </div><div class="row">            <div class="col-md-12">                <span style="display:block" id="libraryprep-description"></span>            </div>        </div>    </section>',prepLibraries_generalInfo_edit:'<section>        <button id="editLibrary" class="btn bs-toolbar-btn btn-large bs-toolbar-lab-btn-edit pull-right" title="Select an item first" disabled="disabled">            <span class="icomoon icon-edit"></span><label>Edit</label>        </button>        <h1 class="bs-section-heading">            Prep Libraries        </h1>        <div class="row">            <div class="col-md-4">                <label style="display:block">Library Prep Kit</label>                <%= plateManager.prepKit.Name %>            </div>            <div class="col-md-4">                <label style="display:block">Plate ID <span style="color:#B94A48">*</span></label>                <input class="form-control lab-form-el" type="text" id="plate-id" value="<%= plateManager.plate.UserContainerId %>" />            </div>        </div>        <div class="row">            <div class="col-md-12">                <label style="display:block">Notes</label>                <textarea class="form-control lab-form-el" id="plate-notes" style="resize: none;" rows="1"><%= plateManager.plate.Notes %></textarea>            </div>        </div>    </section>',prepLibraries_generalInfo_readOnly:'<section>        <button id="editLibrary" class="btn bs-toolbar-btn btn-large bs-toolbar-lab-btn-edit pull-right" title="Select an item first">            <span class="icomoon icon-edit"></span><label>Edit</label>        </button>        <h1 class="bs-section-heading">            Prep Libraries        </h1>        <div class="row">            <div class="col-md-4">                <label style="display:block">Library Prep Kit</label>                <%= plateManager.prepKit.Name %>                <% if (plateManager.prepKit.State.toLowerCase() == "deleted") { %>                (Deleted)                <% } %>            </div>            <div class="col-md-4">                <label style="display:block">Plate ID</label>                <%= plateManager.plate.UserContainerId %>            </div>        </div>        <div class="row">            <div class="col-md-12">                <label style="display:block">Notes</label>                <%= plateManager.plate.Notes %>            </div>        </div>    </section>',prepLibraries_layout:'<section>        <div class="clearfix">            <div class="row">                <div class="col-md-12">                    <section class="libraryPlate-topPanel"></section>                </div>            </div>            <div class="libraryPlate-middlePanel">                                <div class="col-libraryPlate-leftPanel clearfix">                    <section class="libraryPlate-leftPanel "></section>                </div>                                <div class="col-libraryPlate-rightPanel clearfix">                    <section class="libraryPlate-rightPanel"></section>                </div>            </div>            <div class="clearfix" />        </div>    </section>',createPlateIndexByWell:'<div class="lib-plate-wells-column-label">        <% plateManager.plate.Columns.each(function(col) { %>        <div><span><%= col.Label %></span></div>        <% }); %>    </div>    <div class="lib-plate-wells-indexbyrow-label">        <% plateManager.plate.Rows.each(function(row) { %>        <div><span><%= row.Label %></span></div>        <% }); %>    </div>    <% var wellSequenceIndexCounter = 0; %>    <% plateManager.plate.Rows.each(function(row, nthRow) { %>    <div class="plate-row-index-by-well">        <% plateManager.getWellsByRow(nthRow).each(function(plateWell) { %>        <div class="btn-group fake-dropdown vertical">            <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown"<% if(!plateWell.SampleLibrary) { %> disabled="disabled"<% } %>>                <span class="caret"></span>                <span class="label" title="">                    <%if (plateManager.prepKit.containsIndexCombos()){var indexName = plateWell.ComboName;if(plateWell.SampleLibrary) {var indexCombo = _.find(plateManager.prepKit.IndexCombos.models, function(item){return item.LibraryIndex1Id === plateWell.SampleLibrary.Index1.Id && item.LibraryIndex2Id === plateWell.SampleLibrary.Index2.Id;});indexName = indexCombo.Name;}} else {var indexName = plateWell.IndexSequence.Name;if(plateWell.SampleLibrary) {indexName = plateWell.SampleLibrary.Index1.Name;}}                    %>                    <%= indexName %>                </span>            </button>            <% if (plateManager.prepKit.containsIndexCombos()) { %><ul id="" class="dropdown-menu vertical index-by-well-indexes-select" role="menu"><% plateManager.prepKit.IndexCombos.each(function(indexCombo, i) { %><li <%= indexCombo.Name == indexName ? "class=\'active\'" : "" %>><a href="#" data-well-id="<%= wellSequenceIndexCounter %>" data-index="<%= i %>" class="change-link"><%= indexCombo.Name %></a></li><% }); %></ul><% } else { %><ul id="" class="dropdown-menu vertical index-by-well-indexes-select" role="menu"><% plateManager.prepKit.Index1Sequences.each(function(indexSequence, i) { %><li <%= indexSequence.Name == indexName ? "class=\'active\'" : "" %>><a href="#" data-well-id="<%= wellSequenceIndexCounter %>" data-index="<%= i %>" class="change-link"><%= indexSequence.Name %></a></li><% }); %></ul><% } %>        </div>        <% wellSequenceIndexCounter++ %>        <% }); %>        <% plateManager.getWellsByRow(nthRow).each(function(plateWell, i) { %>        <%        var containerPosition = plateManager.getWellLabelByPosition(plateWell.Number);        var sampleLibrary = plateManager.libraries.findWhere({ ContainerPosition: containerPosition });        var isDroppable = "true";        var wellFilled = "";        var userSampleId = "";        if(sampleLibrary) {        isDroppable = "false";        wellFilled = "well-filled";        userSampleId = sampleLibrary.BiologicalSample.UserSampleId;        }        %>        <div id=""             class="plate-well"             data-well-id="<%= plateWell.Number %>"             title="<%= userSampleId %>">            <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= plateWell.Number %>" droppable="<%= isDroppable %>"></div>        </div>        <% }); %>    </div>    <% }); %>',createPlateIndexByColumn:'<div class="lib-plate-wells-column-label">        <% plateManager.plate.Columns.each(function(col) { %>        <div><span><%= col.Label %></span></div>        <% }); %>    </div>    <div class="lib-plate-column-indexes">        <% plateManager.plate.Columns.each(function(plateColumn, nthColumn) { %>        <% var plateWell = plateManager.getWellsByColumn(nthColumn).at(0); %>        <div class="btn-group fake-dropdown vertical">            <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown"<% if(!plateWell.SampleLibrary) { %> disabled="disabled"<% } %>>                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexName = plateColumn.IndexSequence.Name;                    if(plateWell.SampleLibrary) {                        indexName = plateWell.SampleLibrary.Index1.Name;                    }                    %>                    <%= indexName %>                </span>            </button>            <ul id="" class="dropdown-menu vertical lib-plate-column-indexes-select" role="menu">                <% plateManager.prepKit.Index1Sequences.each(function(indexSequence, i) { %>                <li                    <%= indexSequence.Name == indexName ? "class=\'active\'" : "" %>>                    <a href="#" data-column="<%= nthColumn %>" data-index="<%= i %>" class="change-link"><%= indexSequence.Name %></a>                </li>                <% }); %>            </ul>        </div>        <% }); %>    </div>    <div class="lib-plate-row-indexes">        <% plateManager.plate.Rows.each(function(plateRow) { %>        <div class="btn-group fake-dropdown">            <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" disabled="disabled">                <span class="caret"></span>                <span class="label" title="">&mdash;&mdash;</span>            </button>        </div>        <% }); %>    </div>    <div class="lib-plate-wells">        <% plateManager.plate.Wells.each(function(plateWell, i) {        var isDroppable = "true";        var wellFilled = "";        var userSampleId = "";        if(plateWell.SampleLibrary) {        isDroppable = "false";        wellFilled = "well-filled";        userSampleId = plateWell.SampleLibrary.BiologicalSample.UserSampleId;        }        %>        <div class="plate-well"             data-well-id="<%= i %>"             title="<%= userSampleId %>">            <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= i %>" droppable="<%= isDroppable %>"></div>        </div>        <% }); %>    </div>    <div class="lib-plate-wells-row-label">        <% plateManager.plate.Rows.each(function(row) { %>        <div><span><%= row.Label %></span></div>        <% }); %>    </div>',createPlateIndexByColumnAndRow:'<div class="lib-plate-wells-column-label">        <% plateManager.plate.Columns.each(function(col) { %>        <div><span><%= col.Label %></span></div>        <% }); %>    </div>    <div class="lib-plate-column-indexes">    <% plateManager.plate.Columns.each(function(plateColumn, columnCounter) { %>        <% var plateWell = plateManager.getWellsByColumn(columnCounter).at(0); %>        <div class="btn-group fake-dropdown vertical">            <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown"<% if(!plateManager.columnHasSampleLibrary(columnCounter)) { %> disabled="disabled"<% } %>>                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexName = plateColumn.IndexSequence.Name;                    if(plateWell.SampleLibrary) {                        indexName = plateWell.SampleLibrary.Index1.Name;                    }                    %>                    <%= indexName %>                </span>            </button>            <ul id="" class="dropdown-menu vertical lib-plate-column-indexes-select" role="menu">                <% plateManager.prepKit.Index1Sequences.each(function(indexSequence, i) { %>                <li                    <%= indexSequence.Name == indexName ? "class=\'active\'" : "" %>>                    <a href="#" data-column="<%= columnCounter %>" data-index="<%= i %>" class="change-column-link"><%= indexSequence.Name %></a>                </li>                <% }); %>            </ul>        </div>    <% }); %>    </div>    <div class="lib-plate-row-indexes">    <% plateManager.plate.Rows.each(function(plateRow, rowCounter) { %>        <% var plateWell = plateManager.getWellsByRow(rowCounter).at(0); %>        <div class="btn-group fake-dropdown">            <button type="button" class="btn dropdown-toggle" data-toggle="dropdown"<% if(!plateManager.rowHasSampleLibrary(rowCounter)) { %> disabled="disabled"<% } %>>                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexName = plateRow.IndexSequence.Name;                    if(plateWell.SampleLibrary) {                        indexName = plateWell.SampleLibrary.Index2.Name;                    }                    %>                    <%= indexName %>                </span>            </button>            <ul class="dropdown-menu lib-plate-row-indexes-select" role="menu">                <% plateManager.prepKit.Index2Sequences.each(function(indexSequence, i) { %>                <li                    <%= indexSequence.Name == indexName ? "class=\'active\'" : "" %>>                    <a href="#" data-row="<%= rowCounter %>" data-index="<%= i %>" class="change-row-link"><%= indexSequence.Name %></a>                </li>                <% }); %>            </ul>        </div>    <% }); %>    </div>    <div class="lib-plate-wells">        <% plateManager.plate.Wells.each(function(wellData, i) {        var isDroppable = "true";        var wellFilled = "";        var userSampleId = "";        if(wellData.SampleLibrary) {        isDroppable = "false";        wellFilled = "well-filled";        userSampleId = wellData.SampleLibrary.BiologicalSample.UserSampleId;        }        %>        <div class="plate-well"             data-well-id="<%= i %>"             title="<%= userSampleId %>">            <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= i %>" droppable="<%= isDroppable %>"></div>        </div>        <% }); %>    </div>    <div class="lib-plate-wells-row-label">        <% plateManager.plate.Rows.each(function(row) { %>        <div><span><%= row.Label %></span></div>        <% }); %>    </div>',createPlateIndex24ByColumnAndRow:'<div class="lib-plate-wells-column-label">        <% for(i = 0; i < 12; i++) { %>            <div><span><%= plateManager.plate.Columns.at(i).Label %></span></div>        <% }; %>    </div>    <div class="lib-plate-column-indexes">    <% for(columnCounter = 0; columnCounter < 12; columnCounter++) {        var plateColumn = plateManager.plate.Columns.at(columnCounter);        var plateWell = plateManager.getWellsByColumn(columnCounter).at(0); %>        <div class="btn-group fake-dropdown vertical">            <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown"<% if(!plateManager.primaryColumnHasSampleLibrary(columnCounter)) { %> disabled="disabled"<% } %>>                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexNameLabel = (plateColumn.IndexSequence ? plateColumn.IndexSequence.Name : "");                    var existingIndex1Name = plateManager.getIndex1NameForPrimaryColumn(columnCounter);                                        if(existingIndex1Name) {                        indexNameLabel = existingIndex1Name;                    }                    %>                    <%= indexNameLabel %>                </span>            </button>            <ul id="" class="dropdown-menu vertical lib-plate-column-indexes-select" role="menu">                <% plateManager.prepKit.Index1Sequences.each(function(indexSequence, i) { %>                <li                    <%= indexSequence.Name == indexNameLabel ? "class=\'active\'" : "" %>>                    <a href="#" data-column="<%= columnCounter %>" data-index="<%= i %>" class="change-column-link"><%= indexSequence.Name %></a>                </li>                <% }); %>            </ul>        </div>    <% }; %>    </div>    <!-- index 2 drop downs primary group-->    <div class="lib-plate-row-indexes">    <%     for(rowCounter = 0; rowCounter<2; rowCounter++) {        var plateRow = plateManager.plate.Rows.at(rowCounter);        var plateWell = plateManager.getWellsByRow(rowCounter).at(0); %>        <div class="btn-group fake-dropdown">            <button type="button" class="btn dropdown-toggle" data-toggle="dropdown"<% if(!plateManager.rowHasSampleLibrary(rowCounter)) { %> disabled="disabled"<% } %>>                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexNameLabel = plateRow.IndexSequence.Name;                    var existingIndex2Name = plateManager.getIndex2NameForRow(rowCounter);                                        if(existingIndex2Name) {                        indexNameLabel = existingIndex2Name;                    }                    %>                    <%= indexNameLabel %>                </span>            </button>            <ul class="dropdown-menu lib-plate-row-indexes-select" role="menu">                <% plateManager.prepKit.Index2Sequences.each(function(indexSequence, i) { %>                <li                    <%= indexSequence.Name == indexNameLabel ? "class=\'active\'" : "" %>>                    <a href="#" data-row="<%= rowCounter %>" data-index="<%= i %>" class="change-row-link"><%= indexSequence.Name %></a>                </li>                <% }); %>            </ul>        </div>    <% }; %>    </div>    <div class="lib-plate-wells">        <!-- loop through first 24 wells -->        <%         for( i = 0; i < 24; i++) {            var isDroppable = "true";            var wellFilled = "";            var userSampleId = "";                        if(plateManager.plate.Wells.at(i) && plateManager.plate.Wells.at(i).SampleLibrary) {                isDroppable = "false";                wellFilled = "well-filled";                userSampleId = plateManager.plate.Wells.at(i).SampleLibrary.BiologicalSample.UserSampleId;            } %>                        <div class="plate-well"                data-well-id="<%= i %>"                title="<%= userSampleId %>">                <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= i %>" droppable="<%= isDroppable %>"></div>            </div>        <% }; %>    </div>        <!-- secondary column index 1 drop down -->    <div class="lib-plate-column-indexes">    <%         for(columnCounter = 0; columnCounter < 12; columnCounter++) {            var plateWell = plateManager.getWellsByColumn(columnCounter).at(0); %>            <div class="btn-group fake-dropdown vertical">                <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown"<% if(!plateManager.secondaryColumnHasSampleLibrary(columnCounter)) { %> disabled="disabled"<% } %>>                    <span class="caret"></span>                    <span class="label" title="">                        <%                        var index1NameLabel = plateManager.getDefaultIndex1NameForSecondaryColumn(columnCounter);                        var existingIndex1Name = plateManager.getDefaultIndex1NameForSecondaryColumn(columnCounter);                                                if(existingIndex1Name) {                            index1NameLabel = existingIndex1Name;                        }                        %>                        <%= index1NameLabel %>                    </span>                </button>                <ul id="" class="dropdown-menu vertical lib-plate-column-indexes-select" role="menu">                    <% plateManager.prepKit.Index1Sequences.each(function(indexSequence, i) { %>                    <li                        <%= indexSequence.Name == index1NameLabel ? "class=\'active\'" : "" %>>                        <a href="#" data-column="<%= columnCounter %>" data-index="<%= i %>" class="change-secondary-column-link"><%= indexSequence.Name %></a>                    </li>                    <% }); %>                </ul>            </div>    <% }; %>    </div>        <!-- secondary index2 drop down -->    <div class="lib-plate-row-indexes">    <%         for(rowCounter = 0; rowCounter < 2; rowCounter++) {            var plateRow = plateManager.plate.Rows.at(rowCounter);            var plateWell = plateManager.getWellsByRow(rowCounter).at(0); %>            <div class="btn-group fake-dropdown">                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown"<% if(!plateManager.secondaryRowHasSampleLibrary(rowCounter)) { %> disabled="disabled"<% } %>>                    <span class="caret"></span>                    <span class="label" title="">                        <%                        var index2NameLabel = plateRow.IndexSequence.Name;                        var existingIndex2Name = plateManager.getIndex2NameForSecondaryRow(rowCounter);                                                if(existingIndex2Name) {                            index2NameLabel = existingIndex2Name;                        }                        %>                        <%= index2NameLabel %>                    </span>                </button>                <ul class="dropdown-menu lib-plate-row-indexes-select" role="menu">                    <% plateManager.prepKit.Index2Sequences.each(function(indexSequence, i) { %>                    <li                        <%= indexSequence.Name == index2NameLabel ? "class=\'active\'" : "" %>>                        <a href="#" data-row="<%= rowCounter %>" data-index="<%= i %>" class="change-secondary-row-link"><%= indexSequence.Name %></a>                    </li>                    <% }); %>                </ul>            </div>    <% }; %>    </div>        <div class="lib-plate-wells">        <!-- loop through wells index 24 to 48 -->        <%         for(i = 24; i < 48; i++) {            var isDroppable = "true";            var wellFilled = "";            var userSampleId = "";                        if(plateManager.plate.Wells.at(i) && plateManager.plate.Wells.at(i).SampleLibrary) {                isDroppable = "false";                wellFilled = "well-filled";                userSampleId = plateManager.plate.Wells.at(i).SampleLibrary.BiologicalSample.UserSampleId;            }        %>        <div class="plate-well"             data-well-id="<%= i %>"             title="<%= userSampleId %>">            <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= i %>" droppable="<%= isDroppable %>"></div>        </div>        <% }; %>    </div>    <div class="lib-plate-wells-row-label lib-index-24">                <div><span>A</span></div>        <div><span>B</span></div>        <div><span>C</span></div>        <div><span>D</span></div>           </div>',
prepLibrariesRightPanelCreate:'<section>        <h1 class="bs-section-heading plate-panel-header">Plate</h1>        <div class="library-plate-options">            <div class="bs-btn-combo-with-toggle">                <button id="auto-prep-plate" class="btn lab-form-btn bs-toolbar-btn">                    <span class="icomoon icon-repeat"></span> Auto Prep                </button>                <span id="toggle-prep-direction-ctrl" class="toggle-btn-control small vertical" style="display: none">                    <button id="set-prep-by-row-btn" data-toggle-prop="by-row" class="btn bs-toolbar-btn">R</button>                    <button id="set-prep-by-column-btn" data-toggle-prop="by-column" class="btn bs-toolbar-btn">C</button>                </span>            </div>            <button id="clear-wells" class="btn lab-form-btn bs-toolbar-btn">                <span class="icomoon icon-minus-sign-clear"></span> Clear Plate            </button>            <span id="toggle-index-by-well-ctrl" class="toggle-btn-control small bs-btn-tertiary">                <label>Index By Well</label>                <button id="set-index-by-well-on-btn" data-toggle-prop="on" class="btn bs-toolbar-btn">ON</button>                <button id="set-index-by-well-off-btn" data-toggle-prop="off" class="btn bs-toolbar-btn">OFF</button>            </span>        </div>        <div class="library-plate clearfix">        </div>    </section>',editPlateIndexByWell:'<div class="lib-plate-wells-column-label">        <% plateManager.plate.Columns.each(function(col) { %>        <div><span><%= col.Label %></span></div>        <% }); %>    </div>    <div class="lib-plate-wells-indexbyrow-label">        <% plateManager.plate.Rows.each(function(row) { %>            <div><span><%= row.Label %></span></div>        <% }); %>    </div>        <% var wellSequenceIndexCounter = 0; %>    <% plateManager.plate.Rows.each(function(row, nthRow) { %>        <div class="plate-row-index-by-well">            <% plateManager.getWellsByRow(nthRow).each(function(plateWell) { %>                <div class="btn-group fake-dropdown vertical">                    <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown"<% if(!plateWell.SampleLibrary) { %> disabled="disabled"<% } %>>                        <span class="caret"></span>                        <span class="label" title="">                            <%                             var indexName = "&mdash;&mdash;";                             if(plateWell.SampleLibrary) {if (plateManager.prepKit.containsIndexCombos()){var indexCombo = _.find(plateManager.prepKit.IndexCombos.models, function(item){return item.LibraryIndex1Id === plateWell.SampleLibrary.Index1.Id && item.LibraryIndex2Id === plateWell.SampleLibrary.Index2.Id;});indexName = indexCombo.Name;} else {indexName = plateWell.SampleLibrary.Index1.Name;}                                   }                            %>                            <%= indexName %>                        </span>                    </button><% if (plateManager.prepKit.containsIndexCombos()) { %><ul id="" class="dropdown-menu vertical index-by-well-indexes-select" role="menu"><% plateManager.prepKit.IndexCombos.each(function(indexCombo, i) { %><li <%= indexCombo.Name == indexName ? "class=\'active\'" : "" %>><a href="#" data-well-id="<%= wellSequenceIndexCounter %>" data-index="<%= i %>" class="change-link"><%= indexCombo.Name %></a></li><% }); %></ul><% } else { %><ul id="" class="dropdown-menu vertical index-by-well-indexes-select" role="menu"><% plateManager.prepKit.Index1Sequences.each(function(indexSequence, i) { %><li <%= indexSequence.Name == indexName ? "class=\'active\'" : "" %>><a href="#" data-well-id="<%= wellSequenceIndexCounter %>" data-index="<%= i %>" class="change-link"><%= indexSequence.Name %></a></li><% }); %></ul><% } %>                </div>                <% wellSequenceIndexCounter++ %>            <% }); %>            <% plateManager.getWellsByRow(nthRow).each(function(plateWell, i) { %>                <%                var containerPosition = plateManager.getWellLabelByPosition(plateWell.Number);                var sampleLibrary = plateManager.libraries.findWhere({ ContainerPosition: containerPosition });                var isDroppable = "true";                var wellFilled = "";                var userSampleId = "";                if(sampleLibrary) {                    isDroppable = "false";                    wellFilled = "well-filled";                    userSampleId = sampleLibrary.BiologicalSample.UserSampleId;                }                %>                <div id=""                     class="plate-well"                     data-well-id="<%= plateWell.Number %>"                     title="<%= userSampleId %>">                    <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= plateWell.Number %>" droppable="<%= isDroppable %>"></div>                </div>            <% }); %>        </div>    <% }); %>',editPlateIndexByColumn:'<div class="lib-plate-wells-column-label">        <% plateManager.plate.Columns.each(function(col) { %>            <div><span><%= col.Label %></span></div>        <% }); %>    </div>    <div class="lib-plate-column-indexes">        <% plateManager.plate.Columns.each(function(plateColumn, nthColumn) { %>            <% var plateWell = plateManager.getWellsByColumn(nthColumn).at(0); %>            <div class="btn-group fake-dropdown vertical">                <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown"<% if(!plateManager.columnHasSampleLibrary(nthColumn)) { %> disabled="disabled"<% } %>>                    <span class="caret"></span>                    <span class="label" title="">                        <%                        var indexName = plateManager.getColumnIndexName(nthColumn);                        %>                        <%= indexName %>                    </span>                </button>                <ul id="" class="dropdown-menu vertical lib-plate-column-indexes-select" role="menu">                    <% plateManager.prepKit.Index1Sequences.each(function(indexSequence, i) { %>                        <li <%= indexSequence.Name == indexName ? "class=\'active\'" : "" %>>                            <a href="#" data-column="<%= nthColumn %>" data-index="<%= i %>" class="change-link"><%= indexSequence.Name %></a>                        </li>                    <% }); %>                </ul>            </div>        <% }); %>    </div>    <div class="lib-plate-row-indexes">        <% plateManager.plate.Rows.each(function(plateRow) { %>            <div class="btn-group fake-dropdown">                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" disabled="disabled">                    <span class="caret"></span>                    <span class="label" title="">&mdash;&mdash;</span>                </button>            </div>        <% }); %>    </div>    <div class="lib-plate-wells">        <% plateManager.plate.Wells.each(function(plateWell, i) {             var isDroppable = "true";            var wellFilled = "";            var userSampleId = "";            if(plateWell.SampleLibrary) {                isDroppable = "false";                wellFilled = "well-filled";                userSampleId = plateWell.SampleLibrary.BiologicalSample.UserSampleId;            }            %>            <div class="plate-well"                 data-well-id="<%= i %>"                 title="<%= userSampleId %>">                <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= i %>" droppable="<%= isDroppable %>"></div>            </div>        <% }); %>    </div>    <div class="lib-plate-wells-row-label">        <% plateManager.plate.Rows.each(function(row) { %>            <div><span><%= row.Label %></span></div>        <% }); %>    </div>',editPlateIndexByColumnAndRow:'<div class="lib-plate-wells-column-label">        <% plateManager.plate.Columns.each(function(col) { %>            <div><span><%= col.Label %></span></div>        <% }); %>    </div>    <div class="lib-plate-column-indexes">        <% plateManager.plate.Columns.each(function(plateColumn, nthColumn) { %>            <% var plateWell = plateManager.getWellsByColumn(nthColumn).at(0); %>            <div class="btn-group fake-dropdown vertical">                <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown"<% if(!plateManager.columnHasSampleLibrary(nthColumn)) { %> disabled="disabled"<% } %>>                    <span class="caret"></span>                    <span class="label" title="">                        <%                        var indexName = plateManager.getColumnIndexName(nthColumn);                        %>                        <%= indexName %>                    </span>                </button>                <ul id="" class="dropdown-menu vertical lib-plate-column-indexes-select" role="menu">                    <% plateManager.prepKit.Index1Sequences.each(function(indexSequence, i) { %>                    <li <%= indexSequence.Name == indexName ? "class=\'active\'" : "" %>>                        <a href="#" data-column="<%= nthColumn %>" data-index="<%= i %>" class="change-column-link"><%= indexSequence.Name %></a>                    </li>                    <% }); %>                </ul>            </div>        <% }); %>    </div>    <div class="lib-plate-row-indexes">    <% plateManager.plate.Rows.each(function(plateRow, nthRow) { %>        <% var plateWell = plateManager.getWellsByRow(nthRow).at(0); %>        <div class="btn-group fake-dropdown">            <button type="button" class="btn dropdown-toggle" data-toggle="dropdown"<% if(!plateManager.rowHasSampleLibrary(nthRow)) { %> disabled="disabled"<% } %>>                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexName = plateManager.getRowIndexName(nthRow);                    %>                    <%= indexName %>                </span>            </button>            <ul class="dropdown-menu lib-plate-row-indexes-select" role="menu">                <% plateManager.prepKit.Index2Sequences.each(function(indexSequence, i) { %>                <li                    <%= indexSequence.Name == indexName ? "class=\'active\'" : "" %>>                    <a href="#" data-row="<%= nthRow %>" data-index="<%= i %>" class="change-row-link"><%= indexSequence.Name %></a>                </li>                <% }); %>            </ul>        </div>    <% }); %>    </div>    <div class="lib-plate-wells">        <% plateManager.plate.Wells.each(function(wellData, i) {            var isDroppable = "true";            var wellFilled = "";            var userSampleId = "";            if(wellData.SampleLibrary) {                isDroppable = "false";                wellFilled = "well-filled";                userSampleId = wellData.SampleLibrary.BiologicalSample.UserSampleId;            }            %>            <div class="plate-well"                 data-well-id="<%= i %>"                 title="<%= userSampleId %>">                <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= i %>" droppable="<%= isDroppable %>"></div>            </div>        <% }); %>    </div>    <div class="lib-plate-wells-row-label">        <% plateManager.plate.Rows.each(function(row) { %>            <div><span><%= row.Label %></span></div>        <% }); %>    </div>',editPlateIndex24ByColumnAndRow:'<div class="lib-plate-wells-column-label">        <% for(i = 0; i < 12; i++) { %>            <div><span><%= plateManager.plate.Columns.at(i).Label %></span></div>        <% }; %>    </div>    <div class="lib-plate-column-indexes">    <% for(columnCounter = 0; columnCounter < 12; columnCounter++) {        var plateColumn = plateManager.plate.Columns.at(columnCounter);        var plateWell = plateManager.getWellsByColumn(columnCounter).at(0); %>        <div class="btn-group fake-dropdown vertical">            <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown"<% if(!plateManager.primaryColumnHasSampleLibrary(columnCounter)) { %> disabled="disabled"<% } %>>                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexNameLabel = (plateColumn.IndexSequence ? plateColumn.IndexSequence.Name : "");                    var existingIndex1Name = plateManager.getIndex1NameForPrimaryColumn(columnCounter);                                        if(existingIndex1Name) {                        indexNameLabel = existingIndex1Name;                    }                    %>                    <%= indexNameLabel %>                </span>            </button>            <ul id="" class="dropdown-menu vertical lib-plate-column-indexes-select" role="menu">                <% plateManager.prepKit.Index1Sequences.each(function(indexSequence, i) { %>                <li                    <%= indexSequence.Name == indexNameLabel ? "class=\'active\'" : "" %>>                    <a href="#" data-column="<%= columnCounter %>" data-index="<%= i %>" class="change-column-link"><%= indexSequence.Name %></a>                </li>                <% }); %>            </ul>        </div>    <% }; %>    </div>    <!-- index 2 drop downs primary group-->    <div class="lib-plate-row-indexes">    <%     for(rowCounter = 0; rowCounter<2; rowCounter++) {        var plateRow = plateManager.plate.Rows.at(rowCounter);        var plateWell = plateManager.getWellsByRow(rowCounter).at(0); %>        <div class="btn-group fake-dropdown">            <button type="button" class="btn dropdown-toggle" data-toggle="dropdown"<% if(!plateManager.rowHasSampleLibrary(rowCounter)) { %> disabled="disabled"<% } %>>                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexNameLabel = plateRow.IndexSequence.Name;                    var existingIndex2Name = plateManager.getIndex2NameForRow(rowCounter);                                        if(existingIndex2Name) {                        indexNameLabel = existingIndex2Name;                    }                    %>                    <%= indexNameLabel %>                </span>            </button>            <ul class="dropdown-menu lib-plate-row-indexes-select" role="menu">                <% plateManager.prepKit.Index2Sequences.each(function(indexSequence, i) { %>                <li                    <%= indexSequence.Name == indexNameLabel ? "class=\'active\'" : "" %>>                    <a href="#" data-row="<%= rowCounter %>" data-index="<%= i %>" class="change-row-link"><%= indexSequence.Name %></a>                </li>                <% }); %>            </ul>        </div>    <% }; %>    </div>    <div class="lib-plate-wells">        <!-- loop through first 24 wells -->        <%         for( i = 0; i < 24; i++) {            var wellFilled = "";            var userSampleId = "";                        if(plateManager.plate.Wells.at(i) && plateManager.plate.Wells.at(i).SampleLibrary) {                wellFilled = "well-filled";                userSampleId = plateManager.plate.Wells.at(i).SampleLibrary.BiologicalSample.UserSampleId;            } %>                        <div class="plate-well"                data-well-id="<%= i %>"                title="<%= userSampleId %>">                <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= i %>"></div>            </div>        <% }; %>    </div>        <!-- secondary column index 1 drop down -->    <div class="lib-plate-column-indexes">    <%         for(columnCounter = 0; columnCounter < 12; columnCounter++) {            var plateWell = plateManager.getWellsByColumn(columnCounter).at(0); %>            <div class="btn-group fake-dropdown vertical">                <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown"<% if(!plateManager.secondaryColumnHasSampleLibrary(columnCounter)) { %> disabled="disabled"<% } %>>                    <span class="caret"></span>                    <span class="label" title="">                        <%                        var index1NameLabel = plateManager.getDefaultIndex1NameForSecondaryColumn(columnCounter);                        var existingIndex1Name = plateManager.getIndex1NameForSecondaryColumn(columnCounter);                                                if(existingIndex1Name) {                            index1NameLabel = existingIndex1Name;                        }                        %>                        <%= index1NameLabel %>                    </span>                </button>                <ul id="" class="dropdown-menu vertical lib-plate-column-indexes-select" role="menu">                    <% plateManager.prepKit.Index1Sequences.each(function(indexSequence, i) { %>                    <li                        <%= indexSequence.Name == index1NameLabel ? "class=\'active\'" : "" %>>                        <a href="#" data-column="<%= columnCounter %>" data-index="<%= i %>" class="change-secondary-column-link"><%= indexSequence.Name %></a>                    </li>                    <% }); %>                </ul>            </div>    <% }; %>    </div>        <!-- secondary index2 drop down -->    <div class="lib-plate-row-indexes">    <%         for(rowCounter = 0; rowCounter < 2; rowCounter++) {            var plateRow = plateManager.plate.Rows.at(rowCounter);            var plateWell = plateManager.getWellsByRow(rowCounter).at(0); %>            <div class="btn-group fake-dropdown">                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown"<% if(!plateManager.secondaryRowHasSampleLibrary(rowCounter)) { %> disabled="disabled"<% } %>>                    <span class="caret"></span>                    <span class="label" title="">                        <%                        var index2NameLabel = plateRow.IndexSequence.Name;                        var existingIndex2Name = plateManager.getIndex2NameForSecondaryRow(rowCounter);                                                if(existingIndex2Name) {                            index2NameLabel = existingIndex2Name;                        }                        %>                        <%= index2NameLabel %>                    </span>                </button>                <ul class="dropdown-menu lib-plate-row-indexes-select" role="menu">                    <% plateManager.prepKit.Index2Sequences.each(function(indexSequence, i) { %>                    <li                        <%= indexSequence.Name == index2NameLabel ? "class=\'active\'" : "" %>>                        <a href="#" data-row="<%= rowCounter %>" data-index="<%= i %>" class="change-secondary-row-link"><%= indexSequence.Name %></a>                    </li>                    <% }); %>                </ul>            </div>    <% }; %>    </div>        <div class="lib-plate-wells">        <!-- loop through wells index 24 to 48 -->        <%         for(i = 24; i < 48; i++) {            var wellFilled = "";            var userSampleId = "";                        if(plateManager.plate.Wells.at(i) && plateManager.plate.Wells.at(i).SampleLibrary) {                wellFilled = "well-filled";                userSampleId = plateManager.plate.Wells.at(i).SampleLibrary.BiologicalSample.UserSampleId;            }        %>        <div class="plate-well"             data-well-id="<%= i %>"             title="<%= userSampleId %>">            <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= i %>"></div>        </div>        <% }; %>    </div>    <div class="lib-plate-wells-row-label lib-index-24">                <div><span>A</span></div>        <div><span>B</span></div>        <div><span>C</span></div>        <div><span>D</span></div>           </div>',prepLibrariesRightPanelEdit:'<section>        <h1 class="bs-section-heading plate-panel-header">Plate</h1>        <div class="library-plate clearfix">        </div>    </section>',plateIndexByWellReadOnly:'<div class="lib-plate-wells-column-label">        <% plateManager.plate.Columns.each(function(col) { %>        <div><span><%= col.Label %></span></div>        <% }); %>    </div>    <div class="lib-plate-wells-indexbyrow-label">        <% plateManager.plate.Rows.each(function(row) { %>        <div><span><%= row.Label %></span></div>        <% }); %>    </div>    <% plateManager.plate.Rows.each(function(row, nthRow) { %>        <div class="plate-row-index-by-well">            <% plateManager.getWellsByRow(nthRow).each(function(plateRow) { %>                <div class="btn-group fake-dropdown vertical">                    <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown" disabled="disabled">                        <span class="caret"></span>                        <span class="label" title="">                            <%                            var indexName = "&mdash;&mdash;";                            if(plateRow.SampleLibrary) {if (plateManager.prepKit.containsIndexCombos()){var indexCombo = _.find(plateManager.prepKit.IndexCombos.models, function(item){return item.LibraryIndex1Id === plateRow.SampleLibrary.Index1.Id && item.LibraryIndex2Id === plateRow.SampleLibrary.Index2.Id;});indexName = indexCombo.Name;} else {indexName = plateRow.SampleLibrary.Index1.Name;}                            }                            %>                            <%= indexName %>                        </span>                    </button>                </div>            <% }); %>            <% plateManager.getWellsByRow(nthRow).each(function(plateRow, nthWell) { %>                <%                var containerPosition = plateManager.getWellLabelByPosition(plateRow.Number);                var sampleLibrary = plateManager.libraries.findWhere({ ContainerPosition: containerPosition });                var wellFilled = "";                var userSampleId = "";                if(sampleLibrary) {                    wellFilled = "well-filled";                    userSampleId = sampleLibrary.BiologicalSample.UserSampleId;                }                %>                <div id=""                     class="plate-well"                     title="<%= userSampleId %>">                    <div class="plate-well-inner <%= wellFilled %>"></div>                </div>            <% }); %>        </div>    <% }); %>',plateIndexByColumnReadOnly:'<div class="lib-plate-wells-column-label">        <% plateManager.plate.Columns.each(function(col) { %>        <div><span><%= col.Label %></span></div>        <% }); %>    </div>    <div class="lib-plate-column-indexes">        <% plateManager.plate.Columns.each(function(plateColumn, nthColumn) { %>            <div class="btn-group fake-dropdown vertical">                <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown" disabled="disabled">                    <span class="caret"></span>                    <span class="label" title="">                        <%                        var indexName = plateManager.getColumnIndexName(nthColumn);                        %>                        <%= indexName %>                    </span>                </button>            </div>        <% }); %>    </div>    <div class="lib-plate-row-indexes">        <% plateManager.plate.Rows.each(function(plateRow) { %>            <div class="btn-group fake-dropdown">                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" disabled="disabled">                    <span class="caret"></span>                    <span class="label" title="">&mdash;&mdash;</span>                </button>            </div>        <% }); %>    </div>    <div class="lib-plate-wells">        <% plateManager.plate.Wells.each(function(plateWell) {        var wellFilled = "";        var userSampleId = "";        var containerPosition = plateManager.getWellLabelByPosition(plateWell.Number);        var sampleLibrary = plateManager.libraries.findWhere({ ContainerPosition: containerPosition });        if(sampleLibrary) {            isDroppable = "false";            wellFilled = "well-filled";            userSampleId = sampleLibrary.BiologicalSample.UserSampleId;        }        %>        <div class="plate-well"             title="<%= userSampleId %>">            <div class="plate-well-inner <%= wellFilled %>"></div>        </div>        <% }); %>    </div>    <div class="lib-plate-wells-row-label">        <% plateManager.plate.Rows.each(function(row) { %>        <div><span><%= row.Label %></span></div>        <% }); %>    </div>',plateIndexByColumnAndRowReadOnly:'<div class="lib-plate-wells-column-label">        <% plateManager.plate.Columns.each(function(col) { %>        <div><span><%= col.Label %></span></div>        <% }); %>    </div>    <div class="lib-plate-column-indexes">        <% plateManager.plate.Columns.each(function(plateColumn, nthColumn) { %>        <div class="btn-group fake-dropdown vertical">            <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown" disabled="disabled">                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexName = plateManager.getColumnIndexName(nthColumn);                    %>                    <%= indexName %>                </span>            </button>        </div>        <% }); %>    </div>    <div class="lib-plate-row-indexes">        <% plateManager.plate.Rows.each(function(plateRow, nthRow) { %>        <div class="btn-group fake-dropdown">            <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" disabled="disabled">                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexName = plateManager.getRowIndexName(nthRow);                    %>                    <%= indexName %>                </span>            </button>        </div>        <% }); %>    </div>    <div class="lib-plate-wells">        <% plateManager.plate.Wells.each(function(plateWell) {            var wellFilled = "";            var userSampleId = "";            var containerPosition = plateManager.getWellLabelByPosition(plateWell.Number);            var sampleLibrary = plateManager.libraries.findWhere({ ContainerPosition: containerPosition });            if(sampleLibrary) {                wellFilled = "well-filled";                userSampleId = sampleLibrary.BiologicalSample.UserSampleId;            }            %>        <div class="plate-well"             data-well-id="<%= plateWell.Number %>"             title="<%= userSampleId %>">            <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= plateWell.Number %>"></div>        </div>        <% }); %>    </div>    <div class="lib-plate-wells-row-label">        <% plateManager.plate.Rows.each(function(row) { %>        <div><span><%= row.Label %></span></div>        <% }); %>    </div>',plateIndex24ByColumnAndRowReadOnly:'<div class="lib-plate-wells-column-label">        <% for(i = 0; i < 12; i++) { %>            <div><span><%= plateManager.plate.Columns.at(i).Label %></span></div>        <% }; %>    </div>    <div class="lib-plate-column-indexes">    <% for(columnCounter = 0; columnCounter < 12; columnCounter++) {        var plateColumn = plateManager.plate.Columns.at(columnCounter);        var plateWell = plateManager.getWellsByColumn(columnCounter).at(0); %>        <div class="btn-group fake-dropdown vertical">            <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown" disabled="disabled">                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexNameLabel = (plateColumn.IndexSequence ? plateColumn.IndexSequence.Name : "");                    var existingIndex1Name = plateManager.getIndex1NameForPrimaryColumn(columnCounter);                                        if(existingIndex1Name) {                        indexNameLabel = existingIndex1Name;                    }                    %>                    <%= indexNameLabel %>                </span>            </button>        </div>    <% }; %>    </div>    <!-- index 2 drop downs primary group-->    <div class="lib-plate-row-indexes">    <%     for(rowCounter = 0; rowCounter<2; rowCounter++) {        var plateRow = plateManager.plate.Rows.at(rowCounter);        var plateWell = plateManager.getWellsByRow(rowCounter).at(0); %>        <div class="btn-group fake-dropdown">            <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" disabled="disabled">                <span class="caret"></span>                <span class="label" title="">                    <%                    var indexNameLabel = plateRow.IndexSequence.Name;                    var existingIndex2Name = plateManager.getIndex2NameForRow(rowCounter);                                        if(existingIndex2Name) {                        indexNameLabel = existingIndex2Name;                    }                    %>                    <%= indexNameLabel %>                </span>            </button>        </div>    <% }; %>    </div>    <div class="lib-plate-wells">        <!-- loop through first 24 wells -->        <%         for( i = 0; i < 24; i++) {            var wellFilled = "";            var userSampleId = "";                        if(plateManager.plate.Wells.at(i) && plateManager.plate.Wells.at(i).SampleLibrary) {                wellFilled = "well-filled";                userSampleId = plateManager.plate.Wells.at(i).SampleLibrary.BiologicalSample.UserSampleId;            } %>                        <div class="plate-well"                data-well-id="<%= i %>"                title="<%= userSampleId %>">                <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= i %>"></div>            </div>        <% }; %>    </div>        <!-- secondary column index 1 drop down -->    <div class="lib-plate-column-indexes">    <%         for(columnCounter = 0; columnCounter < 12; columnCounter++) {            var plateWell = plateManager.getWellsByColumn(columnCounter).at(0); %>            <div class="btn-group fake-dropdown vertical">                <button type="button" class="btn dropdown-toggle vertical" data-toggle="dropdown" disabled="disabled">                    <span class="caret"></span>                    <span class="label" title="">                        <%                        var index1NameLabel = plateManager.getDefaultIndex1NameForSecondaryColumn(columnCounter);                        var existingIndex1Name = plateManager.getIndex1NameForSecondaryColumn(columnCounter);                                                if(existingIndex1Name) {                            index1NameLabel = existingIndex1Name;                        }                        %>                        <%= index1NameLabel %>                    </span>                </button>                <ul id="" class="dropdown-menu vertical lib-plate-column-indexes-select" role="menu">                    <% plateManager.prepKit.Index1Sequences.each(function(indexSequence, i) { %>                    <li                        <%= indexSequence.Name == index1NameLabel ? "class=\'active\'" : "" %>>                        <a href="#" data-column="<%= columnCounter %>" data-index="<%= i %>" class="change-secondary-column-link"><%= indexSequence.Name %></a>                    </li>                    <% }); %>                </ul>            </div>    <% }; %>    </div>        <!-- secondary index2 drop down -->    <div class="lib-plate-row-indexes">    <%         for(rowCounter = 0; rowCounter < 2; rowCounter++) {            var plateRow = plateManager.plate.Rows.at(rowCounter);            var plateWell = plateManager.getWellsByRow(rowCounter).at(0); %>            <div class="btn-group fake-dropdown">                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" disabled="disabled">                    <span class="caret"></span>                    <span class="label" title="">                        <%                        var index2NameLabel = plateRow.IndexSequence.Name;                        var existingIndex2Name = plateManager.getIndex2NameForSecondaryRow(rowCounter);                                                if(existingIndex2Name) {                            index2NameLabel = existingIndex2Name;                        }                        %>                        <%= index2NameLabel %>                    </span>                </button>            </div>    <% }; %>    </div>        <div class="lib-plate-wells">        <!-- loop through wells index 24 to 48 -->        <%         for(i = 24; i < 48; i++) {            var wellFilled = "";            var userSampleId = "";                        if(plateManager.plate.Wells.at(i) && plateManager.plate.Wells.at(i).SampleLibrary) {                wellFilled = "well-filled";                userSampleId = plateManager.plate.Wells.at(i).SampleLibrary.BiologicalSample.UserSampleId;            }        %>        <div class="plate-well"             data-well-id="<%= i %>"             title="<%= userSampleId %>">            <div class="plate-well-inner <%= wellFilled %>" data-well-id="<%= i %>"></div>        </div>        <% }; %>    </div>    <div class="lib-plate-wells-row-label lib-index-24">                <div><span>A</span></div>        <div><span>B</span></div>        <div><span>C</span></div>        <div><span>D</span></div>           </div>',
prepLibrariesRightPanelReadOnly:'<section>        <h1 class="bs-section-heading plate-panel-header">Plate</h1>        <div class="library-plate clearfix">        </div>    </section>',prepLibrariesSampleLibToolbar:'<div class="toolbar">        <% var numItemsChecked = libraryCollectionTable.getCheckedRowCids().length;         var disabled = \'\';        if(!numItemsChecked || !editable) {             disabled = \'disabled="disabled"\';        }        %>        <button class="bs-toolbar-btn lab-form-btn" id="set-project" <%= disabled %> bs-chooser-trigger resource-type="project" multiselect="false">            <span class="icomoon icon-project"></span>            <label>Set Project</label>        </button>        <% if(!$(\'.ie9\').length > 0){ %>        <button class="bs-toolbar-btn lab-form-btn" id="download-csv">            <span class="icomoon icon-spreadsheet"></span>            <label>Export</label>        </button>        <% } else { %>        <button class="bs-toolbar-btn lab-form-btn" id="ie9-download-csv">            <span class="icomoon icon-spreadsheet"></span>            <label>Export</label>        </button>        <% } %>    </div>',prepLibrariesSampleLibView:'<div class="bs-sampleLibraries-container">        <h1 class="bs-section-heading">Libraries  <span title="Total Count: <%= plateManager.libraries.length %>" class="bs-section-heading-qty"><%= plateManager.libraries.length %></span></h1>        <div id="bs-samplelib-toolbar-region"></div>        <div class="toolbar-border"></div>        <div id="bs-samplelib-collection-table-region" class="bs-samplelib-collection-table"></div>    </div>',dialogCombineSamples:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog">            <div class="modal-content">                <div class="modal-header">                    <h4 class="modal-title">Combine samples</h4>                </div>                <div class="modal-body">                                     </div>                <div class="modal-footer">                    <button class="btn modal-cancel btn-default bs-btn-default" type="button" data-dismiss="modal">Cancel</button>                    <button class="btn btn-primary bs-btn-primary modal-confirm" type="button">Combine</button>                </div>            </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',dialogCombineSamplesBodyView:'<% if (Loading) { %>        <img src="/Content/images/loading-icon-mini.gif" alt="..." />    <% } else { %>        <div class="server-errors">            <% if (ServerErrors.length > 0) {                     _.each(ServerErrors, function(error) { %>                    <p class="alert alert-danger"><%= error.ErrorMessage %></p>                <% });                } else if (ServerWarnings.length > 0) {                     _.each(ServerWarnings, function(warning) { %>                    <p class="alert alert-warning"><%= warning.Message %></p>                <% }); %>                                        <p class="text-center">Are you sure you want to combine these samples?</p>                <hr/>                <% } %>        </div>        <% if (ServerErrors.length == 0) { %>            <form class="form-group">                <label for="name" class="col-sm-4">New Sample ID</label>                <div class="col-sm-8">                    <input class="input-name form-control bs-form-control" name="name" type="text" onkeypress="return event.keyCode != 13" value="<%= SuggestedName %>"/>                    <p class="alert alert-warning" style="display:none"></p>                </div>            </form>        <% } %>            <% } %>',confirmDialog:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog bs-modal-file-preview">          <div class="modal-content">            <div class="modal-header">              <h4 class="modal-title"><%=title%></h4>            </div>            <div class="modal-body">                <p>                    <%=message%>                    <% if(helpText){ %>                    <br />                    <%=helpText%>                    <% } %>                </p>               </div>            <div class="modal-footer">                <button class="btn btn-default bs-btn-modal-default dialog-download btn-confirm" data-dismiss="modal" type="button"><%=confirmButtonLabel%></button>                <% if(cancelButtonLabel) { %>                <button class="btn btn-primary bs-btn-modal-primary dialog-download btn-cancel" data-dismiss="modal" type="button"><%=cancelButtonLabel%></button>                <% } %>            </div>          </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',dialogCopySamplesBodyView:'<div class="form-group clearfix">        <label class="col-sm-4" for="destination-project">Copy samples to: </label>        <div class="col-sm-8">            <% if (!Projects.hasFetched) { %>                <img src="/Content/images/loading-icon-mini.gif" alt="..."/>            <% } else if (Projects.models.length >= 2) { %>                <select class="form-control bs-form-control destination-project" name="destination-project">                    <option value="" disabled="disabled" <%= (SelectedId ? "" : "selected=selected") %>>--</option>                    <% Projects.each(function(project) { %>                    <% if (CurrentProjectId != project.Id) { %>                    <option value="<%= project.Id %>" <%= (SelectedId && project.Id == SelectedId) ? "selected=selected" : "" %>><%= project.Name %></option>                    <% }}); %>                </select>            <% } else { %>                <p class="alert alert-info">You have no other projects.</p>            <% } %>        </div>    </div>    <div class="server-errors">        <% _.each(ServerErrors, function(error) { %>            <p class="alert alert-danger"><%= error.ErrorMessage %></p>        <% }); %>    </div>',dialogCopySamples:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog">          <div class="modal-content">            <div class="modal-header">                <h4 class="modal-title">Copy samples to project</h4>            </div>            <div class="modal-body">                            </div>            <div class="modal-footer">                <button class="btn modal-cancel btn-default bs-btn-default" type="button" data-dismiss="modal">Cancel</button>                <button class="btn btn-primary bs-btn-primary modal-confirm" type="button" disabled="disabled">Copy</button>            </div>          </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',deleteItemView:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog">            <div class="modal-content">                <div class="modal-header">                    <h4 class="modal-title"><%=header%></h4>                </div>                <div class="modal-body" style="max-height:500px;">                    <!--Added inline to override bootstrap\'s max-height modal class in myaccounts page-->                   <%=htmlContent%>                    <p class="alert alert-danger" style="display:none"></p>                </div>                <div class="modal-footer" style="background-color:#F2F2F2;border-top:1px solid #CFCFCF;">                    <img class="bs-icon-gif-loading" src="/Content/images/loading-icon-mini.gif" style="display:none" />                    <button class="btn modal-cancel btn-default bs-btn-default" type="button" data-dismiss="modal">Cancel</button>                    <button class="btn btn-primary bs-btn-primary delete-modal-confirm" type="button">Delete</button>                </div>            </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',downloadDialog:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog bs-modal-file-preview">          <div class="modal-content">            <div class="modal-body">                <iframe id="download-iframe" src="<%= downloadUri %>" style="width:99%;height:470px;"  />            </div>            <div class="modal-footer">                <button class="btn modal-cancel btn-default bs-btn-modal-default" type="button" data-dismiss="modal">Close</button>            </div>          </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',dialogEditAnalysis:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog">          <div class="modal-content">            <div class="modal-header">              <h4 class="modal-title">Rename Analysis</h4>            </div>            <div class="modal-body">                <form role="form">                    <div class="form-group">                        <label for="name">Name</label>                        <input class="input-name form-control bs-form-control" id="name" name="name" type="text" onkeypress="return event.keyCode != 13" value="<%= model.Name %>">                        <p id="analysis-name-alert" class="alert alert-warning" style="display:none"></p>                    </div>                </form>            </div>            <div class="modal-footer">                <img class="bs-icon-gif-loading" src="/Content/images/loading-icon-mini.gif" style="display:none" />                <button class="btn modal-cancel btn-default bs-btn-modal-default" type="button" data-dismiss="modal">Cancel</button>                <button class="btn btn-primary bs-btn-modal-primary modal-confirm" type="button"><%= (model.isNew() ? "Create" : "Save") %></button>            </div>          </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',dialogEditProject:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog">          <div class="modal-content">            <div class="modal-header">              <h4 class="modal-title"><%= (model.isNew() ? "Create" : "Edit") %> Project</h4>            </div>            <div class="modal-body">                <form role="form">                    <div class="form-group">                        <label for="name">Name</label>                        <input class="input-name form-control bs-form-control" id="name" name="name" type="text" onkeypress="return event.keyCode != 13" value="<%= model.Name %>">                        <p id="project-name-alert" class="alert alert-warning" style="display:none"></p>                    </div>                    <div class="form-group">                        <label for="description">Description</label>                        <textarea class="input-description input-xlarge form-control bs-form-control" id="description" maxlength="<%= bs.Models.Validation.PROJECT_DESCRIPTION_MAX_LENGTH %>" rows="6"><%= model.Description %></textarea>                        <p id="project-description-alert" class="alert alert-warning" style="display:none"></p>                    </div>                </form>            </div>            <div class="modal-footer">                <img class="bs-icon-gif-loading" src="/Content/images/loading-icon-mini.gif" style="display:none" />                <button class="btn modal-cancel btn-default bs-btn-default" type="button" data-dismiss="modal">Cancel</button>                <button class="btn btn-primary bs-btn-primary modal-confirm" type="button" <%= (model.isNew() ? "disabled=disabled" : "") %>><%= (model.isNew() ? "Create" : "Save") %></button>            </div>          </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',dialogFilePreviewMaster:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog bs-modal-file-preview">          <div class="modal-content">            <div class="modal-header">              <h4 class="modal-title"><%= file.Name %></h4>            </div>            <div class="modal-body">                            </div>            <div class="modal-footer">                <button class="btn modal-cancel btn-default bs-btn-default" type="button" data-dismiss="modal">Close</button>                <button class="btn btn-primary bs-btn-primary dialog-download" type="button">Download (<%= file.SizeFormatted %>)</button>            </div>          </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',dialogFileTooBigBody:'<p class="alert alert-info">This file is too large for a preview</p>',dialogFileImagePreviewBody:'<div class="bs-modal-file-preview-content">        <a href="<%= file.ContentDirectUrl %>">            <img src="<%= file.ContentDirectUrl %>"/>        </a>    </div>',dialogFilePDFPreview:'<div class="bs-modal-file-preview-content">        <object data="<%= file.ContentDirectUrl %>" type="application/pdf" width="100%" height="100%">            <p class="alert alert-info">                You don\'t seem to have a PDF reader installed.                 <a href="http://get.adobe.com/reader/">Get Adobe Reader</a>            </p>        </object>    </div>',dialogFilePDFNoPreview:'<div class="bs-modal-file-preview-content">            <p class="alert alert-info">                You don\'t seem to have a PDF reader installed.                 <a href="http://get.adobe.com/reader/">Get Adobe Reader</a>            </p>    </div>',dialogFileTextPreviewBody:'<% if (file.Content) { %>        <pre class="prettyprint linenums"><%= file.Content %></pre>    <% } else { %>        <pre class="prettyprint linenums"><img src="/Content/images/loading-icon-mini.gif" style="margin-left:auto;margin-right:auto;margin-top:100px" /></pre>    <% } %>',dialogFileNoPreviewBody:'<p class="alert alert-info">BaseSpace doesn\'t support previewing this type of file (.<%= file.Extension%>).</p>',dialogServerError:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog bs-modal-file-preview">          <div class="modal-content">            <div class="modal-header">              <h4 class="modal-title">Server error</h4>            </div>            <div class="modal-body">                <p class="alert alert-danger">Sorry, we\'re having trouble communicating with the BaseSpace server. Please try the following:                    <ul>                        <li>Verify that you\'re <a href="/dashboard">logged in to BaseSpace</a>.</li>                        <li>Try reloading the page.</li>                        <li>If you\'re still seeing this message, <a href="#" class="bs-event-uservoice">let us know</a>!</li>                    </ul>                </p>               </div>            <div class="modal-footer">                <button class="btn btn-primary bs-btn-primary dialog-download" data-dismiss="modal" type="button">Close</button>            </div>          </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',dialogShareProjectByLink:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog">          <div class="modal-content">            <div class="modal-header">                <h4 class="modal-title">Share by Link:</h4>                <h5><span class="illumicons project"></span> <%= projectModel.Name %></h5>            </div>            <div class="modal-body">                <div class="state-active" style="display:none;">                    <div class="form-group">                        <input type="text" class="bs-modal-project-share-by-link-shareurl form-control" value="" readonly />                    </div>                                    <p class="alert alert-warning deactivate-confirm-message" style="display:none">Are you sure you want to deactivate this share link? This link will no longer provide access to the project. Existing shares will remain active and can be removed from the collaborators list in the share dialog.</p>                </div>                <div class="state-inactive">                    <p>Click \'Activate\' to generate a new URL for sharing.</p>                </div>            </div>            <div class="modal-footer">                <div class="deactivate-buttons" style="display:none">                    <button class="btn btn-default bs-btn-default modal-close" data-dismiss="modal">Close</button>                    <button class="btn modal-deactivate btn-danger">Deactivate</button>                    </div>                <div class="deactivate-confirm-buttons" style="display:none">                    <button class="btn modal-cancel-deactivate btn-default bs-btn-default" data-dismiss="modal">Cancel</button>                    <button class="btn modal-yes-deactivate btn-danger">Yes - Deactivate</button>                    </div>                <div class="activate-buttons">                    <button class="btn btn-default bs-btn-default modal-close" data-dismiss="modal">Close</button>                    <button class="btn modal-activate btn-primary bs-btn-primary">Activate</button>                </div>            </div>          </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',dialogShareProject:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog">          <div class="modal-content">            <div class="modal-header">                <h4 class="modal-title">Sharing Settings</h4>                <h5><span class="illumicons project"></span> <%= projectModel.Name %></h5>            </div>            <div class="modal-body">                <h4>Invite a collaborator</h4>                <form id="invite-form">                    <div class="form-group">                        <input type="text" id="collaborator-email" class="form-control" placeholder="<%=(isEmailEnabled) ? \'Email address\' : \'Username\' %>" />                    </div>                                        <p id="collaborator-email-alert" style="display:none" class="alert alert-danger bs-project-modal-alert"></p>                                        <% if (isEmailEnabled) { %>                    <div class="form-group">                        <textarea id="personal-message" class="form-control" rows="4" placeholder = "Add a personal message (optional)"></textarea>                    </div>                    <% } %>                    <p id="personal-message-alert" style="display:none" class="alert alert-danger bs-project-modal-alert-personal-msg"></p>                    <div class="clearfix">                        <a id="invite-btn" class="btn btn-success btn-large pull-right">Invite</a>                    </div>                </form>                <div class="bs-modal-project-collaborator-container" id="collaborators-list" style="display:none">                    <h4 id="collaborator-count">Collaborators (<span></span>)</h4>                    <div id="collaborators">                                            </div>                </div>            </div>            <div class="modal-footer">                <div class="bs-modal-footer-buttons">                    <button id="cancel-btn" class="btn btn-default bs-btn-default modal-cancel">                        Cancel                    </button>                    <button id="save-btn" class="btn btn-primary bs-btn-primary modal-confirm">                        <span>Save Settings</span>                    </button>                </div>                <div id="button-bar-oncancel" style="display:none" class="alert alert-warning bs-modal-confirmation">                    <p id="cancel-message-alert">You will lose any unsaved changes.  Do you want to cancel?</p>                    <button class="btn btn-default bs-btn-default bs-modal-project-btn-confirm-yes modal-close" data-dismiss="modal">Yes</button>                                       <button class="btn btn-primary bs-btn-primary bs-modal-project-btn-confirm-no">No</button>                </div>            </div>          </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',dialogStopAnalysis:'<!-- Modal -->    <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">        <div class="modal-dialog bs-modal-dialog">            <div class="modal-content">                <div class="modal-header">                    <h4 class="modal-title">Are you sure you want to stop analysis?</h4>                </div>                <div class="modal-body">                    <p class="alert alert-danger"></p>                </div>                <div class="modal-footer">                    <button class="btn modal-cancel btn-default bs-btn-default" type="button" data-dismiss="modal">Cancel</button>                    <button class="btn btn-primary bs-btn-primary modal-confirm" type="button">Stop</button>                </div>            </div><!-- /.modal-content -->        </div><!-- /.modal-dialog -->    </div><!-- /.modal -->',dialogTransferOwnership:'<!-- Modal -->        <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">            <div class="modal-dialog bs-modal-dialog">              <div class="modal-content">                <div class="modal-header">                  <h4 class="modal-title">Transfer Ownership</h4>                  <h5><span class="illumicons project"></span><%= title %></h5>                </div>                <div class="modal-body">                    <form id="invite-form">                        <div class="form-group">                            <label for="collaborator-email">New Owner</label>                            <input type="text" id="transfer-email" class="form-control" placeholder = "<%=(isEmailEnabled) ? \'Email address\' : \'Username\' %>" />                        </div>                        <p id="email-alert" style="display:none" class="alert alert-danger"></p>                                                <% if (isEmailEnabled) { %>                        <div class="form-group">                            <label for="personal-message">Optional Message</label>                            <textarea id="personal-message" class="form-control" rows="4" placeholder = "Add a personal message (optional)"></textarea>                        </div>                        <% } %>                        <p id="personal-message-alert" style="display:none" class="alert alert-danger"></p>                        <div class="alert alert-warning">                            <i class="glyphicon glyphicon-exclamation-sign"></i>                            Apps in your account that currently use this data may not function properly after the                             data is transferred out of your account. Please review the <a href="/agreements/current/details?category=USER" target="_blank">BaseSpace User Terms of Use</a>                            for more information.                        </div>                    </form>                    <div id="dialog-transfer-ownership-confirmation" style="display:none">                        <p><strong>Please confirm you want to transfer ownership to <span id="confirmation-email"></span>.</strong></p>                        <p>Once the transfer has been completed it cannot be undone. The recipient of the transfer will be considered the legal owner of this project and its associated data. Please make sure you are authorized by your organization to make this transfer before proceeding.</p>                    </div>                </div>                <div class="modal-footer">                  <button type="button" class="btn btn-default bs-btn-default" data-dismiss="modal">Close</button>                  <button type="button" id="btn-continue" class="btn btn-primary bs-btn-primary">Continue</button>                  <button type="button" id="btn-transfer" class="btn btn-primary" style="display:none">Transfer Now</button>                </div>              </div><!-- /.modal-content -->            </div><!-- /.modal-dialog -->        </div><!-- /.modal -->',dialogTransferOwnershipPending:'<!-- Modal -->        <div class="modal fade" id="bs-modal-dialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">            <div class="modal-dialog bs-modal-dialog">              <div class="modal-content">                <div class="modal-header">                  <h4 class="modal-title">Transfer of Ownership Pending</h4>                  <h5><%= title %></h5>                </div>                <div class="modal-body">                    <div class="bs-modal-body-msg-transferownership" style="display:hidden">This project is pending transfer of ownership.</div>                    <img class="bs-icon-gif-loading" src="/Content/images/loading-icon-mini.gif" />                </div>                <div class="modal-footer">                  <button type="button" class="btn btn-default bs-btn-default" data-dismiss="modal">Close</button>                  <button type="button" id="btn-cancel-transfer" class="btn btn-primary bs-btn-primary">Cancel Transfer</button>                </div>              </div><!-- /.modal-content -->            </div><!-- /.modal-dialog -->        </div><!-- /.modal -->',notificationBar:'<div>        <div class="alert alert-large alert-warning bs-notification-bar">            <%= notification.Message %>            <div class="bs-notification-expandable">            <%= notification.ExpandedMessage %>            </div>        </div>    </div>',analysisFileBrowser:'<section class="toolbar-container">    </section>        <div class="bs-project-file-browser-container">        <h1 class="bs-section-heading">Output Files</h1>        <div class="bs-kendo-table"></div>    </div>',kendoFileBrowserTable:'# if (Type == "Directory") { #    <tr>        <td>            <a class="bs-directory-link bs-project-dir-files" href="#: Name #">                <span class="bs-icons filebrowser-folder"></span>                #: Name #            </a>        </td>        <td>Folder</td>        <td>--</td>    </tr>    # } else { #    <tr>        <td>            <a data-resource-id="#: Id #" class="bs-file-link bs-project-dir-files" href="\\#">               <span class="bs-icons #: iconClass #"></span>            </a>        </td>        <td>            #: Extension #        </td>        <td>            #: SizeFormatted #        </td>    </tr>    # } #',analysisFilesRoot:'<div class="bs-project-analysis-files-container">        <h1 class="bs-section-heading">Output Files</h1>        <div class="bs-kendo-table" id="analysis-files-root-table">        </div>    </div>',analysisFilesRootEmpty:'<div class="bs-project-file-browser-container">        <h1 class="bs-section-heading">Output files</h1>        <p class="alert alert-info">This analysis hasn\'t produced any output files.</p>    </div>',kendoAppResultTable:'<tr data-resource-id="#: Id #">        <td>            <a class="bs-project-dir-files" href="/analyses/#: bs.context.analysis.IdToken #/files/#: Id ## if(bs.context.analysis.ParentProject)  {#?projectId=#:bs.context.analysis.ParentProject.Id##}#">                <span class="bs-icons filebrowser-folder"></span>                #: Name #            </a>        </td>        <td class="bs-inputs">            <img src="/Content/images/loading-icon-mini.gif" alt="..." />        </td>        <td>            #= bs.Util.getDateConciseHtml(DateCreated) #        </td>        <td>App Result</td>        <td>#: (bs.context.analysis.Status.toLowerCase() == "complete" ? bs.Util.bytesToSize(TotalSize, 2) : "--") #</td>    </tr>',kendoInputsColumn:'<% if (Inputs.length == 1) { %>        <% _.each(Inputs, function(input) { %>            <span class="bs-util-nowrap"><%= input.getWebLinkHtml() %></span>        <% }); %>    <% } else if (Inputs.length > 1) { %>        <span class="badge bs-tooltip"><%= Inputs.length %> items</span>    <% } else { %>--<% } %>',kendoInputsColumnTooltip:'<div class="bs-tooltip-content dark">        <ul>            <% _.each(Inputs, function(input) { %>                <li>                    <%= input.getWebLinkHtml() %>                </li>            <% }); %>        </ul>    </div>',analysisInputs:'<div class="bs-section-content bs-project-analysis-input-section">        <h3 class="bs-section-heading">Inputs</h3>        <div id="inputs-form">            <%= formHtml %>        </div>    </div>',analysisInputLoadFailure:'<p class="alert alert-error">We\'re unable to show the inputs at this time.</p>',inputsStringArray:'<div class="clearfix">        <div class="bs-apps-input-label">            <h3 class="bs-section-subheading"><%- prop.Description ? prop.Description : prop.Name %></h3>        </div>        <div class="bs-apps-input-value">            <% if (prop.Items == 0) { %>            <p>--</p>            <% } else if (prop.Items.length == 1) { %>            <p><%- prop.Items[0] %></p>            <% } else { %>            <ul>                <% _.each(prop.Items, function(str) { %>                    <li><%- str %></li>                <% }); %>            </ul>            <% } %>        </div>    </div>',inputsString:'<div class="clearfix">        <div class="bs-apps-input-label">            <h3 class="bs-section-subheading"><%- prop.Description ? prop.Description : prop.Name %></h3>        </div>        <div class="bs-apps-input-value">            <p><%- prop.Content %></p>        </div>    </div>',inputsMapArray:'<div class="clearfix">        <div class="bs-apps-input-label">            <h3 class="bs-section-subheading"><%- prop.Description ? prop.Description : prop.Name %></h3>        </div>        <div class="bs-apps-input-value">            <ul>                <% _.each(prop.Items, function(map) { %>                    <li>                        <dl>                        <% _.each(map, function(item) { %>                            <dt><%- item.Key %></dt>                            <dd><%- item.Values.join(",") %></dd>                        <% }); %>                        </dl>                    </li>                <% }); %>            </ul>        </div>    </div>',inputsMap:'<div class="clearfix">        <div class="bs-apps-input-label">            <h3 class="bs-section-subheading"><%- prop.Description ? prop.Description : prop.Name %></h3>        </div>        <div class="bs-apps-input-value">            <dl>                <% _.each(prop.Content, function(item) { %>                    <dt><%- item.Key %></dt>                    <dd><%- item.Values.join(", ") %></dd>                <% }); %>            </dl>        </div>    </div>',inputsResourceList:'<div class="clearfix">        <div class="bs-apps-input-label">            <h3 class="bs-section-subheading"><%- prop.Description ? prop.Description : prop.Name %></h3>        </div>        <div class="bs-apps-input-value">            <table class="bs-table table-condensed table" style="margin-top: -8px">                <thead>                    <tr>                        <% _.each(columns, function(col) { %>                        <th><%= col %></th>                        <% }); %>                    </tr>                </thead>                <tbody>                    <% _.each(rows, function(row) { %>                        <tr>                        <% for (var key in row) { %>                            <td><%= row[key] %></td>                        <% } %>                        </tr>                    <% }); %>                </tbody>            </table>        </div>    </div>',
fileBrowserLogs:'<section id="toolbar-analysis-log-files" class="toolbar-container">    </section>    <div class="bs-project-file-browser-container">        <h1 class="bs-section-heading">Log files</h1>        <table class="bs-table table bs-table-filebrowser" style="background: white;">            <thead>                <th></th>                <th>Name</th>                <th>Type</th>                <th>Path</th>                <th>Size</th>            </thead>            <tbody>                <% Files.each(function(file) { %>                <tr>                    <td>                        <% if(_.isEqual(file.Extension, \'pdf\')) { %>                        <span class="icomoon icon-pdf"></span>                        <% } else if(_.isEqual(file.Extension, \'bam\')) { %>                        <span class="icomoon icon-bam"></span>                        <% } else if(_.isEqual(file.Extension, \'vcf\')) { %>                        <span class="icomoon icon-vcf"></span>                        <% } else if(_.isEqual(file.Extension, \'fq\')) { %>                        <span class="icomoon icon-fastq"></span>                        <% } else if(_.isEqual(file.Extension, \'xls\')) { %>                        <span class="icomoon icon-spreadsheet"></span>                        <% } else { %>                        <span class="icomoon icon-default-file"></span>                        <% } %>                    </td>                    <td>                        <a data-resource-id="<%= file.Id %>" class="bs-file-link bs-project-dir-files" href="#">                            <%= file.Name %>                        </a>                    </td>                    <td>                        <%= file.Extension %>                    </td>                    <td>                        <%= file.Path %>                    </td>                    <td>                        <%= file.SizeFormatted %>                    </td>                </tr>                <% }); %>            </tbody>        </table>    </div>',fileBrowserParentLogs:'<section id="toolbar-analysis-log-files" class="toolbar-container"></section>    <div class="bs-project-file-browser-container">        <h1 class="bs-section-heading">Log files</h1>        <table class="bs-table table bs-table-filebrowser" style="background: white;">            <thead>                <th></th>                <th>Name</th>            </thead>            <tbody>                <% Children.each(function(child) { %>                <tr>                    <td>                        <span class="bs-icons filebrowser-folder"></span>                    </td>                    <td>                        <a data-resource-id="<%= child.Id %>" data-analysis-id="<%= child.Id %>" data-folder-name="<%= child.Name %>" class="bs-directory-link bs-project-dir-files" href="logs/childlog/<%= child.Id %>">                            <%= child.Name %>                        </a>                    </td>                </tr>                <% }); %>            </tbody>        </table>    </div>',analysisReport:'<div class="bs-project-analysis-result-container">        <iframe class="bs-project-iframe" width="100%" src="/appsession/<%if(isPreview){%>preview<%} else {%>details<%}%>?token=<%= IdToken %>&appResultId=<%= Id %><%= assetPackageId ? "&assetPackageId="+assetPackageId : "" %>" />    </div>    <div id="report-loading-overlay" class="bs-loader-wrapper">        <div class="bs-loader">            <div class="bs-bar">            </div>            <div class="bs-bar">            </div>            <div class="bs-bar">            </div>        </div>    </div>',analysisSessionDetail:'<div>        <h3 class="bs-section-heading">Multi-Node Details</h3>        <div class="multinode-table-region">        </div>    </div>',analysisChildLog:"<%= logTailModel.Content %>",analysisChildLogNoLog:"This app has not written any logging information for this analysis.",multiNodeTable:'<div class="row bs-project-multinode-header">        <div class="col-md-6 col-sm-6"><a class="bs-table-sort-link" href="#" class="bs-sortby" data-sort-by="Name">Analysis Name</a>            <%             var sortArrowClass = "";            if(lastSorted.property == "Name") {                if(lastSorted.direction == "asc") {                    sortArrowClass = "icon-arrow-up2";                } else {                    sortArrowClass = "icon-arrow-down2";                }            }             %>            <span class="icomoon <%= sortArrowClass %>"></span>        </div>        <div class="col-md-3 col-sm-3"><a class="bs-table-sort-link" href="#" class="bs-sortby" data-sort-by="Status">Status</a>            <%            var sortArrowClass = "";            if(lastSorted.property == "Status") {                if(lastSorted.direction == "asc") {                    sortArrowClass = "icon-arrow-up2";                } else {                    sortArrowClass = "icon-arrow-down2";                }            }            %>            <span class="icomoon <%= sortArrowClass %>"></span>        </div>        <div class="col-md-3 col-sm-3"><a class="bs-table-sort-link" href="#" class="bs-sortby" data-sort-by="ModifiedOn">Duration</a>            <%            var sortArrowClass = "";            if(lastSorted.property == "ModifiedOn") {                if(lastSorted.direction == "asc") {                    sortArrowClass = "icon-arrow-up2";                } else {                    sortArrowClass = "icon-arrow-down2";                }            }            %>            <span class="icomoon <%= sortArrowClass %>"></span>        </div>    </div>    <div class="bs-multinode-table-body bs-project-multinode ">    </div>',analysisChildren:'<div class="bs-multinode-row">    <div class="row">        <div class="col-md-6 col-sm-6 bs-column">            <a href="#" class="bs-collapse" data-analysis-id="<%= analysisCompact.Id %>"><span data-analysis-id="<%= analysisCompact.Id %>" class="icomoon icon-arrow-up2 bs-multinode-arrow"></span> <%= analysisCompact.Name %></a>                </div>        <div class="col-md-3 col-sm-3 bs-column">            <div class="bs-progress-bar mini" title="<%= analysisCompact.StatusSummary %>">                <div class="bs-progress-bar-bg">                    <span class="bs-progress-status"></span>                </div>            </div>        </div>        <div class="col-md-3 col-sm-3 bs-column bs-multinode-duration">        </div>    </div>    <div id="collapse<%= analysisCompact.Id %>" class="bs-collapsible">        <div class="bs-log-region"><pre class="bs-log">Loading...</pre></div>    </div>    </div>',analysisInfo:'<div id="angular-analysis-info-container">        <bs-analysis-info-page backbone-app-session="backboneAppSession" ng-if="backboneAppSession">        </bs-analysis-info-page>    </div>',basePageLayout:'<div>        <div class="bs-toolbar-container"></div>        <div class="bs-page-content-container"></div>    </div>',importAnalysisLayout:'<div class="bs-uploader-container-padding">        <div class="row">            <div class="col-lg-8 col-md-12">                <div class="pull-right bs-page-content-padding-top">                    <strong>Quick help:</strong>                    <ul>                        <li><a class="bs-uploader-tooltip-help" href="#" data-powertip="<%- helpTooltip %>">What type of files can be uploaded?</a></li>                    </ul>                </div>                <h3 class="bs-section-heading">Import to BaseSpace</h3>                <h3 class="bs-section-subheading"><strong class="bs-font-dark">Step 1:</strong><br />Select Import Type</h3>                                <div class="bs-form-section">                    <div class="bs-form-section-group">                        <label class="bs-form-field-name medium bs-form-field-name-required">Type:</label>                        <select id="file-type-dropdown" class="bs-form-field-input" style="color: black">                            <option value="<%- bs.Models.ResourceType.UNDEFINED %>" selected="selected"></option>                              <option value="<%- bs.Models.ResourceType.APPRESULT %>">VCF</option>                            <% if(bs.hasWebUploaderSample) { %>                            <option value="<%- bs.Models.ResourceType.SAMPLE %>">Sample (FASTQ)</option>                            <% } %>                            <option value="<%- bs.Models.ResourceType.MANIFEST %>">Manifest</option>                        </select>                    </div>                </div>                                <hr class="bs-divider" />                <h3 class="bs-section-subheading"><strong class="bs-font-dark">Step 2:</strong><br />Upload your files.</h3>                <div class="bs-uploader-container"></div>                <hr class="bs-divider" />                <h3 class="bs-section-subheading"><strong class="bs-font-dark">Step 3:</strong><br />Finalize your import.</h3>                <div class="bs-form-container bs-page-content-padding-top"></div>            </div>        </div>    </div>',importAnalysisHelpTooltip:'<div>        <div class="bs-tooltip-content dark">            <p>                BaseSpace currently supports importing the following file types:                <ul>                    <li>VCF</li>                    <li>Manifest</li>                    <li>FASTQ</li>                </ul>            <p>Please enter a name for your analysis. You may optionally associate this analysis with existing Samples in BaseSpace. All uploaded files must be valid in order to be saved successfully to BaseSpace.</p>            <p>Please be aware that the following file types may not be uploaded currently:</p>            <ul>                <li>BCL</li>                <li>BAM</li>                <li>BED</li>            </ul>        </div>    </div>',importAnalysisNameTooltip:'<div>        <div class="bs-tooltip-content dark">            <p>Please enter a name for the analysis you\'re importing.</p>        </div>    </div>',importAnalysisSampleTooltip:'<div>        <div class="bs-tooltip-content dark">            <p>You may optionally associate the analysis you\'re importing with the sample(s) used as inputs.</p>            <p>By making this association, you will see this analysis listed on the sample’s detail page. You will also be able to locate these uploaded files later by navigating to one of the sample.</p>        </div>    </div>',importSampleNameTooltip:'<div>        <div class="bs-tooltip-content dark">            <p>Please enter a name for the sample you\'re importing.</p>        </div>    </div>',importSampleIdTooltip:'<div>        <div class="bs-tooltip-content dark">            <p>Please enter a Sample ID for the sample you\'re importing, as you entered on the samplesheet.</p>        </div>    </div>',importSampleRead1Tooltip:'<div>        <div class="bs-tooltip-content dark">            <p>Please specify the read length for Read 1 (this value must be greater than 0).</p>        </div>    </div>',importSampleRead2Tooltip:'<div>        <div class="bs-tooltip-content dark">            <p>Please specify the read length for Read 2.</p>        </div>    </div>',importSampleNumReadsRawTooltip:'<div>        <div class="bs-tooltip-content dark">            <p>Please specify the raw number of reads for the sample you\'d like to import.</p>        </div>    </div>',importSampleNumReadsPfTooltip:'<div>        <div class="bs-tooltip-content dark">            <p>Please specify the number of reads passing filter for the sample you\'d like to import.</p>        </div>    </div>',importManifestTypePfTooltip:'<div>        <div class="bs-tooltip-content dark">            <p>Please select the manifest type.</p>        </div>    </div>',importAnalysisForm:'<form>        <div class="bs-form-section">            <div class="bs-form-section-group bs-with-bottom-border">                <label class="bs-form-field-name medium bs-form-field-name-required">Name of analysis:</label>                <input type="text" class="bs-form-field-input" id="upload-results-name" maxlength="255" data-powertip="<%- nameTooltip %>" />            </div>            <div class="bs-form-section-group bs-with-bottom-border">                <label class="bs-form-field-name medium">Associate with input sample(s):</label>                <bs-chooser-form-control class="bs-form-field-chooser" id="associate-with-sample"                     multiselect="false"                     resource-type="sample"                     message="Select a sample"></bs-chooser-form-control>                <span class="info-icon-wrapper">                    <i class="icon info-icon bs-form-icon-info bs-sample-chooser-info-icon" data-powertip="<%- sampleTooltip %>">                        <img src="/public/images/information.png">                    </i>                </span>            </div>        </div>        <div class="pull-right clearfix bs-util-padding-top">            <button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-cancel-upload always-show-label">                <span class="icomoon icon-upload-cancel"></span>                <label>Cancel import</label>            </button>            <button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-complete-upload bs-btn-primary always-show-label">                <span class="icomoon icon-check"></span>                <label>Complete import</label>            </button>        </div>    </form>',importManifestForm:'<form>        <div class="bs-form-section">            <div class="bs-form-section-group ">                <label class="bs-form-field-name medium bs-form-field-name-required">Name:</label>                <input type="text" class="bs-form-field-input" id="upload-results-name" maxlength="255" data-powertip="<%- nameTooltip %>" />            </div>            <div class="bs-form-section-group bs-with-bottom-border">                <label class="bs-form-field-name medium">Manifest Type:</label>                <select id="manifest-type-dropdown" class="bs-form-field-input" style="color: black" data-powertip="<%- typeTooltip %>">                    <option value="<%- bs.Models.ManifestType.UNDEFINED %>" selected="selected"></option>                    <option value="<%- bs.Models.ManifestType.TRUSEQ %>">TruSeq Amplicon</option>                    <% if(bs.hasWebUploaderManifestNrc) { %>                    <option value="<%- bs.Models.ManifestType.NEXTERA %>">Nextera Rapid Capture</option>                    <% } %>                    <% if(bs.hasWebUploaderManifestTrex) { %>                    <option value="<%- bs.Models.ManifestType.RIDDLER %>">TruSeq Targeted RNA Expression ("TREx")</option>                    <% } %>                </select>            </div>        </div>        <div class="pull-right clearfix bs-util-padding-top">            <button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-cancel-upload always-show-label">                <span class="icomoon icon-upload-cancel"></span>                <label>Cancel import</label>            </button>            <button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-complete-upload bs-btn-primary always-show-label">                <span class="icomoon icon-check"></span>                <label>Complete import</label>            </button>        </div>    </form>',importSampleForm:'<form>        <div class="bs-form-section">            <div class="bs-form-section-group">                <label class="bs-form-field-name medium">Name:</label>                <input type="text" class="bs-form-field-input" id="upload-name" maxlength="255" data-powertip="<%- sampleNameTooltip %>" />            </div>            <div class="bs-form-section-group">                <label class="bs-form-field-name medium">Sample ID:</label>                <input type="text" class="bs-form-field-input" id="upload-sample-id" maxlength="255" data-powertip="<%- sampleIdTooltip %>" />            </div>            <div class="bs-form-section-group">                <label class="bs-form-field-name medium">Paired End:</label>                <input type="checkbox" id="upload-paired-end" value="paired-end" disabled="disabled" maxlength="255"  />            </div>                        <div class="bs-form-section-group">                <label class="bs-form-field-name medium">Read 1:</label>                <input type="text" class="bs-form-field-input" id="upload-read1" readonly maxlength="255" data-powertip="<%- sampleRead1Tooltip %>" />            </div>                        <div class="bs-form-section-group">                <label class="bs-form-field-name medium">Read 2:</label>                <input type="text" class="bs-form-field-input" id="upload-read2" readonly maxlength="255" data-powertip="<%- sampleRead2Tooltip %>" />            </div>                        <div class="bs-form-section-group">                <label class="bs-form-field-name medium">Genome (optional):</label>                <bs-chooser-form-control class="bs-form-field-chooser" id="upload-genome"                                         multiselect="false"                                         resource-type="genome"                                         message="Please select a genome:"></bs-chooser-form-control>            </div>                        <div class="bs-form-section-group">                <label class="bs-form-field-name medium">Number of Reads PF:</label>                <input type="text" class="bs-form-field-input" id="upload-num-reads-pf" readonly maxlength="255" data-powertip="<%- sampleNumReadsPfTooltip %>" />            </div>                        <div class="bs-form-section-group">                <label class="bs-form-field-name medium">Number of Reads Raw:</label>                <input type="text" class="bs-form-field-input" id="upload-num-reads-raw" readonly maxlength="255" data-powertip="<%- sampleNumReadsRawTooltip %>" />            </div>                    </div>        <div class="pull-right clearfix bs-util-padding-top">            <button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-cancel-upload always-show-label">                <span class="icomoon icon-upload-cancel"></span>                <label>Cancel import</label>            </button>            <button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-complete-upload bs-btn-primary always-show-label">                <span class="icomoon icon-check"></span>                <label>Complete import</label>            </button>        </div>    </form>',importDefaultForm:'<div class="pull-right clearfix bs-util-padding-top">        <button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-cancel-upload always-show-label">            <span class="icomoon icon-upload-cancel"></span>            <label>Cancel import</label>        </button>        <button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-complete-upload bs-btn-primary always-show-label disabled">            <span class="icomoon icon-check"></span>            <label>Complete import</label>        </button>    </div>',projectAbout:'<section class="toolbar-container" id="toolbar-about-container">    </section>    <div class="bs-project-about-container">        <div class="row-fluid">        <div class="col-md-9 bs-project-about-left-col">        <h1 class="bs-section-heading">About</h1>                <% if (!Description || Description.trim().length < 1) { %>                <p><em>Click "Edit Project" to add a description.</em></p>                <% } else { %>        <section id="project-description"><%- Description %></section>                <% } %>        </div>        <div class="col-md-3 bs-aside-info-right">        <ul class="bs-list-metadata" id="project-details">        <li id="project-owner"><img class="bs-avatar-icon" src="<%- UserOwnedBy.GravatarUrl %>" width="30" height="30" /> <%- UserOwnedBy.Name %></li>        <li id="project-sharing-status">    <% if (Collaborators.models.length > 0) { %>    <span class="illumicons three-collaborators"></span> Shared    <% } else { %>    <span class="illumicons one-person"></span> Not shared    <% } %>        </li>        <li>        <span class="illumicons calendar"></span>        <%= bs.Util.getDatetimeVerboseHtml(DateCreated) %>        </li>        </ul>        <% if (Collaborators.models.length > 0) { %>        <h3 class="bs-section-subheading">COLLABORATORS (<%= Collaborators.models.length %>)</h3>        <ul class="bs-list-metadata" id="project-collaborators">        <% Collaborators.each(function(collaborator) { %>        <li><img class="bs-avatar-icon" src="<%- collaborator.GravatarUrl %>" width="30" height="30" /><%= collaborator.Name %></li>        <% }); %>        </ul>        <% } %>        </div>        </div>    </div>',projectAnalyses:'<section class="toolbar-container" id="toolbar-analyses-container">    </section>        <div id="project-analysis-container">        <h1 class="bs-section-heading"><%= tableHeader %></h1>        <div class="bs-kendo-table"></div>    </div>',kendoAnalysesTable:'<tr data-resource-id="#: Id #" data-id-token="#: IdToken #">        <td role="gridcell" class="bs-linenums">#: LineNum #</td>        <td role="gridcell" class="select">            <input type="checkbox" />            <label class="bs-input-checkbox-img"></label>        </td>        <td># if (IsMsrWorkflow) { #            <a class="bs-request-route" href="/appsession/#: Id #/route?projectId=#: bs.context.project.Id #" href="\\#"><img class="bs-project-table-app-icon" src="#: HrefIcon #" width="30" height="30"/> #: Name #</a>            # } else { #            <a class="bs-request-route" href="/analyses/#: IdToken #?projectId=#: bs.context.project.Id #" href="\\#"><img class="bs-project-table-app-icon" src="#: HrefIcon #" width="30" height="30"/> #: Name #</a>            # } #        </td>        <td>            #= bs.Util.getDateConciseHtml(ModifiedOn) #        </td>        <td><span class="bs-tooltip badge status" # if (StatusSummary != null) { #data-powertip="<div class=\'bs-tooltip-content dark\'>#: StatusSummary #</a>"# } #>#: Status #</span></td>        <td><span class="bs-util-nowrap">#: AppName #</span></td>        <td><span class="bs-util-nowrap">#: bs.Util.bytesToSize(TotalSize,2) #</span></td>    </tr>',kendoAnalysesTableName:'# if (IsMsrWorkflow) { #    <a data-bs-fragment="/appsession/#: Id #/route?projectId=#: bs.context.project.Id #" href="\\#" data-bs-follow-link="true">#: Name #</a>    # } else { #    <a data-bs-fragment="analyses/#: IdToken #" href="\\#">#: Name #</a>    # } #',kendoAnalysesTableDateCreated:"#= bs.Util.getDateConciseHtml(DateCreated) #",kendoAnalysesTableStatus:"#: Status #",kendoAnalysesTableApplication:'<img class="bs-project-table-app-icon" src="#: HrefIcon #" width="30" height="30"/> #: AppName #',projectSamplesPage:'<section class="toolbar-container" id="toolbar-samples-container">    </section>    <div class="bs-project-sample-container">        <h1 class="bs-section-heading"><%= tableHeader %></h1>        <div class="bs-kendo-table">        </div>    </div>',kendoSamplesTable:'<tr role="row" data-resource-id="#: Id #" data-uid="#: Id #">        <td role="gridcell" class="bs-linenums">#: LineNum #</td>        <td role="gridcell" class="select">            <input type="checkbox" />            <label class="bs-input-checkbox-img"></label>        </td>        <td role="gridcell"><a href="/sample/#: Id #/#: bs.Utils.Validations.toLegalUrl(Name) #">#: SampleId #</a></td>        <td role="gridcell">#= bs.Util.getDateConciseHtml(DateCreated) #</td>        <td role="gridcell">            # if (IsPairedEnd && Read1 == Read2) { #            2 x #: Read1 #            # } else if (IsPairedEnd) { #            #: Read1 # / #: Read2 #            # } else { #            #: Read1 #            # } #        </td>        <td role="gridcell"><span class="bs-util-nowrap">#: Origin #</span></td>        <td role="gridcell"><span class="bs-util-nowrap">#: PreferredBuild #</span></td>        <td role="gridcell"><span class="bs-util-nowrap">#: bs.Util.bytesToSize(TotalSize,2) #</span></td>    </tr>',kendoSamplesTableSampleId:'<a href="/sample/#: Id #/#: Name #">#: SampleId #</a>',kendoSamplesTableDateCreated:"#= bs.Util.getDateConciseHtml(DateCreated) #",kendoSamplesTableReadLength:"# if (IsPairedEnd && Read1 == Read2) { #    2 x #: Read1 #    # } else if (IsPairedEnd) { #    #: Read1 # / #: Read2 #    # } else { #    #: Read1 #    # } #",kendoSamplesTableOrigin:"#: Origin #",kendoSamplesTablePreferredBuild:"#: PreferredBuild #",productCatalog:'<div>    <% if (app.ActiveSubscriptions.length > 0) { %>        <h4 class="text-align center">            <span class="fa fa-check color-success large"></span> You are subscribed.        </h4>        <br />        <table class="bs-table table no-border">            <tbody>                <% app.ActiveSubscriptions.each(function(product) { %>                    <tr>                        <td>                            <%= product.Name %>                        </td>                        <td class="text-right">                            <%= product.getDaysRemaining() %> remaining                        </td>                    </tr>                <% }); %>            </tbody>        </table>        <hr class="bs-core-divider bs-util-padding-side-none bs-util-padding-vertical-double" />    <% } %>    <% if (app.Products.length < 1) { %>        <button class="btn btn-default bs-product-catalog-toggle" type="button">            This app is free.        </button>    <% } else { %>        <button class="btn btn-default bs-product-catalog-toggle" id="pricing-details-toggle" type="button">            Pricing Details <span class="icomoon icon-arrow-down2"></span>        </button>        <div id="pricing-details-list" style="display: none;" class="product-catalog-price-list">            <bs-app-pricing-info products="products"></bs-app-pricing-info>        </div>    <% } %>    </div>',ajaxLoader:'<div class="bs-loader">        <div class="bs-bar"></div>        <div class="bs-bar"></div>        <div class="bs-bar"></div>    </div>',fileBrowserEmpty:'<div class="bs-project-analysis-files-container">        <h1 class="bs-section-heading">Output Files</h1>        <table class="bs-table table bs-table-filebrowser" style="background: white;">            <thead>                <th></th>                <th>Name</th>                <th>Type</th>                <th>Size</th>            </thead>            <tbody>                <tr>                    <td>                    </td>                    <td>                        <a style="font-size:18px;font-weight:bold" href="<%= previousFolderHref %>" class="previous-folder-href">..</a>                    </td>                    <td></td>                    <td></td>                </tr>            </tbody>        </table>        <p class="alert alert-info">This folder doesn\'t contain any files.</p>    </div>',loadingMessage:'<div class="loading-message loading-message-white-center">Loading <span class="loading-icon"></span></div>',loadingIcon:'<img src="/Content/images/loading-icon-mini.gif" alt="Loading..."/>',loadingBlank:'<div class="loading-message"></div>',validatingMessage:'<div class="loading-message loading-message-white-center">Validating <span class="loading-icon"></span></div>',savingMessage:'<div class="loading-message loading-message-white-center">Saving <span class="loading-icon"></span></div>',fileBrowser:'<div class="bs-project-file-browser-container">        <h1 class="bs-section-heading">Output Files</h1>        <table class="bs-table table bs-table-filebrowser" style="background: white;">            <thead>                <th></th>                <th>Name</th>                <th>Type</th>                <th>Size</th>            </thead>            <tbody>                <tr>                    <td>                    </td>                    <td>                        <a style="font-size:18px;font-weight:bold" href="<%= previousFolderHref %>" class="previous-folder-href">..</a>                    </td>                    <td></td>                    <td></td>                </tr>                <% _.each(SubDirectories, function(folder) { %>                <tr>                    <td>                         <span class="bs-icons filebrowser-folder"></span>                        </td>                    <td>                        <a class="bs-directory-link bs-project-dir-files" href="#" data-folder-name="<%= folder.Name %>">                            <%= folder.Name %>                        </a>                    </td>                    <td>Folder</td>                    <td>--</td>                </tr>                <% }); %>                <% _.each(Files, function(file) { %>                <tr>                    <td>                         <span class="icomoon <%= file.iconClass %>"></span>                      </td>                    <td>                        <a data-resource-id="<%= file.Id %>" class="bs-file-link bs-project-dir-files" href="#">                           <%= file.Name %>                        </a>                    </td>                    <td>                        <%= file.Extension %>                    </td>                    <td>                        <%= file.SizeFormatted %>                    </td>                </tr>                <% }); %>            </tbody>        </table>    </div>',theadCellSelectAll:"<input type='checkbox' class='select-all' /><label for='bs-checkbox-header-project-samples-table'></label>",kendoTableHeader:'<%= title %>    <% if (numSelected > 0) { %><span class="bs-section-heading-num-selected" title="# selected"><%= numSelected %> selected <span title="De-Select" class="bs-section-heading-deselect">×</span></span><% } %><span class="bs-section-heading-qty" title="Total Count"><%= totalCount %></span>',kendoTableHeaderEmpty:'<%= title %>    <span class="bs-section-heading-qty" title="Total Count"><%= totalCount %></span><span class="bs-section-heading-num-selected"><%= numSelected %> selected <span title="De-Select" class="bs-section-heading-deselect">×</span></span><% } %>',kendoTableLineNums:'<span class="bs-linenums">#: LineNum #</span>',shoppingCart:'<aside class="bs-shopping-cart">        <% if (cart.isBillingEnabled) { %>            <% if (cart.items.models.length < 1) { %>                <% if (showMessageWhenEmpty) { %><p class="text-right">Your cart is empty.</p> <% } %>            <% } else { %>             <table class="bs-table table">                <thead>                    <tr>                        <th>Items</th>                        <th>Quantity</th>                        <th class="text-right">Price (iCredits)</th>                    </tr>                </thead>                <tbody>                    <% cart.items.each(function(item) { %>                       <tr>                           <td>                               <%= item.Product.Name %>                           </td>                           <td>                               <%= item.Quantity %>                            </td>                            <td class="text-right">                                <%= item.Product.PriceRounded %>                            </td>                        </tr>                    <% }); %>                </tbody>            </table>            <div class="text-right" style="border-top:1px solid #ddd; margin-bottom: 20px;">                <h3 class="bs-section-subheading">Total before tax: <strong><%= cart.subtotalRounded %></strong></h3>             </div>            <% } %>        <% } %>    </aside>',
shoppingCartOverlay:'<div class="bs-apps-shoppingcart-overlay">        <img src="/public/cdn/basespace/libraries/bootstrap/images/loading-icon-mini.gif" />    </div>',sideNav:'<nav class="bs-nav-side">        <ul>            <% _.each(Items, function(item) { %>            <li>                <a id="<%= item.Id %>" class="<%= item.Id %>" href="<%= item.Href %>">                <label><%= item.Name %></label></a>            </li>            <% }); %>        </ul>    </nav>',sideNavAnalysis:'<nav class="bs-nav-side">        <ul>            <li>                <a id="nav-analysis-session" href="/analyses/<%= IdToken %>/info<% if(ParentProject) { %>?projectId=<%= ParentProject.Id %><% } %>">                    <label>Analysis Info</label>                </a>            </li>            <li>                <a id="nav-analysis-inputs" href="/analyses/<%= IdToken %>/inputs<% if(ParentProject) { %>?projectId=<%= ParentProject.Id %><% } %>">                    <label>Inputs</label>                </a>            </li>            <li>                <a id="nav-analysis-files" href="/analyses/<%= IdToken %>/files<% if(ParentProject) { %>?projectId=<%= ParentProject.Id %><% } %>">                    <label>Output Files</label>                </a>            </li>                    <% if (Status && Status.toLowerCase() == "complete") { %>                <% var areReports = Reports && Reports.models.length > 0; %>                <% var isSummary = areReports && Reports.models[0].SummaryTemplateEnabled; %>                <% var areResults = areReports && Reports.models[0].ResultTemplateEnabled && Results.length > 0; %>                <% var areDatasets = bs.isEnhancedAnalysisDetailsEnabled && Datasets && Datasets.models.length > 0; %>                <% if (isSummary || areResults || areDatasets) { %>                    <li class="bs-nav-side-header">                        <label>Analysis Reports</label>                    </li>                <% } %>                <% if (isSummary) { %>                    <% var report = Reports.models[0]; %>                    <li class="bs-nav-side-report">                        <a id="nav-analysis-result-0" href="/analyses/<%= IdToken %>/summary<% if(ParentProject) { %>?projectId=<%= ParentProject.Id %><% } %>">Summary</a>                    </li>                <% } %>                <% if (areDatasets) { %>                    <% Datasets.each(function(ds) { %>                        <li class="bs-nav-side-report"><span><%= ds.Name %></span></li>                        <% if (ds.V1pre3Id) { %>                            <li class="bs-nav-side-report">                                <a id="nav-analysis-result-<%= ds.V1pre3Id %>" href="/analyses/<%= IdToken %>/results/<%= ds.V1pre3Id %><% if(ParentProject) { %>?projectId=<%= ParentProject.Id %><% } %>">Report</a>                            </li>                        <% } %>                        <li class="bs-nav-side-report bs-nav-side-metric">                            <a class="external" href="/analyses/<%= IdToken %>/metrics/<%= ds.Id %><% if(ParentProject) { %>?projectId=<%= ParentProject.Id %><% } %>">Metrics</a>                        </li>                    <% }); %>                <% } else if (areResults) { %>                    <% Results.each(function(result) { %>                        <li class="bs-nav-side-report">                            <a id="nav-analysis-result-<%= result.Id %>" href="/analyses/<%= IdToken %>/results/<%= result.Id %><% if(ParentProject) { %>?projectId=<%= ParentProject.Id %><% } %>" title="<%= result.Name %>"><%= result.Name %></a>                        </li>                    <% }); %>                <% } %>            <% } %>        </ul>    </nav>',spacebug:'<div>        <div class="bs-developer-tools">            <div class="bs-developer-tools-header">                <div class="pull-right"><span class="icomoon icon-arrow-up bs-developer-tools-toggle-expand"></span></div>                <h5 class="pull-right">This section is only visible to the developer</h5>                <ul class="nav nav-tabs" id="bs-developer-tools-tabs">                    <li class="active"><a href="#spacebug-tools" data-toggle="tab">Tools</a></li>                    <li class=""><a href="#spacebug-billing-console" data-toggle="tab">Billing spec console <span class="badge"><%= model.billingSpecConsoleItems.length %></span></a></li>                </ul>            </div>            <div class="bs-developer-tools-body">                <div id="spacebug-tools" class="bs-developer-tools-main">                    <% if (model.agentId && model.missionControlUrl) { %>                    <div>                        <strong>Sample command-line to start local agent: </strong><br>                        <pre><code>sudo spacedock -a <%= model.agentId %> -m <%= model.missionControlUrl %></code></pre>                    </div>                    <% } %>                    <div class="bs-developer-tools-btngroup">                        <% if (model.agentId) { %>                        <button id="send-to-agent-button-id" class="btn btn-large btn-primary " title="Send this job to your local agent.">Send to Local Agent</button>                        <% } %>                        <button id="create-appsession-button-id" class="btn btn-large btn-primary " title="Simulate launch and save the App Session as a real App Session.">Create AppSession</button>                        <button id="simulate-launch-button-id" class="btn btn-large btn-primary " title="Display the generated Launch Specification and App Session. These are not saved and the application is not launched.">Simulate Launch</button>                        <div class="bs-developer-tools-help"><a href="<%= model.devPortalUrl %>/docs/content/documentation/apptools/formbuilder-overview#The_Developer_Tools_Section" target="_blank">What is this?</a></div>                    </div>                </div>                <div id="spacebug-billing-console" style="display:none">                    <div class="bs-spacebug-billingspec-region"></div>                </div>            </div>        </div>      </div>',spacebugConsole:'<div>        <div class="bs-developer-tools-console-container">            <ul class="bs-console">            </ul>        </div>    </div>',spacebugConsoleItem:'<div>        <% if (item.type == "Message") { %>        <span class="bs-console-message"><%- item.message %></span>        <% } else if (item.type == "Error") { %>        <span class="bs-console-error"><%- item.message %></span>        <% } else { %>        <span><%- item.message %></span>        <% } %>    </div>',projectAnalysesTable:'<table class="bs-table" style="background: white">        <thead>            <th>Name</th>            <th>Date Created</th>            <th>Status</th>            <th>App</th>        </thead>        <tbody>            <% Analyses.each(function(analysis) { %>            <tr data-resource-id="<%= analysis.Id %>" data-id-token="<%= analysis.IdToken %>">                <td><!-- a href="/appsession/<%= analysis.Id %>/route?projectId=<%= Id %>"><a href="/project/<%= Id %>/appsession/<%= analysis.Id %>/overview" -->                    <% if (analysis.IsMsrWorkflow) { %>                    <a href="/appsession/<%= analysis.Id %>/route?projectId=<%= Id %>" data-bs-follow-link="true"><%= analysis.Name %></a>                    <% } else { %>                    <a href="analyses/<%=analysis.IdToken%>"><%= analysis.Name %></a>                    <% } %>                </td>                <td>                    <%= bs.Util.getDateConciseHtml(analysis.DateCreated) %>                </td>                <td><%= analysis.Status %></td>                <td><img class="bs-project-table-app-icon" src="<%= analysis.HrefIcon %>" width="30" height="30"/><%= analysis.AppName %></td>            </tr>            <% }); %>        </tbody>    </table>',projectAnalysesTableEmpty:'<p class="alert alert-info">This project doesn\'t contain any analyses.</p>',searchResultsTable:'<table class="table bs-table table-striped" style="background: white">        <thead>            <th class="select-all"><input type="checkbox" /></th>            <th>Name</th>            <th>Type</th>        </thead>        <tbody>            <td>Search result 1</td>            <td>File</td>            <td></td>        </tbody>    </table>',titlebar:'<div class="bs-nav-titlebar">        <h2 class="bs-nav-titlebar-group">            <% if (Back) { %>            <a class="btn ilmn-gray bs-nav-back" href="<%= Back.Href %>" <%= Back.FollowLink === true ? "data-bs-follow-link=\'true\'" : "" %>>                <span class="illumicons caret-left medium"></span>                <% if (Back.IconHtml) { %><%= Back.IconHtml %> <% } %>                <span class="bs-nav-back-text"><%- Back.Text %></span>            </a>            <% } %>            <span class="bs-nav-title-text">                <% if (Current.IconHtml) { %><%= Current.IconHtml %> <% } %>                <span class="bs-nav-title-text"><%- Current.Text %></span>            </span>        </h2>    </div>',bioSampleCreateFooter:'<div>        <div id="lab-footer-bar" class="lab-footer-inner">            <div class="lab-footer-error" style="display:none"></div>            <button class="btn bs-toolbar-btn btn-large lab-footer-button next">                <span class="icomoon icon-arrow-right"></span>                Prep Libraries            </button>            <button class="btn bs-toolbar-btn btn-large lab-footer-button save">                Save &amp; Continue Later            </button>            <button class="btn bs-toolbar-btn btn-large lab-footer-button cancel">                Cancel            </button>        </div>    </div>',bioSampleEditFooter:'<div>        <div id="lab-footer-bar" class="lab-footer-inner">            <div class="lab-footer-error" style="display:none"></div>            <button class="btn bs-toolbar-btn btn-large lab-footer-button save">                Save            </button>            <button class="btn bs-toolbar-btn btn-large lab-footer-button cancel">                Cancel            </button>        </div>    </div>',bioSampleDetailsFooter:'<div>        <div id="lab-footer-bar" class="lab-footer-inner">            <button class="btn bs-toolbar-btn btn-large lab-footer-button next">                <span class="icomoon icon-arrow-right"></span>                Prep Libraries            </button>        </div>    </div>',prepLibraryCreateFooter:'<div>        <div id="lab-footer-bar" class="lab-footer-inner">            <div class="lab-footer-error" style="display:none"></div>            <button class="btn bs-toolbar-btn btn-large lab-footer-button next">                <span class="icomoon icon-arrow-right"></span>                Pool Libraries            </button>            <button class="btn bs-toolbar-btn btn-large lab-footer-button save">                Save &amp; Continue Later            </button>            <button class="btn bs-toolbar-btn btn-large lab-footer-button cancel">                Cancel            </button>        </div>    </div>',prepLibraryEditFooter:'<div>        <div id="lab-footer-bar" class="lab-footer-inner">            <div class="lab-footer-error" style="display:none"></div>            <button class="btn bs-toolbar-btn btn-large lab-footer-button save">                Save            </button>            <button class="btn bs-toolbar-btn btn-large lab-footer-button cancel">                Cancel            </button>        </div>    </div>',toolbar:'<menu class="bs-toolbar-main">        <span class="bs-toolbar-primary"></span>        <span class="bs-toolbar-secondary"></span>    </menu>',toolbarContextual:'<menu class="bs-toolbar pull-right">        <span class="bs-toolbar-primary"></span>        <span class="bs-toolbar-secondary"></span>    </menu>',toolbarApps:'<span class="dropdown">        <button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-apps"><span class="icomoon icon-rocket"></span> <label>Launch app</label></button>        <ul class="dropdown-menu bs-apps-menu" role="menu">            <li style="margin-left:20px">Loading <img src="/Content/images/loading-icon-mini.gif" alt="..." /></li>        </ul>    </span>',toolbarUpload:'<div><!--<button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-cancel-upload">    <span class="icomoon icon-upload-cancel"></span>    <label>Cancel import</label></button><button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-complete-upload bs-btn-primary">    <span class="icomoon icon-check"></span>    <label>Complete import</label></button>--></div>',toolbarUploadSuccess:'<button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-upload-more">        <span class="icomoon icon-upload"></span>        <label>Import more</label>    </button>    <button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-upload-browse-files bs-btn-primary">        <span class="icomoon icon-file"></span>        <label>Browse files</label>    </button>',toolbarUploadFailure:'<button data-toggle="dropdown" data-target="#" class="btn bs-toolbar-btn btn-large bs-toolbar-upload-more">        <span class="icomoon icon-upload"></span>        <label>Try again</label>    </button>',toolbarProjectDefault:'<% if(bs.hasDownloader) { %>        <button class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-project-download stay-enabled" id="toolbar-btn-project-download"><span class="icomoon icon-download"></span> <label>Download Project</label></button>        <% } %>        <button class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-upload" id="toolbar-btn-project-upload"><span class="icomoon icon-upload"></span> <label>Import</label></button>        <button class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-share" id="toolbar-btn-project-share"><span class="icomoon icon-share"></span> <label>Share project</label></button>        <button class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-getlink" id="toolbar-btn-project-get-link"><span class="icomoon icon-link"></span> <label>Get link</label></button>        <button class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-edit" id="toolbar-btn-project-edit"><span class="icomoon icon-edit"></span> <label>Edit project</label></button>        <button class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-transfer"  id="toolbar-btn-project-transfer"><span class="icomoon icon-key"></span> <label>Transfer Owner</label></button>        <button class="btn btn-large bs-toolbar-main-btn-pendingtransfer" id="toolbar-btn-project-transfer-pending"><span class="icomoon icon-key"></span> <label>Pending Transfer</label></button>',toolbarSamples:'<% if(bs.hasDownloader) { %>    <button class="btn bs-toolbar-btn btn-large bs-toolbar-samples-btn-samples-download" id="toolbar-btn-samples-download"><span class="icomoon icon-download"></span> <label>Download Samples</label></button>    <% } %>    <button class="btn bs-toolbar-btn btn-large bs-toolbar-samples-btn-combine" id="toolbar-btn-sample-merge"><span class="icomoon icon-merge"></span> <label>Combine</label></button>    <button class="btn bs-toolbar-btn btn-large bs-toolbar-samples-btn-copyto" id="toolbar-btn-sample-copy"><span class="icomoon icon-copy"></span> <label>Copy to...</label></button>',toolbarAnalysisDefault:'<% if(bs.hasDownloader) { %>    <button class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-analysis-download" id="toolbar-btn-analyses-download"><span class="icomoon icon-download"></span> <label>Download Analysis</label></button>      <% } %>         <button class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-edit"><span class="icomoon icon-edit"></span> <label>Rename analysis</label></button>    <% if(analysisApplication != undefined && (analysisApplication.Category == "Native" || analysisApplication.Category == "Instance" || analysisApplication.Category == "Workflow")) { %>        <%             var disabled = "";            if(analysisModel.Status != "Running" && analysisModel.Status != "Pending")                disabled="disabled";        %>        <button class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-stop" <%= disabled %>><span class="icomoon icon-stop"></span> <label>Stop analysis</label></button>    <% } %>    <button class="btn bs-toolbar-btn btn-large bs-toolbar-btn-analyses-delete">        <span class="icomoon icon-delete"></span> <label>Move to Trash</label>    </button>',toolbarAnalyses:'<% if(bs.hasDownloader) { %>    <button class="btn bs-toolbar-btn btn-large bs-toolbar-analyses-btn-analyses-download" id="toolbar-btn-analyses-download"><span class="icomoon icon-download"></span> <label>Download Analyses</label></button>    <% } %>',toolbarDownload:'<% if(bs.hasDownloader) { %>    <button class="btn bs-toolbar-btn btn-large bs-toolbar-main-btn-download"><span class="icomoon icon-download"></span> <label>Download</label></button>    <% } %>',toolbarAppsMenuItems:'<% apps.each(function(app) { %>    <li data-powertipjq="<%= app.tooltipHtml %>">        <a class="btn-launch"        <% if (app.Category == \'Instance\' || app.Category == \'Native\' || app.Category == \'Workflow\' || app.HasActiveForm){ %>        href="/appsession/start?clientId=<%= app.ClientId%><% if (context == \'sample\'){%>&sample-id=<%=resourceId%><%}%><%if(context == \'appresult\'){%>&appresult-id=<%=resourceId%><%}%>&project-id=<%=projectId%>"        <% } else if (app.UsesPreauth){ %>        target="_blank"        href="/oauth/authorize?response_type=code&client_id=<%= app.ClientId %>&redirect_uri=<%= app.TriggerUri%>&scope=<%= app.Scope%>&isPreAuth=true&state=appResultId%20<%= app.AppResultId %>"        <% } else { %>        target="_blank"        href="/projecttrigger/<%= app.ResourceProjectId %>/<%= app.Id %>"        <%}%>        data-trigger="hover">        <img width="30" height="30" class="app-icon" src="<%= app.HrefLogo%>" alt="" /> <%= app.Name%>     </a>    </li>    <% }); %>',toolbarAppsMenuItemsTooltip:'<div class="bs-tooltip-heading light">    <hgroup class="bs-apps-heading-small"><img alt="" src="<%= HrefLogo %>" class="bs-apps-icon-medium" width="57" height="57" /><h1 class="bs-apps-title"><%- Name %></h1><h4 class="bs-apps-companyname"><%- CompanyName %></h4></hgroup>    </div>    <div class="bs-tooltip-content dark">        <p><%= ShortDescription %></p>        <% if (LongDescription.length > 0) { %><hr/>        <p><%= LongDescription %></p><% } %>    </div>',labToolbar:'<div>        <menu>            <% _.each(buttons, function (button) { %>            <button class="btn bs-toolbar-btn btn-large <%=button.className%><%= (button.isNext) ? " bs-btn-primary" : "" %>">                <span class="<%=button.icon%>"></span><label><%=button.text%></label>            </button>            <% }); %>        </menu>    </div>'}}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Resource=function(_super){function Resource(){_super.apply(this,arguments)}return __extends(Resource,_super),Resource.prototype.getWebLinkHtml=function(showIcon){return void 0===showIcon&&(showIcon=!0),this.Name},Object.defineProperty(Resource.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Resource.prototype.getPropertyResourcePath=function(){return""},Resource}(bs.Models.Model);Models.Resource=Resource,function(ResourceType){ResourceType[ResourceType.APPRESULT=0]="APPRESULT",ResourceType[ResourceType.SAMPLE=1]="SAMPLE",ResourceType[ResourceType.MANIFEST=2]="MANIFEST",ResourceType[ResourceType.UNDEFINED=3]="UNDEFINED"}(Models.ResourceType||(Models.ResourceType={}));Models.ResourceType;!function(ManifestType){ManifestType[ManifestType.RIDDLER=0]="RIDDLER",ManifestType[ManifestType.TRUSEQ=1]="TRUSEQ",ManifestType[ManifestType.NEXTERA=2]="NEXTERA",ManifestType[ManifestType.CUSTOM=3]="CUSTOM",ManifestType[ManifestType.UNDEFINED=4]="UNDEFINED"}(Models.ManifestType||(Models.ManifestType={}));Models.ManifestType}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var DatedResource=function(_super){function DatedResource(){_super.apply(this,arguments)}return __extends(DatedResource,_super),Object.defineProperty(DatedResource.prototype,"DateCreated",{get:function(){return this.get("DateCreated")},set:function(value){this.set("DateCreated",value)},enumerable:!0,configurable:!0}),Object.defineProperty(DatedResource.prototype,"ModifiedOn",{get:function(){return this.get("ModifiedOn")},set:function(value){this.set("ModifiedOn",value)},enumerable:!0,configurable:!0}),DatedResource}(bs.Models.Resource);Models.DatedResource=DatedResource}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var Collection=function(_super){function Collection(models,options){var _this=this;this.isFetching=!1,this.hasFetched=!1,_super.call(this,models,options),this.on(bs.Events.BACKBONE_REQUEST,function(){_this.isFetching=!0}),this.on(bs.Events.BACKBONE_SYNC,function(){_this.isFetching=!1,_this.hasFetched=!0}),this.on(bs.Events.BACKBONE_ERROR,function(){_this.isFetching=!1})}return __extends(Collection,_super),Collection.prototype.parse=function(response,options){"TotalCount"in response.Response?this.totalCount=response.Response.TotalCount:"totalCount"in response&&(this.totalCount=response.totalCount);for(var modelList=[],i=0;i<response.Response.Items.length;i++){var item=response.Response.Items[i],model=item;modelList.push(model)}return modelList},Collection.prototype.fetch=function(options){return this.requiredFetchParams?_super.prototype.fetch.call(this,$.extend(!0,{},options,this.requiredFetchParams)):_super.prototype.fetch.call(this,options)},Collection}(Backbone.Collection);Collections.Collection=Collection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var FileCollection=function(_super){function FileCollection(){_super.apply(this,arguments)}return __extends(FileCollection,_super),FileCollection.prototype.initialize=function(){this.model=function(attributes,options){return"Size"in attributes?new bs.Models.File(attributes):new bs.Models.Directory(attributes)}},FileCollection.prototype.parse=function(response,options){var responseAttributesArray=[];if(null!=response.Response.SubDirectories)for(var i=0;i<response.Response.SubDirectories.length;i++)responseAttributesArray.push({Name:response.Response.SubDirectories[i].Name});return responseAttributesArray=responseAttributesArray.concat(_super.prototype.parse.call(this,response,options))},FileCollection}(Collections.Collection);Collections.FileCollection=FileCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Dataset=function(_super){function Dataset(attributes){_super.call(this,attributes)}return __extends(Dataset,_super),Object.defineProperty(Dataset.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"Href",{get:function(){return this.get("Href")},set:function(value){this.set("Href",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"HrefFiles",{get:function(){return this.get("HrefFiles")},set:function(value){this.set("HrefFiles",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"DateCreated",{get:function(){return this.get("DateCreated")},set:function(value){this.set("DateCreated",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"DateModified",{get:function(){return this.get("DateModified")},set:function(value){this.set("DateModified",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"TotalSize",{get:function(){return this.get("TotalSize")},set:function(value){this.set("TotalSize",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"UserOwnedBy",{get:function(){return this.get("UserOwnedBy")},set:function(value){this.set("UserOwnedBy",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"DatasetType",{get:function(){return this.get("DatasetType")},set:function(value){this.set("DatasetType",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"AppSession",{get:function(){return this.get("AppSession")},set:function(value){this.set("AppSession",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"Project",{get:function(){return this.get("Project")},set:function(value){this.set("Project",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"Attributes",{get:function(){return this.get("Attributes")},set:function(value){this.set("Attributes",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"Properties",{get:function(){return this.get("Properties")},set:function(value){this.set("Properties",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"QcStatus",{get:function(){return this.get("QcStatus")},set:function(value){this.set("QcStatus",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Dataset.prototype,"V1pre3Id",{get:function(){return this.get("V1pre3Id")},set:function(value){this.set("V1pre3Id",value)},enumerable:!0,configurable:!0}),Dataset}(Models.Model);Models.Dataset=Dataset}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var DatasetCollection=function(_super){function DatasetCollection(){_super.apply(this,arguments)}return __extends(DatasetCollection,_super),DatasetCollection.prototype.initialize=function(){this.model=bs.Models.Dataset},DatasetCollection.prototype.parse=function(response,options){var modelList=[],datasetProperties=response.Properties&&response.Properties.Items&&response.Properties.Items.filter(function(i){return"dataset[]"===i.Type&&"Output.Datasets"==i.Name})||[];if(!datasetProperties.length)return modelList;for(var datasetProperty=datasetProperties[0],propertyItems=datasetProperty&&datasetProperty.Items||[],prefix="ar.",i=0;i<propertyItems.length;i++){var ds=propertyItems[i];ds.V1pre3Id=ds.V1pre3Id&&0===ds.V1pre3Id.indexOf(prefix)?ds.V1pre3Id.substring(prefix.length):null,modelList.push(ds)}return modelList},DatasetCollection}(Collections.Collection);Collections.DatasetCollection=DatasetCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var File=function(_super){function File(){_super.apply(this,arguments)}return __extends(File,_super),File.prototype.urlContent=function(){return this.url()+"/content"},File.prototype.initialize=function(){this.urlRoot=bs.BsApiHelper.getBaseApiUrl()+"files/"},File.prototype.fetchFileContent=function(){var _this=this;this.attributeFetchMethods={Content:function(complete,fail){bs.api.fetchFileContent(_this.Id,function(json){if(_this.Category=bs.Util.getFileCategoryByExtension(_this.Extension),_this.Category==bs.Util.IMAGE_FILE||_this.Category==bs.Util.PDF_FILE)_this.isFetching=!1,_this.ContentDirectUrl=json.Response.HrefContent,complete();else{var ajaxOptions;ajaxOptions=$.support.cors?{url:json.Response.HrefContent}:{url:_this.urlRoot+_this.Id+"/content",data:{redirect:"proxy"}},$.ajax(ajaxOptions).done(function(data,textStatus,jqXHR){_this.isFetching=!1;var contentType=jqXHR.getResponseHeader("content-type")||"";contentType.indexOf("xml")>-1&&(data=(new XMLSerializer).serializeToString(data)),_this.Content=bs.Util.escapeHtml(data),complete()})}},function(failResponse){_this.isFetching=!1,fail()},{redirect:"meta"})}}},Object.defineProperty(File.prototype,"iconClass",{get:function(){var cssClass="icon-file";return _.isEqual(this.Extension,"pdf")?cssClass="icon-pdf":_.isEqual(this.Extension,"bam")?cssClass="icon-bam":_.isEqual(this.Extension,"vcf")?cssClass="icon-vcf":_.isEqual(this.Extension,"fq")?cssClass="icon-fq":_.isEqual(this.Extension,"xls")||_.isEqual(this.Extension,"csv")||_.isEqual(this.Extension,"tsv")||_.isEqual(this.Extension,"tab")?cssClass="icon-spreadsheet":this.Category==bs.Util.IMAGE_FILE&&(cssClass="icon-image"),cssClass},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"fileHandle",{get:function(){return this.get("fileHandle")},set:function(value){this.set("fileHandle",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"SizeFormatted",{get:function(){return this.get("SizeFormatted")},set:function(value){this.set("SizeFormatted",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"Extension",{get:function(){return this.get("Extension")},set:function(value){this.set("Extension",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"Category",{get:function(){return this.get("Category")},set:function(value){this.set("Category",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"Files",{get:function(){return this.get("FileCollection")},set:function(value){this.set("FileCollection",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"Type",{get:function(){return this.get("Type")},set:function(value){this.set("Type",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value),this.Extension=this.Type=bs.Util.getFileNameExtension(value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"Url",{get:function(){return this.get("Url")},set:function(value){this.set("Url",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"Size",{get:function(){return this.get("Size")},set:function(value){this.set("Size",value),this.SizeFormatted=bs.Util.bytesToSize(value,2)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"ModifiedDate",{get:function(){return this.get("ModifiedDate")},set:function(value){this.set("ModifiedDate",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"IsTextFile",{get:function(){return this.get("IsTextFile")},set:function(value){this.set("IsTextFile",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"Content",{get:function(){return this.get("Content")},set:function(value){this.set("Content",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"ContentDirectUrl",{get:function(){return this.get("ContentDirectUrl")},set:function(value){this.set("ContentDirectUrl",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"errorMessage",{get:function(){return this.get("errorMessage")},set:function(value){this.set("errorMessage",value)},enumerable:!0,configurable:!0}),Object.defineProperty(File.prototype,"defaults",{get:function(){return{Id:null,Url:null,Name:null,Extension:null,FileSizeBytes:null,ModifiedDate:null,IsTextFile:null,Category:null,Content:null,ContentUrl:null,errorMessage:""}},enumerable:!0,configurable:!0}),File}(Models.DatedResource);Models.File=File}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Directory=function(_super){function Directory(){_super.apply(this,arguments)}return __extends(Directory,_super),Directory.prototype.initialize=function(){this.idAttribute="Path",this.Type="Directory";

},Object.defineProperty(Directory.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Directory.prototype,"Type",{get:function(){return this.get("Type")},set:function(value){this.set("Type",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Directory.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value),this.Id=value},enumerable:!0,configurable:!0}),Object.defineProperty(Directory.prototype,"ResourceApiFragment",{get:function(){return this.get("ResourceApiFragment")},set:function(value){this.set("ResourceApiFragment",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Directory.prototype,"ResourceId",{get:function(){return this.get("ResourceId")},set:function(value){this.set("ResourceId",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Directory.prototype,"Path",{get:function(){return this.get("Path")},set:function(value){this.set("Path",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Directory.prototype,"defaults",{get:function(){return{Name:"",Path:"",ResourceApiFragment:"",ResourceId:"",Type:"Directory"}},enumerable:!0,configurable:!0}),Directory}(bs.Models.Model);Models.Directory=Directory}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var User=function(_super){function User(){_super.apply(this,arguments)}return __extends(User,_super),User.prototype.initialize=function(){this.urlRoot=bs.BsApiHelper.getBaseApiUrl()+"users/"},Object.defineProperty(User.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(User.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(User.prototype,"Email",{get:function(){return this.get("Email")},set:function(value){this.set("Email",value)},enumerable:!0,configurable:!0}),Object.defineProperty(User.prototype,"EmailHash",{get:function(){return this.get("EmailHash")},set:function(value){this.set("EmailHash",value)},enumerable:!0,configurable:!0}),Object.defineProperty(User.prototype,"defaults",{get:function(){return{Name:null,Description:null,Status:null,Id:null}},enumerable:!0,configurable:!0}),User}(bs.Models.Model);Models.User=User}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Analysis=function(_super){function Analysis(attributes){var _this=this;this.logXhrOptions=$.extend(!0,{},bs.XHR_OPTIONS,{error:function(){_this.Log.hasFetched=!0,_this.Log.isFetching=!1,_this.Log.trigger(bs.Events.BACKBONE_SYNC)}}),_super.call(this,attributes)}return __extends(Analysis,_super),Object.defineProperty(Analysis.prototype,"webUrl",{get:function(){return"/analyses/"+this.IdToken},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"iconHtml",{get:function(){return'<img src="'+this.HrefIcon+'" /> '},enumerable:!0,configurable:!0}),Analysis.prototype.getWebLinkHtml=function(showIcon){return void 0===showIcon&&(showIcon=!0),this.IsDeleted?(showIcon?this.iconHtml:"")+this.Name:'<a href="'+this.webUrl+'">'+(showIcon?this.iconHtml:"")+this.Name+"</a>"},Analysis.prototype.fetch=function(options){return options=$.extend(!0,{data:{PropertiesLimit:100,PropertyItemsLimit:100}},bs.XHR_OPTIONS,options),_super.prototype.fetch.call(this,options)},Analysis.prototype.initialize=function(){var _this=this;this.previewReportPackageId=null,this.idAttribute="IdToken",this.urlRoot=bs.BsApiHelper.getBaseApiUrl()+"appsessions/",this.Results=new bs.Collections.AppResultCollection(null,{url:function(){var ret=bs.BsApiHelper.getBaseApiUrl()+"appsessions/"+_this.IdToken+"/appresults?SortBy=DateCreated&SortDir=desc&Limit=1000&ExcludeResultsWithUnindexedSamples=true";return _this.ParentProject&&(ret+="&output.projects="+_this.ParentProject.Id),ret}}),bs.isEnhancedAnalysisDetailsEnabled&&(this.Datasets=new bs.Collections.DatasetCollection(null,{url:function(){return bs.BsApiHelper.getV2BaseApiUrl()+"appsessions/"+_this.IdToken}})),this.Reports=new bs.Collections.ReportCollection(null,{url:function(){return bs.BsApiHelper.getBaseApiUrl()+"appsessions/"+_this.IdToken+"/reports"+(_this.previewReportPackageId?"?Limit=100&assetpackageid="+_this.previewReportPackageId:"?status=active")}}),this.Properties=new bs.Collections.PropertyCollection(null,{url:function(){return bs.BsApiHelper.getBaseApiUrl()+"appsessions/"+_this.IdToken+"/properties"}}),this.LogFiles=new bs.Collections.FileCollection(null,{url:function(){return bs.BsApiHelper.getBaseApiUrl()+_this.HrefLogs.replace("v1pre3","")+"/files?Limit=1000"}}),this.LogFiles.comparator=function(f){return f.Name},this.Log=new Models.Log({Id:this.IdToken})},Object.defineProperty(Analysis.prototype,"Children",{get:function(){return this.get("Children")},set:function(value){this.set("Children",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"Properties",{get:function(){return this.get("Properties")},set:function(value){this.set("Properties",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"References",{get:function(){return this.get("References")},set:function(value){this.set("References",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"Inputs",{get:function(){return this.get("Inputs")},set:function(value){this.set("Inputs",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"IsDeleted",{get:function(){return this.get("IsDeleted")},set:function(value){this.set("IsDeleted",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"IdToken",{get:function(){return this.get("IdToken")},set:function(value){this.set("IdToken",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"DateCompleted",{get:function(){return this.get("DateCompleted")},set:function(value){this.set("DateCompleted",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"ModifiedOn",{get:function(){return this.get("ModifiedOn")},set:function(value){this.set("ModifiedOn",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"Status",{get:function(){return this.get("Status")},set:function(value){this.set("Status",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"StatusSummary",{get:function(){return this.get("StatusSummary")},set:function(value){this.set("StatusSummary",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"AppName",{get:function(){return this.get("AppName")},set:function(value){this.set("AppName",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"Application",{get:function(){return this.get("Application")},set:function(value){this.set("Application",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"AppCompany",{get:function(){return this.get("AppCompany")},set:function(value){this.set("AppCompany",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"HrefIcon",{get:function(){return this.get("HrefIcon")},set:function(value){this.set("HrefIcon",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"HrefLogs",{get:function(){return this.get("HrefLogs")},set:function(value){this.set("HrefLogs",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"LogFiles",{get:function(){return this.get("LogFiles")},set:function(value){this.set("LogFiles",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"Datasets",{get:function(){return bs.isEnhancedAnalysisDetailsEnabled?this.get("Datasets"):null},set:function(value){this.set("Datasets",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"Results",{get:function(){return this.get("Results")},set:function(value){this.set("Results",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"Reports",{get:function(){return this.get("Reports")},set:function(value){this.set("Reports",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"Log",{get:function(){return this.get("Log")},set:function(value){this.set("Log",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"IsMsrWorkflow",{get:function(){return this.get("IsMsrWorkflow")},set:function(value){this.set("IsMsrWorkflow",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"UserCreatedBy",{get:function(){return this.get("UserCreatedBy")},set:function(value){this.set("UserCreatedBy",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"UserOwnedBy",{get:function(){return this.get("UserCreatedBy")},set:function(value){this.set("UserCreatedBy",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"ParentProject",{get:function(){return this.get("ParentProject")},set:function(value){this.set("ParentProject",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"TotalSize",{get:function(){return this.get("TotalSize")},set:function(value){this.set("TotalSize",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Analysis.prototype,"defaults",{get:function(){return{Id:null,DateCreated:null,ModifiedOn:null,DateCompleted:null,Name:null,Status:null,StatusSummary:null,AppName:null,AppCompany:null,Application:{Name:null},HrefIcon:null,HrefLogs:null,Results:null,Log:{Name:"logs.tail"},UserCreatedBy:null,TotalSize:null}},enumerable:!0,configurable:!0}),Analysis.prototype.parse=function(response){var response=_super.prototype.parse.call(this,response);if(response.Children){var children=new bs.Collections.AnalysisCompactCollection;children.reset(children.parse(response.Children)),response.Children=children}if(response.Properties){var properties=new bs.Collections.PropertyCollection;properties.reset(properties.parse(response.Properties)),response.Properties=properties;var logProperty=properties.findWhere({Name:Analysis.LOG_TAIL_PROPERTY_NAME});logProperty&&(response.Log=new Models.Log({Id:response.Id,Content:logProperty.Content}));var outputProjectsProperty=properties.findWhere({Name:Analysis.OUTPUT_PROJECT_PROPERTY_NAME});outputProjectsProperty&&window.location.href.indexOf("projectId=")<0&&(response.ParentProject=outputProjectsProperty.Items.models[0])}return response.Application&&(response.Application=new bs.Models.Application(response.Application)),response.UserCreatedBy&&(response.UserCreatedBy=new bs.Models.User(response.UserCreatedBy)),response},Analysis.prototype.validate=function(attributes,options){var errors=[];return"IdToken"in attributes&&!attributes.Id&&errors.push({Message:Models.Validation.ANALYSIS_IDTOKEN_REQUIRED,Property:"IdToken",Type:Models.Validation.ERROR}),!attributes.Name||attributes.Name.trim().length<1?errors.push({Message:Models.Validation.ANALYSIS_NAME_REQUIRED,Property:"Name",Type:Models.Validation.ERROR}):attributes.Name.trim().length>Models.Validation.ANALYSIS_NAME_MAX_LENGTH&&errors.push({Message:Models.Validation.ANALYSIS_NAME_TOO_LONG,Property:"Name",Type:Models.Validation.ERROR}),errors.length>0?errors:void 0},Analysis.prototype.qsParams=function(){var params={};return this.ParentProject&&(params={projectId:this.ParentProject.Id}),$.param(params)},Analysis.OUTPUT_PROJECT_PROPERTY_NAME="Output.Projects",Analysis.LOG_TAIL_PROPERTY_NAME="Logs.Tail",Analysis}(Models.DatedResource);Models.Analysis=Analysis}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Collaborator=function(_super){function Collaborator(){_super.apply(this,arguments)}return __extends(Collaborator,_super),Object.defineProperty(Collaborator.prototype,"InviteId",{get:function(){return this.get("InviteId")},set:function(value){this.set("InviteId",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Collaborator.prototype,"InviteMessage",{get:function(){return this.get("InviteMessage")},set:function(value){this.set("InviteMessage",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Collaborator.prototype,"GrantId",{get:function(){return this.get("GrantId")},set:function(value){this.set("GrantId",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Collaborator.prototype,"Permissions",{get:function(){return this.get("Permissions")},set:function(value){this.set("Permissions",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Collaborator.prototype,"GravatarUrl",{get:function(){return this.get("GravatarUrl")},set:function(value){this.set("GravatarUrl",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Collaborator.prototype,"MarkedForDeletion",{get:function(){return this.get("MarkedForDeletion")},set:function(value){this.set("MarkedForDeletion",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Collaborator.prototype,"defaults",{get:function(){return{Name:null,Description:null,Status:null,Id:null,Permissions:"ROLE_READER",GravatarUrl:null}},enumerable:!0,configurable:!0}),Collaborator}(bs.Models.User);Models.Collaborator=Collaborator}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var IOwnable=function(){function IOwnable(){}return IOwnable}();Models.IOwnable=IOwnable}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Sample=function(_super){function Sample(){_super.apply(this,arguments)}return __extends(Sample,_super),Sample.prototype.initialize=function(){var _this=this;this.urlRoot=bs.BsApiHelper.getBaseApiUrl()+"samples/",this.Files=new bs.Collections.FileCollection(null,{url:function(){return _this.urlRoot+_this.Id+"/files?Limit=1000"}}),this.Properties=new bs.Collections.PropertyCollection(null,{url:function(){return _this.urlRoot+_this.Id+"/properties"}})},Object.defineProperty(Sample.prototype,"webUrl",{get:function(){return"/sample/"+this.Id+"/"+this.SampleId},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"iconHtml",{get:function(){return'<span class="icomoon icon-sample"></span>'},enumerable:!0,configurable:!0}),Sample.prototype.getWebLinkHtml=function(showIcon){return void 0===showIcon&&(showIcon=!0),this.IsDeleted?(showIcon?this.iconHtml+" ":"")+this.SampleId:'<a href="'+this.webUrl+'">'+(showIcon?this.iconHtml+" ":"")+this.SampleId+"</a>"},Object.defineProperty(Sample.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"Origin",{get:function(){return this.get("Origin")},set:function(value){this.set("Origin",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"IsDeleted",{get:function(){return this.get("IsDeleted")},set:function(value){this.set("IsDeleted",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"IsMerged",{get:function(){return this.get("IsMerged")},set:function(value){this.set("IsMerged",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"Run",{get:function(){return this.get("Run")},set:function(value){this.set("Run",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"HrefRun",{get:function(){return this.get("HrefRun")},set:function(value){this.set("HrefRun",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"IsRunAccessible",{get:function(){return this.get("IsRunAccessible")},set:function(value){this.set("IsRunAccessible",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"HrefGenome",{get:function(){return this.get("HrefGenome")},set:function(value){this.set("HrefGenome",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"SampleNumber",{get:function(){return this.get("SampleNumber")},set:function(value){this.set("SampleNumber",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"PreferredBuild",{get:function(){return this.get("PreferredBuild")},set:function(value){this.set("PreferredBuild",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"SampleId",{get:function(){return this.get("SampleId")},set:function(value){this.set("SampleId",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"ExperimentName",{get:function(){return this.get("ExperimentName")},set:function(value){this.set("ExperimentName",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"HrefFiles",{get:function(){return this.get("HrefFiles")},set:function(value){this.set("HrefFiles",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"Files",{get:function(){return this.get("FileCollection")},set:function(value){this.set("FileCollection",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"Properties",{get:function(){return this.get("Properties")},set:function(value){this.set("Properties")},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"IsPairedEnd",{get:function(){return this.get("IsPairedEnd")},set:function(value){this.set("IsPairedEnd",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"Read1",{get:function(){return this.get("Read1")},set:function(value){this.set("Read1",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"Read2",{get:function(){return this.get("Read2")},set:function(value){this.set("Read2",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"NumReadsRaw",{get:function(){return this.get("NumReadsRaw")},set:function(value){this.set("NumReadsRaw",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"NumReadsPF",{get:function(){return this.get("NumReadsPF")},set:function(value){this.set("NumReadsPF",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"TotalSize",{get:function(){return this.get("TotalSize")},set:function(value){this.set("TotalSize",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"projectId",{get:function(){return this.get("projectId")},set:function(val){this.set("projectId",val)},enumerable:!0,configurable:!0}),Object.defineProperty(Sample.prototype,"Analysis",{get:function(){return this.get("Analysis")},set:function(value){this.set("Analysis",value)},enumerable:!0,configurable:!0}),Sample.prototype.getPropertyResourcePath=function(){return"samples/"+this.Id},Object.defineProperty(Sample.prototype,"defaults",{get:function(){return{Name:"",Id:null}},enumerable:!0,configurable:!0}),Sample.prototype.parse=function(response,options){var parsedResponse;response.Response.AppSession.IdToken=response.Response.AppSession.Id;var analysis=new Models.Analysis(response.Response.AppSession),properties=new bs.Collections.PropertyCollection([]);return properties.set(properties.parse(response.Response.Properties)),parsedResponse={Id:response.Response.Id,Analysis:analysis,Properties:properties,HrefGenome:response.Response.HrefGenome,SampleNumber:response.Response.SampleNumber,ExperimentName:response.Response.ExperimentName,SampleId:response.Response.SampleId,HrefFiles:response.Response.HrefFiles,IsPairedEnd:response.Response.IsPairedEnd,Read1:response.Response.Read1,Read2:response.Response.Read2,NumReadsRaw:response.Response.NumReadsRaw,NumReadsPF:response.Response.NumReadsPF,DateCreated:response.Response.DateCreated,Origin:response.Response.Origin,IsMerged:response.Response.IsMerged,PreferredBuild:response.Response.PreferredBuild,TotalSize:response.Response.TotalSize}},Sample.prototype.save=function(attributes,options){var saveOptions=options;if(this.isNew()){if(!this.projectId)return $.error("Unable to save sample; parent project ID is required.");$.extend(saveOptions,{url:bs.BsApiHelper.getBaseApiUrl()+"/projects/"+this.projectId+"/samples"})}else $.extend(saveOptions,{url:bs.BsApiHelper.getBaseApiUrl()+"/samples/"+this.Id});return _super.prototype.save.call(this,attributes,saveOptions)},Sample}(Models.DatedResource);Models.Sample=Sample}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var ConsoleItem=function(_super){function ConsoleItem(){_super.apply(this,arguments)}return __extends(ConsoleItem,_super),Object.defineProperty(ConsoleItem.prototype,"message",{get:function(){return this.get("message")},set:function(value){this.set("message",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ConsoleItem.prototype,"type",{get:function(){return this.get("type")},set:function(value){this.set("type",value)},enumerable:!0,configurable:!0}),ConsoleItem}(Models.Model);Models.ConsoleItem=ConsoleItem}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var SpacebugModel=function(_super){function SpacebugModel(){_super.apply(this,arguments)}return __extends(SpacebugModel,_super),Object.defineProperty(SpacebugModel.prototype,"billingSpecConsoleItems",{get:function(){return this.get("billingSpecConsoleItems")},set:function(value){this.set("billingSpecConsoleItems",value)},enumerable:!0,configurable:!0}),Object.defineProperty(SpacebugModel.prototype,"launchSpecConsoleItems",{get:function(){return this.get("launchSpecConsoleItems")},set:function(value){this.set("launchSpecConsoleItems",value)},enumerable:!0,configurable:!0}),Object.defineProperty(SpacebugModel.prototype,"agentId",{get:function(){return this.get("agentId")},set:function(value){this.set("agentId",value)},enumerable:!0,configurable:!0}),Object.defineProperty(SpacebugModel.prototype,"devPortalUrl",{get:function(){return this.get("devPortalUrl")},set:function(value){this.set("devPortalUrl",value)},enumerable:!0,configurable:!0}),Object.defineProperty(SpacebugModel.prototype,"formSelector",{get:function(){return this.get("formSelector")},set:function(value){this.set("formSelector",value)},enumerable:!0,configurable:!0}),Object.defineProperty(SpacebugModel.prototype,"formLaunchMethodSelector",{get:function(){return this.get("formLaunchMethodSelector")},set:function(value){this.set("formLaunchMethodSelector",value)},enumerable:!0,configurable:!0}),Object.defineProperty(SpacebugModel.prototype,"missionControlUrl",{get:function(){return this.get("missionControlUrl")},set:function(value){this.set("missionControlUrl",value)},enumerable:!0,configurable:!0}),SpacebugModel}(Models.Model);Models.SpacebugModel=SpacebugModel}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var ProjectSampleItem=function(){function ProjectSampleItem(){}return ProjectSampleItem}();Collections.ProjectSampleItem=ProjectSampleItem;var SampleCollection=function(_super){function SampleCollection(){_super.apply(this,arguments)}return __extends(SampleCollection,_super),SampleCollection.prototype.initialize=function(){this.model=bs.Models.Sample},SampleCollection.prototype.parse=function(response,options){var sampleModels=[];this.totalCount=response.totalCount;for(var i=0;i<response.results.length;i++){var item=response.results[i],sample={Id:item.id,SampleId:item.sampleSheetSampleId,Name:item.name,PreferredBuild:item.preferredBuild,DateCreated:item.createdAt,IsPairedEnd:item.pairedEnd,Read1:item.read1,Read2:item.read2,IsMerged:item.isMerged,IsRunAccessible:item.hasAccessToRun,Run:item.isMerged?item.origin:null,Origin:item.origin,TotalSize:item.totalSize};sampleModels.push(sample)}return sampleModels},SampleCollection}(Collections.Collection);Collections.SampleCollection=SampleCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var ProjectAnalysisItem=function(){function ProjectAnalysisItem(){}return ProjectAnalysisItem}();Collections.ProjectAnalysisItem=ProjectAnalysisItem;var AnalysisCollection=function(_super){function AnalysisCollection(){_super.apply(this,arguments)}return __extends(AnalysisCollection,_super),AnalysisCollection.prototype.initialize=function(){this.model=bs.Models.Analysis},AnalysisCollection.prototype.parse=function(response,options){this.totalCount=response.totalCount;for(var analysisModels=[],i=0;i<response.results.length;i++){var item=response.results[i],analysis={Id:item.appSessionId,IdToken:item.idToken,DateCreated:item.createdAt,HrefIcon:item.applicationLogoUrl,Name:item.appSessionName,AppName:null!=item.applicationName?item.applicationName:item.workflow,IsMsrWorkflow:null!=item.workflow&&"Unknown"!=item.workflow,AppCompany:"App Company",StatusSummary:item.appSessionStatusSummary,Status:item.appSessionStatus,ModifiedOn:item.modifiedAt,TotalSize:item.totalSize};analysisModels.push(analysis)}return analysisModels},AnalysisCollection.prototype.fetch=function(options){var custom={data:{sortby:"createdat",sortdir:"desc"}};return $.extend(!0,custom,options),_super.prototype.fetch.call(this,custom)},AnalysisCollection}(Collections.Collection);Collections.AnalysisCollection=AnalysisCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var ProjectCollaboratorItem=function(){function ProjectCollaboratorItem(){}return ProjectCollaboratorItem}();Collections.ProjectCollaboratorItem=ProjectCollaboratorItem;var CollaboratorCollection=function(_super){function CollaboratorCollection(){_super.apply(this,arguments)}return __extends(CollaboratorCollection,_super),CollaboratorCollection.prototype.initialize=function(){this.model=bs.Models.Collaborator},CollaboratorCollection.prototype.parse=function(response,options){for(var collaboratorModels=[],i=0;i<response.results.length;i++){var item=response.results[i],user={GrantId:item.grantId,Name:item.userName,Email:item.email,GravatarUrl:"https://secure.gravatar.com/avatar/"+item.emailMD5+".jpg?s=30&d=https://basespace.illumina.com/public/images/DefaultCustomerGravatar.png&r=PG",Permissions:item.permission,EmailHash:item.emailMD5,InviteMessage:item.personalMessage,InviteId:item.inviteId};collaboratorModels.push(user)}return collaboratorModels},CollaboratorCollection}(Collections.Collection);Collections.CollaboratorCollection=CollaboratorCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var ConsoleItemCollection=function(_super){function ConsoleItemCollection(){_super.apply(this,arguments)}return __extends(ConsoleItemCollection,_super),ConsoleItemCollection.prototype.initialize=function(){this.model=bs.Models.ConsoleItem},ConsoleItemCollection.prototype.fetch=function(options){return _super.prototype.fetch.call(this,{type:"POST",data:$(this.formSelector).serialize()})},ConsoleItemCollection.prototype.parse=function(response){for(var modelList=[],i=0;i<response.items.length;i++){var item=response.items[i],model=item;modelList.push(model)}return modelList},ConsoleItemCollection}(Collections.Collection);Collections.ConsoleItemCollection=ConsoleItemCollection;var LaunchSpecConsoleItemCollection=function(_super){function LaunchSpecConsoleItemCollection(){_super.apply(this,arguments)}return __extends(LaunchSpecConsoleItemCollection,_super),LaunchSpecConsoleItemCollection.prototype.initialize=function(){_super.prototype.initialize.call(this),this.url=function(){return"/spacebug/launchspec"}},LaunchSpecConsoleItemCollection}(ConsoleItemCollection);Collections.LaunchSpecConsoleItemCollection=LaunchSpecConsoleItemCollection;var BillingSpecConsoleItemCollection=function(_super){function BillingSpecConsoleItemCollection(){_super.apply(this,arguments)}return __extends(BillingSpecConsoleItemCollection,_super),BillingSpecConsoleItemCollection.prototype.initialize=function(){_super.prototype.initialize.call(this),this.url=function(){return"/spacebug/billingspec"}},BillingSpecConsoleItemCollection}(ConsoleItemCollection);Collections.BillingSpecConsoleItemCollection=BillingSpecConsoleItemCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Report=function(_super){function Report(attributes){_super.call(this,attributes)}return __extends(Report,_super),Object.defineProperty(Report.prototype,"SummaryTemplateEnabled",{get:function(){return this.get("SummaryTemplateEnabled")},set:function(value){this.set("SummaryTemplateEnabled",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Report.prototype,"ResultTemplateEnabled",{get:function(){return this.get("ResultTemplateEnabled")},set:function(value){this.set("ResultTemplateEnabled",value)},enumerable:!0,configurable:!0}),Report.REPORT_TYPE_SUMMARY="summary",Report.REPORT_TYPE_RESULT="result",Report}(Models.Model);Models.Report=Report}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var AnalysisCompact=function(_super){function AnalysisCompact(){_super.apply(this,arguments)}return __extends(AnalysisCompact,_super),Object.defineProperty(AnalysisCompact.prototype,"Application",{get:function(){return this.get("Application")},set:function(value){this.set("Application",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AnalysisCompact.prototype,"DateCreated",{get:function(){return this.get("DateCreated")},set:function(value){this.set("DateCreated",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AnalysisCompact.prototype,"DateCompleted",{get:function(){return this.get("DateCompleted")},set:function(value){this.set("DateCompleted",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AnalysisCompact.prototype,"Href",{get:function(){return this.get("Href")},set:function(value){this.set("Href",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AnalysisCompact.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AnalysisCompact.prototype,"ModifiedOn",{get:function(){return this.get("ModifiedOn")},set:function(value){this.set("ModifiedOn",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AnalysisCompact.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AnalysisCompact.prototype,"Status",{get:function(){return this.get("Status")},set:function(value){this.set("Status",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AnalysisCompact.prototype,"StatusSummary",{get:function(){return this.get("StatusSummary")},set:function(value){this.set("StatusSummary",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AnalysisCompact.prototype,"UserCreatedBy",{get:function(){return this.get("UserCreatedBy")},set:function(value){this.set("UserCreatedBy",value)},enumerable:!0,configurable:!0}),AnalysisCompact}(bs.Models.Model);Models.AnalysisCompact=AnalysisCompact}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var PropertyBase=function(_super){function PropertyBase(){_super.apply(this,arguments),this.isResource=!1}return __extends(PropertyBase,_super),Object.defineProperty(PropertyBase.prototype,"Type",{get:function(){return this.get("Type");

},set:function(value){this.set("Type",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyBase.prototype,"Href",{get:function(){return this.get("Href")},set:function(value){this.url=function(){return bs.BASE_URI+"/"+value.replace("v1pre3","")},this.set("Href",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyBase.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyBase.prototype,"Description",{get:function(){return this.get("Description")},set:function(value){this.set("Description",value)},enumerable:!0,configurable:!0}),PropertyBase}(bs.Models.Model);Models.PropertyBase=PropertyBase;var PropertyArray=function(_super){function PropertyArray(){_super.apply(this,arguments)}return __extends(PropertyArray,_super),Object.defineProperty(PropertyArray.prototype,"Items",{get:function(){return this.get("Items")},set:function(value){this.set("Items",value)},enumerable:!0,configurable:!0}),PropertyArray}(PropertyBase);Models.PropertyArray=PropertyArray;var PropertyObject=function(_super){function PropertyObject(){_super.apply(this,arguments)}return __extends(PropertyObject,_super),Object.defineProperty(PropertyObject.prototype,"Content",{get:function(){return this.get("Content")},set:function(value){this.set("Content",value)},enumerable:!0,configurable:!0}),PropertyObject}(PropertyBase);Models.PropertyObject=PropertyObject;var PropertyResourceArray=function(_super){function PropertyResourceArray(){_super.apply(this,arguments),this.isResource=!0}return __extends(PropertyResourceArray,_super),Object.defineProperty(PropertyResourceArray.prototype,"Items",{get:function(){return this.get("Items")},set:function(value){this.set("Items",value)},enumerable:!0,configurable:!0}),PropertyResourceArray.prototype.getResourcePaths=function(){var paths=[];return this.Items.each(function(item){paths.push(item.getPropertyResourcePath())}),paths},PropertyResourceArray}(PropertyArray);Models.PropertyResourceArray=PropertyResourceArray;var PropertyResource=function(_super){function PropertyResource(){_super.apply(this,arguments),this.isResource=!0}return __extends(PropertyResource,_super),PropertyResource}(PropertyObject);Models.PropertyResource=PropertyResource;var PropertyMap=function(_super){function PropertyMap(){_super.apply(this,arguments)}return __extends(PropertyMap,_super),Object.defineProperty(PropertyMap.prototype,"Content",{get:function(){return this.get("Content")},set:function(value){this.set("Content",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyMap.prototype,"defaults",{get:function(){return{Type:"map"}},enumerable:!0,configurable:!0}),PropertyMap}(PropertyBase);Models.PropertyMap=PropertyMap;var PropertyMapArray=function(_super){function PropertyMapArray(){_super.apply(this,arguments)}return __extends(PropertyMapArray,_super),Object.defineProperty(PropertyMapArray.prototype,"Items",{get:function(){return this.get("Items")},set:function(value){this.set("Items",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyMapArray.prototype,"defaults",{get:function(){return{Type:"map[]"}},enumerable:!0,configurable:!0}),PropertyMapArray}(PropertyArray);Models.PropertyMapArray=PropertyMapArray;var PropertyStringArray=function(_super){function PropertyStringArray(){_super.apply(this,arguments)}return __extends(PropertyStringArray,_super),Object.defineProperty(PropertyStringArray.prototype,"Items",{get:function(){return this.get("Items")},set:function(value){this.set("Items",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyStringArray.prototype,"defaults",{get:function(){return{Type:"string[]"}},enumerable:!0,configurable:!0}),PropertyStringArray}(PropertyArray);Models.PropertyStringArray=PropertyStringArray;var PropertyString=function(_super){function PropertyString(){_super.apply(this,arguments)}return __extends(PropertyString,_super),Object.defineProperty(PropertyString.prototype,"Content",{get:function(){return this.get("Content")},set:function(value){this.set("Content",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyString.prototype,"defaults",{get:function(){return{Type:"string"}},enumerable:!0,configurable:!0}),PropertyString}(PropertyArray);Models.PropertyString=PropertyString;var PropertySample=function(_super){function PropertySample(){_super.apply(this,arguments)}return __extends(PropertySample,_super),Object.defineProperty(PropertySample.prototype,"Content",{get:function(){return this.get("Content")},set:function(value){this.set("Content",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertySample.prototype,"defaults",{get:function(){return{Type:"sample"}},enumerable:!0,configurable:!0}),PropertySample.prototype.getResourcePath=function(){return"samples/"+this.Content.Id},PropertySample}(PropertyResource);Models.PropertySample=PropertySample;var PropertySampleArray=function(_super){function PropertySampleArray(){_super.apply(this,arguments)}return __extends(PropertySampleArray,_super),Object.defineProperty(PropertySampleArray.prototype,"Items",{get:function(){return this.get("Items")},set:function(value){this.set("Items",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertySampleArray.prototype,"defaults",{get:function(){return{Type:"sample[]"}},enumerable:!0,configurable:!0}),PropertySampleArray}(PropertyResourceArray);Models.PropertySampleArray=PropertySampleArray;var PropertyAppResult=function(_super){function PropertyAppResult(){_super.apply(this,arguments)}return __extends(PropertyAppResult,_super),Object.defineProperty(PropertyAppResult.prototype,"Content",{get:function(){return this.get("Content")},set:function(value){this.set("Content",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyAppResult.prototype,"defaults",{get:function(){return{Type:"appresult"}},enumerable:!0,configurable:!0}),PropertyAppResult}(PropertyResource);Models.PropertyAppResult=PropertyAppResult;var PropertyAppResultArray=function(_super){function PropertyAppResultArray(){_super.apply(this,arguments)}return __extends(PropertyAppResultArray,_super),Object.defineProperty(PropertyAppResultArray.prototype,"Items",{get:function(){return this.get("Items")},set:function(value){this.set("Items",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyAppResultArray.prototype,"defaults",{get:function(){return{Type:"appresult[]"}},enumerable:!0,configurable:!0}),PropertyAppResultArray}(PropertyResourceArray);Models.PropertyAppResultArray=PropertyAppResultArray;var PropertyProject=function(_super){function PropertyProject(){_super.apply(this,arguments)}return __extends(PropertyProject,_super),Object.defineProperty(PropertyProject.prototype,"Content",{get:function(){return this.get("Content")},set:function(value){this.set("Content",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyProject.prototype,"defaults",{get:function(){return{Type:"project"}},enumerable:!0,configurable:!0}),PropertyProject}(PropertyResource);Models.PropertyProject=PropertyProject;var PropertyProjectArray=function(_super){function PropertyProjectArray(){_super.apply(this,arguments)}return __extends(PropertyProjectArray,_super),Object.defineProperty(PropertyProjectArray.prototype,"Items",{get:function(){return this.get("Items")},set:function(value){this.set("Items",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyProjectArray.prototype,"defaults",{get:function(){return{Type:"project[]"}},enumerable:!0,configurable:!0}),PropertyProjectArray}(PropertyResourceArray);Models.PropertyProjectArray=PropertyProjectArray;var PropertyAppSession=function(_super){function PropertyAppSession(){_super.apply(this,arguments)}return __extends(PropertyAppSession,_super),Object.defineProperty(PropertyAppSession.prototype,"Content",{get:function(){return this.get("Content")},set:function(value){this.set("Content",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyAppSession.prototype,"defaults",{get:function(){return{Type:"appsession"}},enumerable:!0,configurable:!0}),PropertyAppSession}(PropertyResource);Models.PropertyAppSession=PropertyAppSession;var PropertyAppSessionArray=function(_super){function PropertyAppSessionArray(){_super.apply(this,arguments)}return __extends(PropertyAppSessionArray,_super),Object.defineProperty(PropertyAppSessionArray.prototype,"Items",{get:function(){return this.get("Items")},set:function(value){this.set("Items",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyAppSessionArray.prototype,"defaults",{get:function(){return{Type:"appsession[]"}},enumerable:!0,configurable:!0}),PropertyAppSessionArray}(PropertyResourceArray);Models.PropertyAppSessionArray=PropertyAppSessionArray;var PropertyRun=function(_super){function PropertyRun(){_super.apply(this,arguments)}return __extends(PropertyRun,_super),Object.defineProperty(PropertyRun.prototype,"Content",{get:function(){return this.get("Content")},set:function(value){this.set("Content",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyRun.prototype,"defaults",{get:function(){return{Type:"run"}},enumerable:!0,configurable:!0}),PropertyRun}(PropertyObject);Models.PropertyRun=PropertyRun;var PropertyRunArray=function(_super){function PropertyRunArray(){_super.apply(this,arguments)}return __extends(PropertyRunArray,_super),Object.defineProperty(PropertyRunArray.prototype,"Items",{get:function(){return this.get("Items")},set:function(value){this.set("Items")},enumerable:!0,configurable:!0}),Object.defineProperty(PropertyRunArray.prototype,"defaults",{get:function(){return{Type:"run[]"}},enumerable:!0,configurable:!0}),PropertyRunArray}(PropertyArray);Models.PropertyRunArray=PropertyRunArray}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Project=function(_super){function Project(){_super.apply(this,arguments)}return __extends(Project,_super),Project.prototype.initialize=function(){this.urlRoot=bs.BsApiHelper.getBaseApiUrl()+"projects/",_super.prototype.initialize.call(this)},Object.defineProperty(Project.prototype,"webUrl",{get:function(){return"/projects/"+this.Id},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"iconHtml",{get:function(){return'<span class="icomoon icon-project"></span>'},enumerable:!0,configurable:!0}),Project.prototype.getWebLinkHtml=function(showIcon){return void 0===showIcon&&(showIcon=!0),this.IsDeleted?(showIcon?this.iconHtml+" ":"")+this.Name:'<a href="'+this.webUrl+'">'+(showIcon?this.iconHtml+" ":"")+this.Name+"</a>"},Object.defineProperty(Project.prototype,"IsDeleted",{get:function(){return this.get("IsDeleted")},set:function(value){this.set("IsDeleted",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"Analyses",{get:function(){return this.get("Analyses")},set:function(value){this.set("Analyses",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"Samples",{get:function(){return this.get("Samples")},set:function(value){this.set("Samples",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"Files",{get:function(){return this.get("Files")},set:function(value){this.set("Files",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"Collaborators",{get:function(){return this.get("Collaborators")},set:function(value){this.set("Collaborators",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"UserOwnedBy",{get:function(){return this.get("UserOwnedBy")},set:function(value){this.set("UserOwnedBy",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"Description",{get:function(){return this.get("Description")},set:function(value){this.set("Description",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"TransferPending",{get:function(){return this.get("TransferPending")},set:function(value){this.set("TransferPending",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"ShareByLinkUrl",{get:function(){return this.get("ShareByLinkUrl")},set:function(value){this.set("ShareByLinkUrl",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"combineSamplesUrl",{get:function(){return"/api/project/"+this.Id+"/sample/merge"},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"copySamplesUrl",{get:function(){return"/api/project/"+this.Id+"/sample/copy"},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"shareByLinkEndpointUrl",{get:function(){return"/api/share_by_link/project/"+this.Id},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"saveCollaboratorsEndpointUrl",{get:function(){return"/api/collaborator/project/"+this.Id},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"transferOwnershipEndPointUrl",{get:function(){return bs.BsApiHelper.getBaseApiUrl()+"project/"+this.Id+"/invites"},enumerable:!0,configurable:!0}),Object.defineProperty(Project.prototype,"defaults",{get:function(){var _this=this;return{Id:null,DateCreated:null,Name:null,UserOwnedBy:null,ShareByLinkUrl:null,Samples:new bs.Collections.SampleCollection(null,{url:function(){return"/api/project/"+_this.Id+"/sample?limit=1000&statuses=complete&sortby=createdat&sortdir=desc"}}),Analyses:new bs.Collections.AnalysisCollection(null,{url:function(){return"/api/project/"+_this.Id+"/analysis?limit=1000&sortby=createdat&sortdir=desc"}}),Collaborators:new bs.Collections.CollaboratorCollection(null,{url:function(){return"/api/collaborator/project/"+_this.Id+"?SortBy=dateJoined&Offset=0&Limit=20&SortDir=desc"}})}},enumerable:!0,configurable:!0}),Project.prototype.combineSamples=function(sampleIdsToCombine,newSampleName,action,onSuccess,onError){var params={samplename:newSampleName,samples:sampleIdsToCombine,action:action};$.ajax({url:this.combineSamplesUrl,contentType:"application/json",type:"put",data:JSON.stringify(params)}).then(onSuccess,onError)},Project.prototype.copySamplesTo=function(destinationProjectId,sampleIds,onSuccess,onError){var params={action:"copy",destinationProjectId:destinationProjectId,samples:sampleIds};$.ajax({url:this.copySamplesUrl,contentType:"application/json",type:"put",data:JSON.stringify(params)}).then(onSuccess,onError)},Project.prototype.getSharingLinkUrl=function(onSuccess,onError){var _this=this;$.ajax({url:this.shareByLinkEndpointUrl,contentType:"application/json",type:"get"}).then(function(response){_this.ShareByLinkUrl=response.ShareUrl,onSuccess&&onSuccess.call(_this,response)},onError)},Project.prototype.saveCollaborators=function(onSuccess,onError){var params=this.getCollaboratorApiParams();$.ajax({url:this.saveCollaboratorsEndpointUrl,contentType:"application/json",type:"post",data:JSON.stringify(params)}).then(onSuccess,onError)},Project.prototype.transferOwnership=function(newOwnerEmail,description,onSuccess,onError){var _this=this,params={Description:description,Email:newOwnerEmail,Id:this.Id,Permission:"OWN"};$.ajax({url:this.transferOwnershipEndPointUrl,contentType:"application/json",type:"post",data:JSON.stringify(params),xhrFields:{withCredentials:!0}}).done(function(response){_this.fetch(bs.XHR_OPTIONS)})},Project.prototype.getCollaboratorApiParams=function(){var params=[];return this.Collaborators.each(function(model){var collaborator=model,paramItem={email:collaborator.Email,emailMD5:collaborator.EmailHash,grantId:collaborator.GrantId,inviteId:collaborator.InviteId,isNew:collaborator.isNew(),markedForDeletion:collaborator.MarkedForDeletion,permission:collaborator.Permissions,personalMessage:collaborator.InviteMessage,userName:collaborator.Name};params.push(paramItem)}),params},Project.prototype.createSharingLinkUrl=function(onSuccess,onError){var _this=this,params={resource:bs.Api.PROJECT,resourceId:this.Id};$.ajax({url:this.shareByLinkEndpointUrl,contentType:"application/json",type:"post",data:JSON.stringify(params)}).then(function(response){_this.ShareByLinkUrl=response.ShareUrl,onSuccess&&onSuccess.call(_this,response)},onError)},Project.prototype.deleteSharingLinkUrl=function(onSuccess,onError){var _this=this;$.ajax({url:this.shareByLinkEndpointUrl,contentType:"application/json",type:"delete"}).then(function(response){_this.ShareByLinkUrl=null,onSuccess.apply(_this,response)},onError)},Project.prototype.validate=function(attributes,options){var errors=[];return!this.isNew()&&"Id"in attributes&&!attributes.Id&&errors.push({Message:Models.Validation.PROJECT_ID_REQUIRED,Property:"Id",Type:Models.Validation.ERROR}),!attributes.Name||attributes.Name.trim().length<1?errors.push({Message:Models.Validation.PROJECT_NAME_REQUIRED,Property:"Name",Type:Models.Validation.ERROR}):attributes.Name.trim().length>Models.Validation.PROJECT_NAME_MAX_LENGTH&&errors.push({Message:Models.Validation.PROJECT_NAME_TOO_LONG,Property:"Name",Type:Models.Validation.ERROR}),null!=attributes.Description&&attributes.Description.trim().length>Models.Validation.PROJECT_DESCRIPTION_MAX_LENGTH&&errors.push({Message:Models.Validation.PROJECT_DESCRIPTION_TOO_LONG,Property:"Description",Type:Models.Validation.ERROR}),errors.length>0?errors:void 0},Project.prototype.parse=function(response,options){var apiResponse=response.Response;return apiResponse.UserOwnedBy=new Models.User(apiResponse.UserOwnedBy),apiResponse},Project}(Models.DatedResource);Models.Project=Project}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var ReportCollection=function(_super){function ReportCollection(){_super.apply(this,arguments)}return __extends(ReportCollection,_super),ReportCollection.prototype.initialize=function(){this.model=bs.Models.Report},ReportCollection.prototype.parse=function(response,options){for(var modelList=[],i=0;i<response.Response.length;i++){var item=response.Response[i],model=item;modelList.push(model)}return modelList},ReportCollection}(Collections.Collection);Collections.ReportCollection=ReportCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var AppResultCollection=function(_super){function AppResultCollection(){_super.apply(this,arguments)}return __extends(AppResultCollection,_super),AppResultCollection.prototype.initialize=function(){this.model=bs.Models.AppResult},AppResultCollection}(Collections.Collection);Collections.AppResultCollection=AppResultCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var PropertyCollection=function(_super){function PropertyCollection(){_super.apply(this,arguments)}return __extends(PropertyCollection,_super),PropertyCollection.prototype.initialize=function(){this.model=function(attributes,options){switch(attributes.Type.toLowerCase()){case"sample":return new bs.Models.PropertySample($.extend(attributes,{Content:new bs.Models.Sample(attributes.Content)}));case"sample[]":return new bs.Models.PropertySampleArray($.extend(attributes,{Items:new bs.Collections.SampleCollection(attributes.Items)}));case"appresult":return new bs.Models.PropertyAppResult($.extend(attributes,{Content:new bs.Models.AppResult(attributes.Content)}));case"appresult[]":return new bs.Models.PropertyAppResultArray($.extend(attributes,{Items:new bs.Collections.AppResultCollection(attributes.Items)}));case"project":return new bs.Models.PropertyProject($.extend(attributes,{Content:new bs.Models.Project(attributes.Content)}));case"project[]":return new bs.Models.PropertyProjectArray($.extend(attributes,{Items:new bs.Collections.ProjectCollection(attributes.Items)}));case"appsession":return new bs.Models.PropertyAppSession($.extend(attributes,{Content:new bs.Models.Analysis(attributes.Content)}));case"appsession[]":return new bs.Models.PropertyAppSessionArray($.extend(attributes,{Items:new bs.Collections.AnalysisCollection(attributes.Items)}));case"run":return new bs.Models.PropertyRun($.extend(attributes,{Content:new bs.Models.Run(attributes.Content)}));case"run[]":return new bs.Models.PropertyRunArray($.extend(attributes,{Items:new bs.Collections.RunCollection(attributes.Items)}));case"string":return new bs.Models.PropertyString(attributes);case"string[]":return new bs.Models.PropertyStringArray(attributes);case"map":return new bs.Models.PropertyMap(attributes);case"map[]":return new bs.Models.PropertyMapArray(attributes);default:return new bs.Models.Model(attributes)}}},PropertyCollection.prototype.filterNameByRegex=function(regexToMatch,regexToExclude){void 0===regexToExclude&&(regexToExclude=[]);var matches=_.filter(this.models,function(model){for(var i=0;i<regexToMatch.length;i++)if(model.Name.search(regexToMatch[i])>-1){for(var j=0;j<regexToExclude.length;j++)if(model.Name.search(regexToExclude[j])>-1)return!1;return!0}return!1});return matches},PropertyCollection.prototype.getInputResources=function(){return this.filterNameByRegex(PropertyCollection.REGEX_INPUT_RESOURCES)},PropertyCollection.prototype.getInputs=function(regexToExclude){return void 0===regexToExclude&&(regexToExclude=[]),this.filterNameByRegex(PropertyCollection.REGEX_INPUTS,regexToExclude)},PropertyCollection.prototype.parse=function(response,options){for(var modelList=[],i=0;i<response.Items.length;i++){var item=response.Items[i],model=item;modelList.push(model)}return modelList},PropertyCollection.REGEX_INPUT=/^input\..+/i,PropertyCollection.REGEX_INPUT_SAMPLES=/^input\.sample+/i,PropertyCollection.REGEX_INPUT_RESOURCES=[PropertyCollection.REGEX_INPUT_SAMPLES,/^input\.appresult+/i,/^input\.project+/i,/^input\.appsession+/i],PropertyCollection.REGEX_INPUT_APP_SESSION_NAME=[/^input\.app-session-name+/i],PropertyCollection.REGEX_INPUTS=[/^input\..+/i],PropertyCollection.REGEX_ATTRIBUTE=/^input\..+\.attributes$/i,PropertyCollection}(Collections.Collection);Collections.PropertyCollection=PropertyCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var AnalysisCompactCollection=function(_super){function AnalysisCompactCollection(){_super.apply(this,arguments)}return __extends(AnalysisCompactCollection,_super),AnalysisCompactCollection.prototype.initialize=function(){this.model=bs.Models.AnalysisCompact},AnalysisCompactCollection.prototype.parse=function(response,options){for(var modelList=[],i=0;i<response.length;i++){var item=response[i],model=item;modelList.push(model)}return modelList},AnalysisCompactCollection}(Collections.Collection);Collections.AnalysisCompactCollection=AnalysisCompactCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Application=function(_super){function Application(attributes){_super.call(this,attributes)}return __extends(Application,_super),Application.prototype.initialize=function(){var _this=this;this.urlRoot=bs.BsApiHelper.getBaseApiUrl()+"applications/",this.Products=new bs.Collections.ProductCollection(null,{url:function(){return"/api/application/"+_this.Id+"/products"}}),this.ActiveSubscriptions=new bs.Collections.PurchasedProductCollection(null,{url:function(){return bs.STORE_BASE_API_URI+"/users/current/products?applicationid="+_this.Id+"&persistencestatus=active"}})},Object.defineProperty(Application.prototype,"webUrl",{get:function(){return"/apps/"+this.Id+"/"+this.Name},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"iconHtml",{get:function(){return'<img src="'+this.HrefLogo+'" />'},enumerable:!0,configurable:!0}),Application.prototype.getWebLinkHtml=function(showIcon){return void 0===showIcon&&(showIcon=!0),this.IsDeleted?(showIcon?this.iconHtml:"")+this.Name:'<a href="'+this.webUrl+'">'+(showIcon?this.iconHtml:"")+this.Name+"</a>"},Object.defineProperty(Application.prototype,"IsDeleted",{get:function(){return this.get("IsDeleted")},set:function(value){this.set("IsDeleted",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"LongDescription",{get:function(){return this.get("LongDescription")},set:function(value){this.set("LongDescription",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"UserOwnedBy",{get:function(){return this.get("UserOwnedBy")},set:function(value){this.set("UserOwnedBy",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"HrefSettings",{get:function(){return this.get("HrefSettings")},set:function(value){this.set("HrefSettings",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"Files",{get:function(){return this.get("Files")},set:function(value){this.set("Files",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"Products",{get:function(){return this.get("Products")},set:function(value){this.set("Products",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"ActiveSubscriptions",{get:function(){return this.get("ActiveSubscriptions")},set:function(value){this.set("ActiveSubscriptions",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"Href",{get:function(){return this.get("Href")},set:function(value){this.set("Href",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"HasActiveForm",{get:function(){return this.get("HasActiveForm")},set:function(value){this.set("HasActiveForm",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"UsesPreauth",{get:function(){return this.get("UsesPreauth")},set:function(value){this.set("UsesPreauth",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"ShortDescription",{get:function(){return this.get("ShortDescription")},set:function(value){this.set("ShortDescription",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"ClientId",{get:function(){return this.get("ClientId")},set:function(value){this.set("ClientId",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"Category",{get:function(){return this.get("Category")},set:function(value){this.set("Category",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"TriggerUri",{get:function(){return this.get("TriggerUri")},set:function(value){this.set("TriggerUri",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"ScreenshotUri",{get:function(){return this.get("ScreenshotUri")},set:function(value){this.set("ScreenshotUri",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"AppResultId",{get:function(){return this.get("AppResultId")},set:function(value){this.set("AppResultId",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"ResourceProjectId",{get:function(){return this.get("ResourceProjectId")},set:function(value){this.set("ResourceProjectId",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"Scope",{get:function(){return this.get("Scope")},set:function(value){this.set("Scope",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"Agreements",{get:function(){return this.get("Agreements")},set:function(value){this.set("Agreements",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"CompanyName",{get:function(){return this.get("CompanyName")},set:function(value){this.set("CompanyName",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"HrefLogo",{get:function(){return this.get("HrefLogo")},set:function(value){this.set("HrefLogo",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"HomepageUri",{get:function(){return this.get("HomepageUri")},set:function(value){this.set("HomepageUri",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"PublishStatus",{get:function(){return this.get("PublishStatus")},set:function(value){this.set("PublishStatus",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"IsBillingActivated",{get:function(){return this.get("IsBillingActivated")},set:function(value){this.set("IsBillingActivated",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"VersionNumber",{get:function(){return this.get("VersionNumber")},set:function(value){this.set("VersionNumber",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Application.prototype,"Features",{get:function(){return this.get("Features")},set:function(value){this.set("Features",value)},enumerable:!0,configurable:!0}),Application}(Models.DatedResource);Models.Application=Application}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Log=function(_super){function Log(){_super.apply(this,arguments)}return __extends(Log,_super),Log.prototype.initialize=function(){var _this=this;this.url=function(){return bs.BsApiHelper.getBaseApiUrl()+"appsessions/"+_this.Id+"/properties/logs.tail"}},Object.defineProperty(Log.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Log.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Log.prototype,"Type",{get:function(){return this.get("Type")},set:function(value){this.set("Type",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Log.prototype,"Content",{get:function(){return this.get("Content")},set:function(value){this.set("Content",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Log.prototype,"LastUpdated",{get:function(){return this.get("LastUpdated")},set:function(value){this.set("LastUpdated",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Log.prototype,"defaults",{get:function(){return{Id:null,Name:null,Content:"",LastUpdated:null}},enumerable:!0,configurable:!0}),Log}(bs.Models.Model);Models.Log=Log}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var AppResult=function(_super){function AppResult(){_super.apply(this,arguments)}return __extends(AppResult,_super),AppResult.prototype.initialize=function(){var _this=this;this.urlRoot=bs.BsApiHelper.getBaseApiUrl()+"appresults/",this.Files=new bs.Collections.FileCollection(null,{url:function(){return bs.BsApiHelper.getBaseApiUrl()+"appresults/"+_this.Id+"/files?Limit=1000&IncludeSubdirectories=true&Directory=/"}}),this.Properties=new bs.Collections.PropertyCollection(null,{url:function(){return bs.BsApiHelper.getBaseApiUrl()+"appresults/"+_this.Id+"/properties"}})},Object.defineProperty(AppResult.prototype,"webUrl",{get:function(){return"/appresults/"+this.Id},enumerable:!0,configurable:!0}),Object.defineProperty(AppResult.prototype,"iconHtml",{get:function(){return""},enumerable:!0,configurable:!0}),AppResult.prototype.getWebLinkHtml=function(showIcon){return void 0===showIcon&&(showIcon=!0),this.IsDeleted?(showIcon?this.iconHtml:"")+this.Name:'<a href="'+this.webUrl+'">'+(showIcon?this.iconHtml:"")+this.Name+"</a>";

},Object.defineProperty(AppResult.prototype,"IsDeleted",{get:function(){return this.get("IsDeleted")},set:function(value){this.set("IsDeleted",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AppResult.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AppResult.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AppResult.prototype,"Description",{get:function(){return this.get("Description")},set:function(value){this.set("Description",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AppResult.prototype,"Status",{get:function(){return this.get("Status")},set:function(value){this.set("Status",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AppResult.prototype,"TotalSize",{get:function(){return this.get("TotalSize")},set:function(value){this.set("TotalSize",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AppResult.prototype,"Files",{get:function(){return this.get("FileCollection")},set:function(value){this.set("FileCollection",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AppResult.prototype,"Properties",{get:function(){return this.get("Properties")},set:function(value){this.set("Properties")},enumerable:!0,configurable:!0}),Object.defineProperty(AppResult.prototype,"Analysis",{get:function(){return this.get("Analysis")},set:function(value){this.set("Analysis",value)},enumerable:!0,configurable:!0}),Object.defineProperty(AppResult.prototype,"projectId",{get:function(){return this.get("projectId")},set:function(val){this.set("projectId",val)},enumerable:!0,configurable:!0}),Object.defineProperty(AppResult.prototype,"defaults",{get:function(){return{Name:null,Description:null,Status:null,Id:null,projectId:null}},enumerable:!0,configurable:!0}),AppResult.prototype.save=function(attributes,options){var saveOptions=options;if(this.isNew()){if(!this.projectId)return $.error("Unable to save appresult; parent project ID is required.");$.extend(saveOptions,{url:bs.BsApiHelper.getBaseApiUrl()+"/projects/"+this.projectId+"/appresults"})}else $.extend(saveOptions,{url:bs.BsApiHelper.getBaseApiUrl()+"/appresults/"+this.Id});return _super.prototype.save.call(this,attributes,saveOptions)},AppResult.prototype.fetch=function(options){return _super.prototype.fetch.call(this,options)},AppResult.prototype.parse=function(response,options){var parsedResponse;response.Response.AppSession.IdToken=response.Response.AppSession.Id;var analysis=new Models.Analysis(response.Response.AppSession),properties=new bs.Collections.PropertyCollection([]);return properties.set(properties.parse(response.Response.Properties)),parsedResponse={Id:response.Response.Id,Analysis:analysis,Description:response.Response.Description,Name:response.Response.Name,Status:response.Response.Status,Properties:properties}},AppResult}(Models.DatedResource);Models.AppResult=AppResult}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){!function(FileValidationType){FileValidationType[FileValidationType.Undefined=0]="Undefined",FileValidationType[FileValidationType.Fastq=1]="Fastq",FileValidationType[FileValidationType.Manifest_Amplicon=2]="Manifest_Amplicon",FileValidationType[FileValidationType.Manifest_Trex=3]="Manifest_Trex",FileValidationType[FileValidationType.Manifest_Nextera=4]="Manifest_Nextera",FileValidationType[FileValidationType.Vcf=5]="Vcf",FileValidationType[FileValidationType.Vcfgz=6]="Vcfgz"}(Models.FileValidationType||(Models.FileValidationType={}));Models.FileValidationType}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Run=function(_super){function Run(){_super.apply(this,arguments)}return __extends(Run,_super),Run.prototype.initialize=function(){var _this=this;this.urlRoot=bs.BsApiHelper.getBaseApiUrl()+"runs/",this.Samples=new bs.Collections.SampleCollection(null,{url:function(){return bs.BsApiHelper.getBaseApiUrl()+"runs/"+_this.Id+"/samples"}}),this.Files=new bs.Collections.FileCollection(null,{url:function(){return bs.BsApiHelper.getBaseApiUrl()+"runs/"+_this.Id+"/files?Limit=1000&IncludeSubdirectories=true&Directory=/"}}),this.Properties=new bs.Collections.PropertyCollection(null,{url:function(){return bs.BsApiHelper.getBaseApiUrl()+"runs/"+_this.Id+"/properties"}})},Object.defineProperty(Run.prototype,"webUrl",{get:function(){return"/run/"+this.Id},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"iconHtml",{get:function(){return'<span class="icomoon icon-HiSeq"></span>'},enumerable:!0,configurable:!0}),Run.prototype.getWebLinkHtml=function(showIcon){return void 0===showIcon&&(showIcon=!0),this.IsDeleted?(showIcon?this.iconHtml+" ":"")+this.Name:'<a href="'+this.webUrl+'">'+(showIcon?this.iconHtml+" ":"")+this.Name+"</a>"},Object.defineProperty(Run.prototype,"IsDeleted",{get:function(){return this.get("IsDeleted")},set:function(value){this.set("IsDeleted",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"ExperimentName",{get:function(){return this.get("ExperimentName")},set:function(value){this.set("ExperimentName",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"Status",{get:function(){return this.get("Status")},set:function(value){this.set("Status",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"ReagentBarcode",{get:function(){return this.get("ReagentBarcode")},set:function(value){this.set("ReagentBarcode",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"FlowcellBarcode",{get:function(){return this.get("FlowcellBarcode")},set:function(value){this.set("FlowcellBarcode",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"DateUploadStarted",{get:function(){return this.get("DateUploadStarted")},set:function(value){this.set("DateUploadStarted",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"Number",{get:function(){return this.get("Number")},set:function(value){this.set("Number",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"DateUploadCompleted",{get:function(){return this.get("DateUploadCompleted")},set:function(value){this.set("DateUploadCompleted",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"Samples",{get:function(){return this.get("Samples")},set:function(value){this.set("Samples",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"Files",{get:function(){return this.get("Files")},set:function(value){this.set("Files",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"Properties",{get:function(){return this.get("Properties")},set:function(value){this.set("Properties")},enumerable:!0,configurable:!0}),Object.defineProperty(Run.prototype,"defaults",{get:function(){return{Name:null,ExperimentName:null,Status:null,ReagentBarcode:null,FlowcellBarcode:null,DateUploadStarted:null,DateUploadCompleted:null,Number:null,Id:null}},enumerable:!0,configurable:!0}),Run}(Models.DatedResource);Models.Run=Run}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var ProjectCollection=function(_super){function ProjectCollection(){_super.apply(this,arguments)}return __extends(ProjectCollection,_super),ProjectCollection.prototype.initialize=function(){this.model=bs.Models.Project,this.url=bs.BsApiHelper.getBaseApiUrl()+"users/current/projects/"},ProjectCollection}(Collections.Collection);Collections.ProjectCollection=ProjectCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var RunCollection=function(_super){function RunCollection(){_super.apply(this,arguments)}return __extends(RunCollection,_super),RunCollection.prototype.initialize=function(){this.model=bs.Models.Project,this.url=bs.BsApiHelper.getBaseApiUrl()+"users/current/runs/"},RunCollection}(Collections.Collection);Collections.RunCollection=RunCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var Product=function(_super){function Product(input){_super.call(this,input)}return __extends(Product,_super),Product.prototype.initialize=function(){_super.prototype.initialize.call(this)},Object.defineProperty(Product.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Product.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Product.prototype,"Description",{get:function(){return this.get("Description")},set:function(value){this.set("Description",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Product.prototype,"Price",{get:function(){return this.get("Price")},set:function(value){this.set("Price",value)},enumerable:!0,configurable:!0}),Object.defineProperty(Product.prototype,"PriceRounded",{get:function(){return this.Price.toFixed(2)},enumerable:!0,configurable:!0}),Product}(Models.Model);Models.Product=Product}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var PurchasedProduct=function(_super){function PurchasedProduct(input){_super.call(this,input)}return __extends(PurchasedProduct,_super),Object.defineProperty(PurchasedProduct.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PurchasedProduct.prototype,"PurchaseId",{get:function(){return this.get("PurchaseId")},set:function(value){this.set("PurchaseId",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PurchasedProduct.prototype,"DatePurchased",{get:function(){return this.get("DatePurchased")},set:function(value){this.set("DatePurchased",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PurchasedProduct.prototype,"Name",{get:function(){return this.get("Name")},set:function(value){this.set("Name",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PurchasedProduct.prototype,"Quantity",{get:function(){return this.get("Quantity")},set:function(value){this.set("Quantity",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PurchasedProduct.prototype,"DateExpiration",{get:function(){return this.get("DateExpiration")},set:function(value){this.set("DateExpiration",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PurchasedProduct.prototype,"PersistenceStatus",{get:function(){return this.get("PersistenceStatus")},set:function(value){this.set("PersistenceStatus",value)},enumerable:!0,configurable:!0}),Object.defineProperty(PurchasedProduct.prototype,"Price",{get:function(){return this.get("Price")},set:function(value){this.set("Price",value)},enumerable:!0,configurable:!0}),PurchasedProduct.prototype.getDaysRemaining=function(){var now=moment(new Date).utc().format(),unitOfTime="day",message=bs.Util.getDuration(now,this.DateExpiration,unitOfTime);return message&&0!=message.indexOf("0 "+unitOfTime)||(message="Less than a "+unitOfTime),message},PurchasedProduct}(Models.Resource);Models.PurchasedProduct=PurchasedProduct}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var ProductCollection=function(_super){function ProductCollection(){_super.apply(this,arguments)}return __extends(ProductCollection,_super),ProductCollection.prototype.initialize=function(){this.model=bs.Models.Product},ProductCollection.prototype.parse=function(response,options){for(var modelList=[],i=0;i<response.Response.Products.length;i++){var item=response.Response.Products[i],model=item;modelList.push(model)}return modelList},ProductCollection}(Collections.Collection);Collections.ProductCollection=ProductCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var PurchasedProductCollection=function(_super){function PurchasedProductCollection(){_super.apply(this,arguments)}return __extends(PurchasedProductCollection,_super),PurchasedProductCollection.prototype.initialize=function(){this.model=bs.Models.PurchasedProduct},PurchasedProductCollection.prototype.parse=function(response,options){for(var modelList=[],i=0;i<response.Response.Items.length;i++){var item=response.Response.Items[i],model=item;modelList.push(model)}return modelList},PurchasedProductCollection}(Collections.Collection);Collections.PurchasedProductCollection=PurchasedProductCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var ShoppingCartItem=function(_super){function ShoppingCartItem(input){_super.call(this,input)}return __extends(ShoppingCartItem,_super),ShoppingCartItem.prototype.initialize=function(){_super.prototype.initialize.call(this)},Object.defineProperty(ShoppingCartItem.prototype,"Id",{get:function(){return this.get("Id")},set:function(value){this.set("Id",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartItem.prototype,"Product",{get:function(){return this.get("Product")},set:function(value){this.set("Product",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartItem.prototype,"Quantity",{get:function(){return this.get("Quantity")},set:function(value){this.set("Quantity",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartItem.prototype,"QuantityRounded",{get:function(){return this.Quantity.toFixed(this.Quantity<.009?5:2)},enumerable:!0,configurable:!0}),ShoppingCartItem.prototype.getSubtotal=function(){return this.Product.Price*this.Quantity},ShoppingCartItem.prototype.getSubtotalRounded=function(){return this.getSubtotal().toFixed(2)},ShoppingCartItem}(Models.Model);Models.ShoppingCartItem=ShoppingCartItem}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Views;!function(Views){var View=function(_super){function View(input){this.hasRendered=!1,this.appendElToBodyIfNeeded=!1,this.loadingOverlayTemplate=bs.Templates.loadingMessage,this.subviews=[];for(var key in input)key&&(this[key]=input[key]);_super.call(this,input)}return __extends(View,_super),View.prototype.setEl=function(input){return this.el=input,this.$el=$(this.el),this.delegateEvents(this.events),this},View.prototype.addSubView=function(view){var _this=this;return view.className?void(this.subviews.indexOf(view)<0&&(this.subviews.push(view),view.on(bs.Events.REQUEST_ROUTE_NAVIGATE,function(href,append){void 0===append&&(append=!1),_this.trigger(bs.Events.REQUEST_ROUTE_NAVIGATE,href,append)}))):$.error("The view you're trying to add as a sub-view doesn't have a class name. A view must have a className defined in order to be used as a subview.")},View.prototype.removeSubView=function(view){this.subviews.splice(this.subviews.indexOf(view),1),view.off(bs.Events.REQUEST_ROUTE_NAVIGATE)},View.prototype.initialize=function(){this.model?this.bindModelEvents():this.collection&&this.bindCollectionEvents()},View.prototype.hide=function(){return this.initViewElement(),this.$el.hide(),this},View.prototype.show=function(){return this.initViewElement(),this.$el.show(),this},View.prototype.setModel=function(model){var differentFromExisting=model!=this.model;if(this.stopListening(this.model),this.model=model,this.bindModelEvents(),differentFromExisting){this.model.trigger(bs.Events.NEW_DATA_SOURCE),this.model.trigger(bs.Events.BACKBONE_CHANGE);for(var i=0;i<this.model.attributes;i++){var attr=this.model.attributes[i];attr instanceof bs.Collections.Collection&&attr.trigger(bs.Events.NEW_DATA_SOURCE)}}},View.prototype.setCollection=function(collection){var differentFromExisting=collection!=this.collection;this.stopListening(this.collection),this.collection=collection,this.bindCollectionEvents(),differentFromExisting&&(this.collection.trigger(bs.Events.NEW_DATA_SOURCE),this.collection.trigger(bs.Events.BACKBONE_CHANGE))},View.prototype.bindModelEvents=function(){for(var key in this.modelEvents){var method=this.modelEvents[key];if(_.isFunction(method)||(method=this[this.modelEvents[key]]),method){var match=key.match(View.DELEGATE_EVENT_SPLITTER),eventName=match[1],attributeName=match[2];method=_.bind(method,this),""===attributeName?this.listenTo(this.model,eventName,method):this.model[attributeName]&&this.listenTo(this.model[attributeName],eventName,method)}}},View.prototype.bindCollectionEvents=function(){for(var eventName in this.collectionEvents){var method=this.collectionEvents[eventName];_.isFunction(method)||(method=this[this.collectionEvents[eventName]]),method&&this.listenTo(this.collection,eventName,function(){method.apply(this,arguments)})}},View.prototype.unbindModelEvents=function(){this.model&&this.stopListening(this.model)},View.prototype.unbindCollectionEvents=function(){this.collection&&this.stopListening(this.collection)},View.prototype.remove=function(){return this.unbindModelEvents(),this.unbindCollectionEvents(),_super.prototype.remove.call(this)},View.prototype.isFetchNeeded=function(){return!1},View.prototype.fetchRequiredData=function(){},View.prototype.initViewElement=function(){if(!$.contains(document.documentElement,this.$el[0])&&this.id){var $existingEl=$("#"+this.id);if($existingEl.length>0){var existingEl=$existingEl[0];this.setEl(existingEl)}else if(this.appendElToBodyIfNeeded){var $newEl=$("<div id='"+this.id+"'></div>"),newEl=$newEl[0];$("body").append($newEl),this.setEl(newEl)}}},View.prototype.render=function(){if(this.isFetchNeeded())return void this.fetchRequiredData();this.initViewElement();var html=this.getTemplateHtml();return this.$el.html(html),this.delegateEvents(this.events),this.hasRendered=!0,this.renderSubviews(),this},View.prototype.getTemplateHtml=function(){return _.template(this.template,this.model)},View.prototype.renderSubviews=function(){var _this=this;_.each(this.subviews,function(subview){var selector="."+subview.className;subview.setElement(_this.$(selector)[0]),subview.render()})},View.DELEGATE_EVENT_SPLITTER=/^(\S+)\s*(.*)$/,View}(Backbone.View);Views.View=View}(Views=bs.Views||(bs.Views={}))}(bs||(bs={}));var bs;!function(bs){var Collections;!function(Collections){var ShoppingCartItemCollection=function(_super){function ShoppingCartItemCollection(){_super.apply(this,arguments)}return __extends(ShoppingCartItemCollection,_super),ShoppingCartItemCollection.prototype.initialize=function(){this.model=bs.Models.ShoppingCartItem},ShoppingCartItemCollection.prototype.getSubtotal=function(){var subtotal=0;return this.each(function(item){subtotal+=item.Product.Price*item.Quantity}),subtotal},ShoppingCartItemCollection.prototype.getSubtotalRounded=function(){return this.getSubtotal().toFixed(2)},ShoppingCartItemCollection}(Collections.Collection);Collections.ShoppingCartItemCollection=ShoppingCartItemCollection}(Collections=bs.Collections||(bs.Collections={}))}(bs||(bs={}));var bs;!function(bs){var Models;!function(Models){var ShoppingCartPreview=function(_super){function ShoppingCartPreview(){_super.apply(this,arguments)}return __extends(ShoppingCartPreview,_super),ShoppingCartPreview.prototype.initialize=function(){this.url="/appsession/previewshoppingcart"},Object.defineProperty(ShoppingCartPreview.prototype,"items",{get:function(){return this.get("items")},set:function(value){this.set("items",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartPreview.prototype,"quantity",{get:function(){return this.get("quantity")},set:function(value){this.set("quantity",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartPreview.prototype,"quantityRounded",{get:function(){return this.quantity.toFixed(2)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartPreview.prototype,"subtotal",{get:function(){return this.get("subtotal")},set:function(value){this.set("subtotal",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartPreview.prototype,"subtotalRounded",{get:function(){return this.subtotal.toFixed(2)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartPreview.prototype,"isBillingEnabled",{get:function(){return this.get("isBillingEnabled")},set:function(value){this.set("isBillingEnabled",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartPreview.prototype,"billingSpecExists",{get:function(){return this.get("billingSpecExists")},set:function(value){this.set("billingSpecExists",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartPreview.prototype,"billingSpecConsoleLogs",{get:function(){return this.get("billingSpecConsoleLogs")},set:function(value){this.set("billingSpecConsoleLogs",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartPreview.prototype,"message",{get:function(){return this.get("message")},set:function(value){this.set("message",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartPreview.prototype,"fetchSpacebugLogs",{get:function(){return this.get("fetchSpacebugLogs")},set:function(value){this.set("fetchSpacebugLogs",value)},enumerable:!0,configurable:!0}),Object.defineProperty(ShoppingCartPreview.prototype,"hasFormChanged",{get:function(){return this.get("hasFormChanged")},set:function(value){this.set("hasFormChanged",value)},enumerable:!0,configurable:!0}),ShoppingCartPreview.prototype.parse=function(response,options){var shoppingCartItemModels=[];if(response.items){for(var i=0;i<response.items.length;i++){var item=response.items[i],shoppingCartItem={Id:item.id,Product:new bs.Models.Product({Id:item.id,Description:item.description,Name:item.name,Price:item.price}),Quantity:item.quantity};shoppingCartItemModels.push(shoppingCartItem)}response.items=new bs.Collections.ShoppingCartItemCollection(shoppingCartItemModels)}return response},ShoppingCartPreview.prototype.parseSpacebugHeader=function(jqXHR){var spacebugHeader=jqXHR.getResponseHeader("spacebug");try{var spacebugJson=JSON.parse(spacebugHeader);this.billingSpecConsoleLogs.set(this.billingSpecConsoleLogs.parse(spacebugJson))}catch(e){console.log("Unable to parse spacebug header.")}},ShoppingCartPreview.prototype.fetch=function(options){var _this=this,fetchOptions={type:"POST",data:$(this.formSelector).serialize()};return this.fetchSpacebugLogs&&$.extend(fetchOptions,{data:$(this.formSelector).serialize()+"&returnLogs=true",complete:function(jqXHR,textStatus){_this.parseSpacebugHeader(jqXHR)}}),_super.prototype.fetch.call(this,fetchOptions)},Object.defineProperty(ShoppingCartPreview.prototype,"defaults",{get:function(){return{items:new bs.Collections.ShoppingCartItemCollection,billingSpecConsoleLogs:new bs.Collections.ConsoleItemCollection,quantity:0,subtotal:0,isBillingEnabled:!1,billingSpecExists:!1,message:null}},enumerable:!0,configurable:!0}),ShoppingCartPreview}(Models.Model);Models.ShoppingCartPreview=ShoppingCartPreview}(Models=bs.Models||(bs.Models={}))}(bs||(bs={}));var bs;!function(bs){var Views;!function(Views){var ShoppingCart=function(_super){function ShoppingCart(){_super.apply(this,arguments)}return __extends(ShoppingCart,_super),Object.defineProperty(ShoppingCart.prototype,"$startButton",{get:function(){return $("#startbutton-id")},enumerable:!0,configurable:!0}),ShoppingCart.prototype.initialize=function(options){var _this=this;this.id="shopping-cart",this.template=bs.Templates.shoppingCart,this.showMessageWhenEmpty=void 0!=options.showMessageWhenEmpty?options.showMessageWhenEmpty:!0,this.listenTo(this.model,"request",function(){_this.showLoadingOverlay()}),this.listenTo(this.model,"sync",function(){_this.onSync()}),this.listenTo(this.model,"error",function(){_this.onServerError()}),_super.prototype.initialize.call(this)},ShoppingCart.prototype.showLoadingOverlay=function(){this.$startButton.addClass("disabled").attr("disabled","disabled"),this.$el.loadingOverlay("start",{html:bs.Templates.shoppingCartOverlay,css:{background:"rgba(245,245,245,0.5)"}})},ShoppingCart.prototype.onSync=function(){this.$startButton.removeClass("disabled").removeAttr("disabled"),this.render()},ShoppingCart.prototype.onServerError=function(){this.$el.loadingOverlay("done")},ShoppingCart.prototype.getTemplateHtml=function(){return this.$el.loadingOverlay("done"),_.template(this.template,{cart:this.model,showMessageWhenEmpty:this.showMessageWhenEmpty})},ShoppingCart}(Views.View);Views.ShoppingCart=ShoppingCart}(Views=bs.Views||(bs.Views={}))}(bs||(bs={}));var bs;!function(bs){var Views;!function(Views){var ProductCatalog=function(_super){function ProductCatalog(){_super.apply(this,arguments),this.template=bs.Templates.productCatalog}return __extends(ProductCatalog,_super),Object.defineProperty(ProductCatalog.prototype,"$pricingDetailsButton",{get:function(){return this.$("#pricing-details-toggle")},enumerable:!0,configurable:!0}),Object.defineProperty(ProductCatalog.prototype,"$pricingDetailsList",{get:function(){return this.$("#pricing-details-list")},enumerable:!0,configurable:!0}),ProductCatalog.prototype.initialize=function(){this.id="product-catalog",this.events={"click #pricing-details-toggle":this.togglePricingDetails},_super.prototype.initialize.call(this)},ProductCatalog.prototype.togglePricingDetails=function(){this.$pricingDetailsButton.toggleClass("active"),this.$pricingDetailsList.toggle()},ProductCatalog.prototype.getTemplateHtml=function(){var backboneProcessed=_.template(this.template,{app:this.model}),backboneDom=angular.element(backboneProcessed),$injector=angular.bootstrap(backboneDom,["bs.Areas.Apps"]),scope=$injector.get("$rootScope");scope.products=this.model.Products.models,scope.$apply();var angularProcessed=backboneDom[0].outerHTML;return function(){return angularProcessed}},ProductCatalog}(Views.View);Views.ProductCatalog=ProductCatalog}(Views=bs.Views||(bs.Views={}))}(bs||(bs={}));var bs;!function(bs){var Views;!function(Views){var ModalDialogs;!function(ModalDialogs){var EditProject=function(_super){function EditProject(options){var _this=this;void 0===options&&(options={}),_super.call(this),this.compileTemplateHTML=function(){var viewItems={model:_this.projectModel};return _.template(bs.Templates.dialogEditProject,viewItems)},this.projectModel=options.model?options.model:new bs.Models.Project}return __extends(EditProject,_super),Object.defineProperty(EditProject.prototype,"inputNameValue",{get:function(){return this.$(".input-name").val().trim()},set:function(value){this.$("input-name").val(value)},enumerable:!0,configurable:!0}),Object.defineProperty(EditProject.prototype,"inputDescriptionValue",{get:function(){return this.$(".input-description").val().trim()},set:function(value){this.$("input-description").val(value)},enumerable:!0,configurable:!0}),Object.defineProperty(EditProject.prototype,"$inputName",{get:function(){return this.$(".input-name")},enumerable:!0,configurable:!0}),Object.defineProperty(EditProject.prototype,"$inputDescription",{get:function(){return this.$(".input-description")},enumerable:!0,configurable:!0}),Object.defineProperty(EditProject.prototype,"$inputNameError",{get:function(){return this.$inputName.closest(".form-group").find(".alert")},enumerable:!0,configurable:!0}),Object.defineProperty(EditProject.prototype,"$inputDescriptionError",{get:function(){return this.$inputDescription.closest(".form-group").find(".alert")},enumerable:!0,configurable:!0}),Object.defineProperty(EditProject.prototype,"events",{get:function(){return{"click .modal-confirm":this.confirm,"change .input-description":this.validateForm,"keyup .input-name":this.validateForm}},enumerable:!0,configurable:!0}),Object.defineProperty(EditProject.prototype,"template",{get:function(){return this.compileTemplateHTML},enumerable:!0,configurable:!0}),EditProject.prototype.confirm=function(){var _this=this,result=this.projectModel.save({Name:this.inputNameValue,Description:this.inputDescriptionValue},$.extend({},bs.XHR_OPTIONS,{wait:!0,success:function(model,response,options){_this.handleSuccess(_this.projectModel,response,options)},error:function(model,xhr,options){_this.handleError(model,xhr,options)}}));console.log($.extend({},bs.XHR_OPTIONS,{wait:!0,success:this.handleSuccess,error:this.handleError})),result!==!1?(this.$(".bs-icon-gif-loading").show(),this.$("button").attr("disabled","disabled")):console.log("Parameters were invalid. Not fetching.")},EditProject.prototype.handleSuccess=function(model,response,option){this.trigger(bs.Events.CREATE_PROJECT_SUCCESS,this.projectModel),this.hide()},EditProject.prototype.handleError=function(model,xhr,options){alert(xhr.responseJSON.ResponseStatus.Message),this.$(".bs-icon-gif-loading").hide(),this.$("button").removeAttr("disabled")},EditProject.prototype.validateForm=function(e){var errors=this.projectModel.validate({Name:this.inputNameValue,Description:this.inputDescriptionValue});if(errors){errors=errors;var nameValidationError=_.findWhere(errors,{Property:"Name"}),descriptionValidationError=_.findWhere(errors,{Property:"Description"});nameValidationError?this.markInputInvalid(this.$inputName,this.$inputNameError,nameValidationError.Type,nameValidationError.Message):this.markInputValid(this.$inputName,this.$inputNameError),descriptionValidationError?this.markInputInvalid(this.$inputDescription,this.$inputDescriptionError,descriptionValidationError.Type,descriptionValidationError.Message):this.markInputValid(this.$inputDescription,this.$inputDescriptionError);var areErrorsCritical=_.where(errors,{Type:bs.Models.Validation.ERROR}).length>0;return areErrorsCritical?(this.$dialogConfirm.addClass("disabled"),this.$dialogConfirm.attr("disabled","disabled"),!1):(this.$dialogConfirm.removeClass("disabled"),this.$dialogConfirm.removeAttr("disabled"),!0)}return this.$dialogConfirm.removeClass("disabled"),this.$dialogConfirm.removeAttr("disabled"),this.markInputValid(this.$inputDescription,this.$inputDescriptionError),this.markInputValid(this.$inputName,this.$inputNameError),!0},EditProject}(ModalDialogs.ModalDialog);ModalDialogs.EditProject=EditProject}(ModalDialogs=Views.ModalDialogs||(Views.ModalDialogs={}))}(Views=bs.Views||(bs.Views={}))}(bs||(bs={}));var bs;!function(bs){var Views;!function(Views){var Spacebug=function(_super){function Spacebug(options){var _this=this;_super.call(this,options),this.compileTemplateHTML=function(){return _.template(bs.Templates.spacebug,{model:_this.model})},this.initialize(options)}return __extends(Spacebug,_super),Object.defineProperty(Spacebug.prototype,"$billingBadge",{get:function(){return this.$("[href=#spacebug-billing-console] .badge")},enumerable:!0,configurable:!0}),Object.defineProperty(Spacebug.prototype,"$toggleExpandButton",{get:function(){return this.$(".bs-developer-tools-toggle-expand")},enumerable:!0,configurable:!0}),Object.defineProperty(Spacebug.prototype,"$container",{get:function(){return this.$(".bs-developer-tools")},enumerable:!0,configurable:!0}),Object.defineProperty(Spacebug.prototype,"$consoleContainer",{get:function(){return this.$(".bs-developer-tools-console-container")},enumerable:!0,configurable:!0}),Object.defineProperty(Spacebug.prototype,"$header",{get:function(){return this.$(".bs-developer-tools-header")},enumerable:!0,configurable:!0}),Spacebug.prototype.initialize=function(options){var _this=this;options.model&&(this.model=options.model),this.addRegion("billingSpecRegion",".bs-spacebug-billingspec-region"),this.listenTo(this.model.billingSpecConsoleItems,"add",function(){
_this.onBillingSpecConsoleAdd()}),$(window).on("realWindowResize",function(){_this.onWindowResize()})},Spacebug.prototype.events=function(){var _this=this;return{"click #bs-developer-tools-tabs > li > a":function(e){_this.onClickTab(e)},"click #send-to-agent-button-id":function(){_this.submitForm("SendToAgent")},"click #simulate-launch-button-id":function(){_this.submitForm("SimulateLaunch")},"click #create-appsession-button-id":function(){_this.submitForm("SimulateAndCreateAppSession")},"click .bs-developer-tools-toggle-expand":function(){_this.onClickToggleExpand()}}},Spacebug.prototype.submitForm=function(method){$("#configuration-form-start-method").val(method),$("#configuration-form").removeAttr("target"),$("#configuration-form").submit()},Spacebug.prototype.onClickTab=function(e){var $target=$(e.currentTarget);$target.closest("li").addClass("active").siblings().removeClass("active");var $sectionToShow=$($target.attr("href"));$sectionToShow.show().siblings().hide()},Spacebug.prototype.onClickToggleExpand=function(){this.$toggleExpandButton.toggleClass("icon-arrow-down").toggleClass("icon-arrow-up"),this.$container.toggleClass("expanded"),this.onWindowResize()},Spacebug.prototype.onWindowResize=function(){this.$container.hasClass("expanded")?this.$consoleContainer.height(this.$container.outerHeight()-this.$header.outerHeight()):this.$consoleContainer.removeAttr("style")},Spacebug.prototype.onBillingSpecConsoleAdd=function(){this.$billingBadge.text(this.model.billingSpecConsoleItems.length)},Spacebug.prototype.onRender=function(){this.billingSpec=new SpacebugConsole({collection:this.model.billingSpecConsoleItems}),this.billingSpecRegion.show(this.billingSpec)},Object.defineProperty(Spacebug.prototype,"template",{get:function(){return this.compileTemplateHTML()},enumerable:!0,configurable:!0}),Spacebug}(Marionette.Layout);Views.Spacebug=Spacebug;var SpacebugConsole=function(_super){function SpacebugConsole(){_super.apply(this,arguments),this.compileTemplateHTML=function(){return _.template(bs.Templates.spacebugConsole,{})}}return __extends(SpacebugConsole,_super),SpacebugConsole.prototype.initialize=function(){var _this=this;this.itemViewOptions={tagName:"li",className:"bs-console-item"},this.itemView=SpacebugConsoleItem,this.itemViewContainer="ul",this.collectionEvents={sort:function(){_this.render()}}},Object.defineProperty(SpacebugConsole.prototype,"template",{get:function(){return this.compileTemplateHTML()},enumerable:!0,configurable:!0}),SpacebugConsole}(Marionette.CompositeView);Views.SpacebugConsole=SpacebugConsole;var SpacebugConsoleItem=function(_super){function SpacebugConsoleItem(){var _this=this;_super.apply(this,arguments),this.compileTemplateHTML=function(){return _.template(bs.Templates.spacebugConsoleItem,{item:_this.model})}}return __extends(SpacebugConsoleItem,_super),SpacebugConsoleItem.prototype.initialize=function(options){this.modelEvents={change:this.render}},Object.defineProperty(SpacebugConsoleItem.prototype,"template",{get:function(){return this.compileTemplateHTML()},enumerable:!0,configurable:!0}),Object.defineProperty(SpacebugConsoleItem.prototype,"$consoleMessage",{get:function(){return this.$(".bs-console-message")},enumerable:!0,configurable:!0}),SpacebugConsoleItem.prototype.onRender=function(){var json=!1;try{json=JSON.parse(this.$consoleMessage.text())}catch(e){}if(json){var prettyJson=vkbeautify.json(this.$consoleMessage.text());this.$consoleMessage.html(prettyJson)}},SpacebugConsoleItem}(Marionette.CompositeView);Views.SpacebugConsoleItem=SpacebugConsoleItem}(Views=bs.Views||(bs.Views={}))}(bs||(bs={}));var bs;!function(bs){bs.isDeveloperMode=!1,bs.cachedForm="",bs.cachedXhr=null,bs.onFormChange=function(){bs.shoppingCart.hasFormChanged=!0}}(bs||(bs={})),$(function(){bs.initSiteConfiguration();var formId="configuration-form",formLaunchMethodId="configuration-form-start-method",appId=$("#app-config").data("bsAppId");bs.isDeveloperMode=$("#app-config").data("bsIsDeveloperMode");var app=new bs.Models.Application({Id:appId});bs.shoppingCart=new bs.Models.ShoppingCartPreview({fetchSpacebugLogs:bs.isDeveloperMode}),bs.shoppingCart.formSelector="#"+formId,bs.isDeveloperMode&&(bs.spacebug=new bs.Views.Spacebug({model:new bs.Models.SpacebugModel({formSelector:"#"+formId,formLaunchMethodSelector:"#"+formLaunchMethodId,billingSpecConsoleItems:bs.shoppingCart.billingSpecConsoleLogs,agentId:$("#app-config").data("bsSpacebugAgentId"),devPortalUrl:$("#app-config").data("bsSpacebugDevPortalUrl"),missionControlUrl:$("#app-config").data("bsMissionControlUrl")})}));var onLoadBillingInfo=(setInterval(function(){if(bs.shoppingCart.hasFormChanged){bs.shoppingCart.hasFormChanged=!1;var latestForm=$.md5($("#"+formId).serialize());bs.cachedForm!=latestForm&&(bs.cachedForm=latestForm,bs.cachedXhr&&bs.cachedXhr.abort(),bs.cachedXhr=bs.shoppingCart.fetch(),bs.cachedXhr.fail(function(jqXhr,textStatus,errorThrown){"abort"!=textStatus&&onFail(!1,jqXhr.responseJSON)}))}},500),function(){if(app.IsBillingActivated&&bs.shoppingCart.billingSpecExists){var $form=$("#"+formId);$form.on("focusout",":input",bs.onFormChange),$form.on("change",":input",bs.onFormChange)}var shoppingCartView=new bs.Views.ShoppingCart({model:bs.shoppingCart,showMessageWhenEmpty:bs.shoppingCart.billingSpecExists&&app.ActiveSubscriptions.length<1?!0:!1});shoppingCartView.render();var productCatalogView=new bs.Views.ProductCatalog({model:app});productCatalogView.render(),bs.isDeveloperMode&&(bs.spacebug.setElement($(".bs-developer-tools-container")),bs.spacebug.render())}),onFail=function(initialFail,responseJson){if($("#site-config").data("bs-is-store-available"))if(responseJson.ResponseStatus&&responseJson.ResponseStatus.ErrorCode===bs.Errors.Store.errorCodes.InvalidApplicationId)initialFail&&onLoadBillingInfo();else{$("#startbutton-id").addClass("disabled").attr("disabled","disabled");var message="Error generating the shopping cart preview:\n\n "+(responseJson.Message?responseJson.Message:"(No error message provided by server)");alert(message)}};app.fetch(bs.XHR_OPTIONS).then(function(){app.IsBillingActivated?$.when(bs.shoppingCart.fetch(bs.XHR_OPTIONS),app.Products.fetch(bs.XHR_OPTIONS),app.ActiveSubscriptions.fetch(bs.XHR_OPTIONS)).then(onLoadBillingInfo,function(jqXhr,textStatus,errorThrown){onFail(!0,jqXhr.responseJSON)}):onLoadBillingInfo()})});
//# sourceMappingURL=bundles.shoppingcart.min.js.map
